
						/*
						The CALCULATE command controls the aggregation of leaf cells in the cube.
						If the CALCULATE command is deleted or modified, the data within the cube is affected.
						You should edit this command only if you manually specify how the cube is aggregated.
						*/
						CALCULATE; 


                       	/* BEGIN Set Default Members */



						//df1
						ALTER CUBE CURRENTCUBE UPDATE DIMENSION [Currency Scaling], DEFAULT_MEMBER='[Currency Scaling].[Currency Scaling].[Euro (k)]'; 


						//df2
						ALTER CUBE CURRENTCUBE UPDATE DIMENSION [Date Comparison], DEFAULT_MEMBER='[Date Comparison].[Date Comparison].[Current Period]'; 

						//df3
						ALTER CUBE CURRENTCUBE UPDATE DIMENSION [Measure], DEFAULT_MEMBER='[Measure].[Measure].&[M1_TTO001]'; 

						//df4
						ALTER CUBE CURRENTCUBE UPDATE DIMENSION [Calendar].[Calendar Hierarchy],
						DEFAULT_MEMBER=
						FILTER([Calendar].[Calendar Hierarchy].[Month].Members
						,[Calendar].[Calendar Hierarchy].CurrentMember.Properties( "Current Month Flag" )
						).ITEM(0); 
                        /* Current Month*/
						
						//df5
						ALTER CUBE CURRENTCUBE UPDATE DIMENSION [Volume Ratio], DEFAULT_MEMBER='[Volume Ratio].[Volume Ratio].[Absolute Value]'; 

						//df6
						ALTER CUBE CURRENTCUBE UPDATE DIMENSION [Period], DEFAULT_MEMBER='[Period].[Period].[CY]'; 

                        //df7
                        ALTER CUBE CURRENTCUBE UPDATE DIMENSION [Scenario FC], DEFAULT_MEMBER='[Scenario FC].[Scenario FC].[No Forecast]'; 

						-- 0 Added on request by Amit to enable speedy browsing of dimensions
						CREATE MEMBER CURRENTCUBE.[Dummy]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 0; 

	                     -- 0 Added on request by Aishwarya to enable speedy browsing for Future Finance	
                        CREATE MEMBER CURRENTCUBE.[DummyForecast]			
                        AS NULL,			
                        ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',			
                        VISIBLE = 0; 
						
						CREATE MEMBER CURRENTCUBE.[DummyForecastOnly]			
                        AS NULL,			
                        ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Only Metrics',			
                        VISIBLE = 0;
						
                        //df8
						ALTER CUBE CURRENTCUBE UPDATE DIMENSION [Measures], DEFAULT_MEMBER='[Measures].[Dummy]'; 

						/* NRM Months*/
						CREATE SET [NRM Months]
                        AS LASTPERIODS(13,FILTER( [Calendar].[Calendar Hierarchy].[Month].MEMBERS
						, [Calendar].[Calendar Hierarchy].CURRENTMEMBER.PROPERTIES("Current Month Flag")
						).ITEM(0)) ; 

						CREATE SET [NRM Months Trend]
                        AS PERIODSTODATE([Calendar].[Calendar Hierarchy].[Year],[Calendar].[Calendar Hierarchy].CURRENTMEMBER) ; 

                       	CREATE SET [CrYr]
                        AS ANCESTOR([NRM Months].ITEM(12),[Calendar].[Calendar Hierarchy].[Year]) ; 

						CREATE SET [PrYr]
                        AS PARALLELPERIOD([Calendar].[Calendar Hierarchy].[Year],1, [CrYr].ITEM(0)) ; 

						CREATE SET [CrPrYrMonths]
                        AS DESCENDANTS({[CrYr],[PrYr]},[Calendar].[calendar Hierarchy].[Month]) ; 

                        CREATE SET [Last 13 Months]
                        AS [Calendar].[Calendar Hierarchy].CURRENTMEMBER.Lag(13):[Calendar].[Calendar Hierarchy].CURRENTMEMBER;
						/* End Set Default Members */

						/*Measure Set*/
						CREATE SET [COP] AS
						{   [Measure].[Measure].&[M1_GM],
						[Measure].[Measure].&[M1_GSV001],
						[Measure].[Measure].&[M1_LTK001],
						[Measure].[Measure].&[M1_NIV001],
						[Measure].[Measure].&[M1_TTGSV],
						[Measure].[Measure].&[M1_TTO001],
						[Measure].[Measure].&[M1_UPG],
						[Measure].[Measure].&[M1_USG],
						[Measure].[Measure].&[M1_UVG],
						[Measure].[Measure].&[M2_SCC00R],
						[Measure].[Measure].&[M4_INDR0C],
						[Measure].[Measure].&[M4_MDC001],
						[Measure].[Measure].&[PTO_BMI],
						[Measure].[Measure].&[PTO_COP],
						[Measure].[Measure].&[PTO_OVH],
						[Measure].[Measure].&[T_TRXR0C],
						[Measure].[Measure].&[T3_GP0001],
						[Measure].[Measure].&[T4_PBO001],
						[Measure].[Measure].&[YOY_GM],
						[Measure].[Measure].&[PGSV_BBTOT],
						[Measure].[Measure].&[M1_LT0001],
						[Measure].[Measure].&[M1_BBT001GSV],
						[Measure].[Measure].&[M1_EOT001GSV],
						[Measure].[Measure].&[M1_NSV001],
						[Measure].[Measure].&[M1_OT0001GSV],
						[Measure].[Measure].&[T4_PBO001TO]
						}; 

						CREATE SET [COP Short] AS
						{
						[Measure].[Measure].&[M1_GM],
						[Measure].[Measure].&[M1_GSV001],
						[Measure].[Measure].&[M1_TTO001],
						[Measure].[Measure].&[M1_UPG],
						[Measure].[Measure].&[M1_USG],
						[Measure].[Measure].&[M1_UVG],
						[Measure].[Measure].&[M4_MDC001],
						[Measure].[Measure].&[PTO_BMI],
						[Measure].[Measure].&[PTO_COP],
						[Measure].[Measure].&[T_TRXR0C],
						[Measure].[Measure].&[T3_GP0001],
						[Measure].[Measure].&[T4_PBO001],
						[Measure].[Measure].&[T4_PBO001TO]
						}; 

						CREATE SET [CC Short] AS
						{
						[Measure].[Measure].&[M1_GM],
						[Measure].[Measure].&[M1_GSV001],
						[Measure].[Measure].&[M1_LTK001],
						[Measure].[Measure].&[M1_TTGSV],
						[Measure].[Measure].&[M1_TTO001],
						[Measure].[Measure].&[M1_UPG],
						[Measure].[Measure].&[M1_USG],
						[Measure].[Measure].&[M1_UVG],
						[Measure].[Measure].&[M4_INDR0T],
						[Measure].[Measure].&[M4_MDC01T],
						[Measure].[Measure].&[M7_CC0001],
						[Measure].[Measure].&[PTO_BMI_TR],
						[Measure].[Measure].&[PTO_CC],
						[Measure].[Measure].&[PTO_OVH_TR],
						[Measure].[Measure].&[T3_GP0001],
						[Measure].[Measure].&[PGSV_BBTOT],
						[Measure].[Measure].&[M1_LT0001],
						[Measure].[Measure].&[M1_BBT001GSV],
						[Measure].[Measure].&[M1_EOT001GSV],
						[Measure].[Measure].&[M1_OT0001GSV]
						}; 


						CREATE SET [CC] AS
						{
						[Measure].[Measure].&[M1_BBT001],
						[Measure].[Measure].&[M1_BDT00R],
						[Measure].[Measure].&[M1_BP0001],
						[Measure].[Measure].&[M1_BPDCT1],
						[Measure].[Measure].&[M1_BPLACE],
						[Measure].[Measure].&[M1_BPROP1],
						[Measure].[Measure].&[M1_BSN001],
						[Measure].[Measure].&[M1_EL0001],
						[Measure].[Measure].&[M1_EOT001],
						[Measure].[Measure].&[M1_EP0001],
						[Measure].[Measure].&[M1_GSV001],
						[Measure].[Measure].&[M1_LTK001],
						[Measure].[Measure].&[M1_NIV001],
						[Measure].[Measure].&[M1_OC0001],
						[Measure].[Measure].&[M1_OG0001],
						[Measure].[Measure].&[M1_OR0001],
						[Measure].[Measure].&[M1_OT0001],
						[Measure].[Measure].&[M1_PROMO1],
						[Measure].[Measure].&[M1_TSD001],
						[Measure].[Measure].&[M1_TTGSV],
						[Measure].[Measure].&[M1_TTO],
						[Measure].[Measure].&[M1_TTO001],
						[Measure].[Measure].&[M1_UPG],
						[Measure].[Measure].&[M1_USG],
						[Measure].[Measure].&[M1_UVG],
						[Measure].[Measure].&[PM_BBOT],
						[Measure].[Measure].&[YOY_BBTOT],
						[Measure].[Measure].&[YOY_GSV],
						[Measure].[Measure].&[PGSV_BBTOT],
						[Measure].[Measure].&[M1_LT0001],
						[Measure].[Measure].&[M1_BBT001GSV],
						[Measure].[Measure].&[M1_BP0001GSV],
						[Measure].[Measure].&[M1_EOT001GSV],
						[Measure].[Measure].&[M1_NSV001],
						[Measure].[Measure].&[M1_OT0001GSV],
						[Measure].[Measure].&[M1_BDT00RGSV],
						[Measure].[Measure].&[M1_BPDCT1GSV],
						[Measure].[Measure].&[M1_BPLACEGSV],
						[Measure].[Measure].&[M1_BPROP1GSV],
						[Measure].[Measure].&[M1_BSN001GSV],
						[Measure].[Measure].&[M1_EL0001GSV],
						[Measure].[Measure].&[M1_EP0001GSV],
						[Measure].[Measure].&[M1_OC0001GSV],
						[Measure].[Measure].&[M1_OG0001GSV],
						[Measure].[Measure].&[M1_OR0001GSV],
						[Measure].[Measure].&[M1_PROMO1GSV]
						}; 

                    CREATE SET [UOP] AS
                    {   [Measure].[Measure].&[M1_GM],
                        [Measure].[Measure].&[M1_GSV001],
                        [Measure].[Measure].&[M1_LTK001],
                        [Measure].[Measure].&[M1_NIV001],
                        [Measure].[Measure].&[M1_TTGSV],
                        [Measure].[Measure].&[M1_TTO001],
                        [Measure].[Measure].&[M1_UPG],
                        [Measure].[Measure].&[M1_USG],
                        [Measure].[Measure].&[M1_UVG],
                        [Measure].[Measure].&[M2_SCC00R],
                        [Measure].[Measure].&[M4_INDR0C],
                        [Measure].[Measure].&[M4_MDC001],
                        [Measure].[Measure].&[PTO_BMI],
                        [Measure].[Measure].&[PTO_OVH],
                        [Measure].[Measure].&[T3_GP0001],
                        [Measure].[Measure].&[T4_PBO001],
                        [Measure].[Measure].&[YOY_GM],
                        [Measure].[Measure].&[PGSV_BBTOT],
                        [Measure].[Measure].&[M1_LT0001],
                        [Measure].[Measure].&[M1_BBT001GSV],
                        [Measure].[Measure].&[M1_EOT001GSV],
                        [Measure].[Measure].&[M1_NSV001],
                        [Measure].[Measure].&[M1_OT0001GSV],
                        [Measure].[Measure].&[T4_PBO001TO],
                        [Measure].[Measure].&[ADP0020],
                        [Measure].[Measure].&[ADP0390],
                        [Measure].[Measure].&[ADP0580],
                        [Measure].[Measure].&[OVH0212],
                        [Measure].[Measure].&[OVH0211],
                        [Measure].[Measure].&[PTO_OVH0212]
                    }; 
                    
                    CREATE SET [UOP Medium] AS 
                    {
                        [Measure].[Measure].&[M1_GM],
                        [Measure].[Measure].&[M1_GSV001],
                        [Measure].[Measure].&[M1_TTO001],
                        [Measure].[Measure].&[M1_UPG],
                        [Measure].[Measure].&[M1_USG],
                        [Measure].[Measure].&[M1_UVG],
                        [Measure].[Measure].&[M4_MDC001],
                        [Measure].[Measure].&[PTO_BMI],
                        [Measure].[Measure].&[T3_GP0001],
                        [Measure].[Measure].&[T4_PBO001],
                        [Measure].[Measure].&[T4_PBO001TO],
                        [Measure].[Measure].&[OVH0212],
                        [Measure].[Measure].&[OVH0211],
                        [Measure].[Measure].&[PTO_OVH0212]
                    }; 
					
					CREATE SET [UOP Short] AS 
                    {
                        [Measure].[Measure].&[M1_GM],                    
                        [Measure].[Measure].&[M1_TTO001],
                        [Measure].[Measure].&[M1_UPG],
                        [Measure].[Measure].&[M1_USG],
                        [Measure].[Measure].&[M1_UVG],
                        [Measure].[Measure].&[M4_MDC001],
                        [Measure].[Measure].&[PTO_BMI],
                        [Measure].[Measure].&[T3_GP0001],
                        [Measure].[Measure].&[T4_PBO001],
                        [Measure].[Measure].&[T4_PBO001TO]
                    }; 

                    CREATE SET [UOP Short Raw] AS 
                    {
                        [Measure].[Measure].&[M1_GM_RAW],
                        [Measure].[Measure].&[M1_TTO001],
                        [Measure].[Measure].&[M1_UPG_RAW],
                        [Measure].[Measure].&[M1_USG_RAW],
                        [Measure].[Measure].&[M1_UVG_RAW],
                        [Measure].[Measure].&[M4_MDC001],
                        [Measure].[Measure].&[PTO_BMI],
                        [Measure].[Measure].&[T3_GP0001],
                        [Measure].[Measure].&[T4_PBO001],
                        [Measure].[Measure].&[T4_PBO001TO]
                    }; 


                    CREATE SET [SC Details] AS 
                    {
                        [Measure].[Measure].&[M1_LTK001],
                        [Measure].[Measure].&[M1_GSV001],
                        [Measure].[Measure].&[M1_TTO001],
                        [Measure].[Measure].&[T3_GP0001],
                        [Measure].[Measure].&[M1_GM],
                        [Measure].[Measure].&[M2_SCC00R],
                        [Measure].[Measure].&[COG0020],
                        [Measure].[Measure].&[COG0060],
                        [Measure].[Measure].&[COG0330],
                        [Measure].[Measure].&[COG0490],
                        [Measure].[Measure].&[COG0690],
                        [Measure].[Measure].&[COG0900],
                        [Measure].[Measure].&[COG0910],
                        [Measure].[Measure].&[COG1030],
                        [Measure].[Measure].&[COG1040]
                    }; 

                    CREATE SET [BMI Details] AS 
                    {
                        [Measure].[Measure].&[M1_TTO001],
                        [Measure].[Measure].&[T3_GP0001],
                        [Measure].[Measure].&[M1_GM],
                        [Measure].[Measure].&[M4_MDC001],
                        [Measure].[Measure].&[ADP0020],
                        [Measure].[Measure].&[ADP0030],
                        [Measure].[Measure].&[ADP0040],
                        [Measure].[Measure].&[ADP0070],
                        [Measure].[Measure].&[ADP0100],
                        [Measure].[Measure].&[ADP0110],
                        [Measure].[Measure].&[ADP0220],
                        [Measure].[Measure].&[ADP0320],
                        [Measure].[Measure].&[M4_ACA000],
                        [Measure].[Measure].&[ADP0390],
                        [Measure].[Measure].&[ADP0400],
                        [Measure].[Measure].&[ADP0430],
                        [Measure].[Measure].&[ADP0460],
                        [Measure].[Measure].&[ADP0490],
                        [Measure].[Measure].&[ADP0520],
                        [Measure].[Measure].&[ADP0550],
                        [Measure].[Measure].&[ADP0580],
                        [Measure].[Measure].&[ADP0590],
                        [Measure].[Measure].&[ADP0610],
                        [Measure].[Measure].&[M4_MDC01T],
                        [Measure].[Measure].&[T4_PBO001]
                    }; 

                    CREATE SET [Overhead Details] AS 
                    {
                        [Measure].[Measure].&[M1_TTO001],
                        [Measure].[Measure].&[T3_GP0001],
                        [Measure].[Measure].&[M4_MDC001],
                        [Measure].[Measure].&[T4_PBO001],
                        [Measure].[Measure].&[OVH0060],
                        [Measure].[Measure].&[M5_SO0001],
                        [Measure].[Measure].&[M4_MRTOTT],
                        [Measure].[Measure].&[OVH0062],
                        [Measure].[Measure].&[OVH0030],
                        [Measure].[Measure].&[OVH0211],
                        [Measure].[Measure].&[OVH0150],
                        [Measure].[Measure].&[OVH0212]
                    }; 

                    CREATE SET [PBO Minimal] AS 
                    {
                        [Measure].[Measure].&[M1_GSV001],
                        [Measure].[Measure].&[M1_TTO001],
                        [Measure].[Measure].&[M1_UPG],
                        [Measure].[Measure].&[M1_USG],
                        [Measure].[Measure].&[T3_GP0001],
                        [Measure].[Measure].&[M1_GM],
                        [Measure].[Measure].&[M4_MDC001],
                        [Measure].[Measure].&[T4_PBO001]
                    }; 

						--NRM Changes - Product Lifecycle Dimension
						--Package Innovation
						SCOPE([Product Lifecycle].[Product Lifecycle].&[3],
						[Product].[Global Product Category Hierarchy].[Size Pack Form Variant].MEMBERS,
						[Management Unit].[Management Unit Hierarchy].[GBU].MEMBERS,
						[Calendar].[Calendar Hierarchy].[Month].MEMBERS,
						[Measures].[Value]); 
						THIS = IIF( [Measures].[Pack] >=1, [Measures].[Value],NULL); 
						END SCOPE; 

						SCOPE([Product Lifecycle].[Product Lifecycle].&[3],
						[Product].[Global Product Category Hierarchy].[Size Pack Form Variant].MEMBERS,
						[Management Unit].[Management Unit Hierarchy].[GBU].MEMBERS,
						[Calendar].[Calendar Hierarchy].[Month].MEMBERS,
						[Measures].[NRM Value]); 
						THIS = IIF( [Measures].[Pack] >=1, [Measures].[NRM Value],NULL); 
						END SCOPE; 

						--Product Innovation
						SCOPE([Product Lifecycle].[Product Lifecycle].&[2],
						[Product].[Global Product Category Hierarchy].[Size Pack Form Variant].MEMBERS,
						[Management Unit].[Management Unit Hierarchy].[GBU].MEMBERS,
						[Calendar].[Calendar Hierarchy].[Month].MEMBERS,
						[Measures].[Value]); 
						THIS = IIF( [Measures].[Product] >=1, [Measures].[Value],NULL); 
						END SCOPE; 

						SCOPE([Product Lifecycle].[Product Lifecycle].&[2],
						[Product].[Global Product Category Hierarchy].[Size Pack Form Variant].MEMBERS,
						[Management Unit].[Management Unit Hierarchy].[GBU].MEMBERS,
						[Calendar].[Calendar Hierarchy].[Month].MEMBERS,
						[Measures].[NRM Value]); 
						THIS = IIF( [Measures].[Product] >=1, [Measures].[NRM Value],NULL); 
						END SCOPE; 

						--Ongoing
						SCOPE([Product Lifecycle].[Product Lifecycle].&[1],
						[Product].[Global Product Category Hierarchy].[Size Pack Form Variant].MEMBERS,
						[Management Unit].[Management Unit Hierarchy].[GBU].MEMBERS,
						[Calendar].[Calendar Hierarchy].[Month].MEMBERS,
						[Measures].[Value]); 
						THIS = IIF( ([Measures].[Pack] >=1 OR [Measures].[Product] >= 1) , NULL,[Measures].[Value]); 
						END SCOPE; 

						SCOPE([Product Lifecycle].[Product Lifecycle].&[1],
						[Product].[Global Product Category Hierarchy].[Size Pack Form Variant].MEMBERS,
						[Management Unit].[Management Unit Hierarchy].[GBU].MEMBERS,
						[Calendar].[Calendar Hierarchy].[Month].MEMBERS,
						[Measures].[NRM Value]); 
						THIS = IIF( [Measures].[Pack] >=1 OR [Measures].[Product] >= 1,NULL,[Measures].[NRM Value]); 
						END SCOPE; 
						--NRM Changes - Product Lifecycle Dimension

						//Victory GMI scenario

                        SCOPE([Scenario].[Scenario].[Victory GMI]);
                        THIS = [Scenario].[Scenario].[GMI];
                        END SCOPE;
						
						//Forecast scopes
                        SCOPE(	
                        { FILTER([Calendar].[Month].Members			
                        ,[Calendar].[Month].CurrentMember.Properties( "Previous Forecast Month" )			
                        ).ITEM(0):TAIL([Calendar].[Month].[Month].MEMBERS,1).ITEM(0)},			
                        [Scenario FC].[Scenario FC].[Previous Forecast],			
                        [Measures].[Forecast Value]			
                        ); 			
                        [Measures].[Value] = NULL; 			
                        END SCOPE; 
				
                        SCOPE(			
                        { FILTER([Calendar].[Month].Members			
                        ,[Calendar].[Month].CurrentMember.Properties( "Current Forecast Month" )			
                        ).ITEM(0):TAIL([Calendar].[Month].[Month].MEMBERS,1).ITEM(0)},			
                        [Scenario FC].[Scenario FC].[Current Forecast],		
                        [Measures].[Forecast Value]			
                        ); 			
                        [Measures].[Value] = NULL;					
                        END SCOPE; 					
						

                        SCOPE(			
                        { FILTER([Calendar].[Calendar Hierarchy].Members			
                        ,[Calendar].[Month].CurrentMember.Properties( "Current Month Flag" )			
                        ).ITEM(0).PARENT.FIRSTSIBLING.FIRSTCHILD
                        :TAIL([Calendar].[Calendar Hierarchy].[Month].MEMBERS,1).ITEM(0)},			
                        [Scenario FC].[Scenario FC].[Annual Target],			
                        [Measures].[Forecast Value]			
                        ); 			
                        [Measures].[Value] = NULL; 			
                        END SCOPE; 	

                        SCOPE(			
                        { FILTER([Calendar].[Month].Members			
                        ,[Calendar].[Month].CurrentMember.Properties( "Current Forecast Month" )			
                        ).ITEM(0):TAIL([Calendar].[Month].[Month].MEMBERS,1).ITEM(0)},			
                        [Scenario FC].[Scenario FC].[Machine Forecast],			
                        [Measures].[Forecast Value]			
                        ); 			
                        [Measures].[Value] = NULL; 			
                        END SCOPE; 	

                        //Added scope to make all values NULL for previous PFC periods
						 SCOPE(	
                        { HEAD([Calendar].[Month].[Month].MEMBERS,1).ITEM(0):FILTER([Calendar].[Month].Members			
                        ,[Calendar].[Month].CurrentMember.Properties( "Previous Forecast Month" )			
                        ).ITEM(0).LAG(1)},			
                        [Scenario FC].[Scenario FC].[Previous Forecast],			
                        [Measures].[Forecast Value]			
                        ); 			
                        [Measures].[Forecast Value] = NULL; 			
                        END SCOPE;

						 SCOPE(	
                        { HEAD([Calendar].[Month].[Month].MEMBERS,1).ITEM(0):FILTER([Calendar].[Month].Members			
                        ,[Calendar].[Month].CurrentMember.Properties( "Previous Forecast Month" )			
                        ).ITEM(0).LAG(1)},			
                        [Scenario FC].[Scenario FC].[Previous Forecast],			
                        {[Measures].[Forecast Only Value],[Measures].[Forecast Only Value -1M]}			
                        ); 			
                        THIS = NULL; 			
                        END SCOPE;


					    //VICTORY FORECAST SCOPES
					    --CFC Q blending with Actuals
					    SCOPE(	
                        { FILTER([Calendar].[Month].Members			
                        ,[Calendar].[Month].CurrentMember.Properties("Current Victory Forecast Quarter")			
                        ).ITEM(0):TAIL([Calendar].[Month].[Month].MEMBERS,1).ITEM(0)},			
                        [Scenario FC].[Scenario FC].[Victory Quarterly Current Forecast],			
                        [Measures].[Forecast Value]			
                        ); 			
                        [Measures].[Value] = NULL; 			
                        END SCOPE;

                        --CFC M blending with Actuals
					    SCOPE(	
                        { FILTER([Calendar].[Month].Members			
                        ,[Calendar].[Month].CurrentMember.Properties("Current Victory Forecast Month")			
                        ).ITEM(0):TAIL([Calendar].[Month].[Month].MEMBERS,1).ITEM(0)},			
                        [Scenario FC].[Scenario FC].[Victory Monthly Current Forecast],			
                        [Measures].[Forecast Value]			
                        ); 			
                        [Measures].[Value] = NULL; 			
                        END SCOPE;

					    --PFC Q blending with Actuals
					    SCOPE(	
                        { FILTER([Calendar].[Month].Members			
                        ,[Calendar].[Month].CurrentMember.Properties( "Previous Victory Forecast Quarter" )			
                        ).ITEM(0):TAIL([Calendar].[Month].[Month].MEMBERS,1).ITEM(0)},			
                        [Scenario FC].[Scenario FC].[Victory Quarterly Previous Forecast],			
                        [Measures].[Forecast Value]			
                        ); 			
                        [Measures].[Value] = NULL; 			
                        END SCOPE;

                        --PFC M blending with Actuals
					    SCOPE(	
                        { FILTER([Calendar].[Month].Members			
                        ,[Calendar].[Month].CurrentMember.Properties( "Previous Victory Forecast Month" )			
                        ).ITEM(0):TAIL([Calendar].[Month].[Month].MEMBERS,1).ITEM(0)},			
                        [Scenario FC].[Scenario FC].[Victory Monthly Previous Forecast],			
                        [Measures].[Forecast Value]			
                        ); 			
                        [Measures].[Value] = NULL; 			
                        END SCOPE;
													                     

										
                    SCOPE({[Scenario FC].[Scenario FC].[Current Forecast]
                    ,[Scenario FC].[Scenario FC].[Previous Forecast]
                    ,[Scenario FC].[Scenario FC].[Annual Target]
                    ,[Scenario FC].[Scenario FC].[Machine Forecast]
                    ,[Scenario FC].[Scenario FC].[Victory Quarterly Previous Forecast]
                    ,[Scenario FC].[Scenario FC].[Victory Monthly Current Forecast]
                    ,[Scenario FC].[Scenario FC].[Victory Monthly Previous Forecast]
                    ,[Scenario FC].[Scenario FC].[Victory Quarterly Current Forecast]
                    } 
                    ,[Measures].[Forecast Value]); 			
                    THIS  = ([Measures].[Value] + [Measures].[Forecast Value]); 
                    FORMAT_STRING(THIS) = "#,##0.0";			
                    END SCOPE; 
			

                    SCOPE([Scenario FC].[Scenario FC].[No Forecast],[Measures].[Forecast Value]); 			
                    THIS = [Measures].[Value]; 			
                    END SCOPE; 
            
                    					
					SCOPE({[Scenario].[Scenario].[Victory 600],[Scenario].[Scenario].[Draft Victory 600]},[Scenario FC].[Scenario FC].[Current Forecast],[Measures].[Forecast Value]);
                    THIS = (ABS([Calendar].[Month].DefaultMember.Properties("v Cfc q flag"))*([Scenario FC].[Scenario FC].[Victory Quarterly Current Forecast],[Measures].[Forecast Value]))+
	                       ((1-ABS([Calendar].[Month].DefaultMember.Properties("v Cfc q flag")))*([Scenario FC].[Scenario FC].[Victory Monthly Current Forecast],[Measures].[Forecast Value]));
                    END SCOPE;

                    SCOPE({[Scenario].[Scenario].[Victory 600],[Scenario].[Scenario].[Draft Victory 600]},[Scenario FC].[Scenario FC].[Previous Forecast],[Measures].[Forecast Value]);
                    THIS = (ABS([Calendar].[Month].DefaultMember.Properties("v Pfc q flag"))*([Scenario FC].[Scenario FC].[Victory Quarterly Current Forecast],[Measures].[Forecast Value])) +
	                       (
								(1-ABS([Calendar].[Month].DefaultMember.Properties("v Pfc q flag")))
									*(
										(ABS([Calendar].[Month].DefaultMember.Properties("v Cfc q flag"))*([Scenario FC].[Scenario FC].[Victory Monthly Current Forecast],[Measures].[Forecast Value]))
										+
										((1-ABS([Calendar].[Month].DefaultMember.Properties("v Cfc q flag")))*([Scenario FC].[Scenario FC].[Victory Monthly Previous Forecast],[Measures].[Forecast Value]))
									)
							);
									
                    END SCOPE;

                    SCOPE({[Scenario FC].[Scenario FC].[Annual Target],[Scenario FC].[Scenario FC].[Machine Forecast]}
                            , [Scenario].[Scenario Type].[Victory]
                            , [Measures].[Forecast Value]); 			
                    THIS = NULL; 			
                    END SCOPE; 
					
                    SCOPE([Currency Scaling].[Currency Scaling].[Euro],[Management Unit].[Management Unit Hierarchy].[GBU].MEMBERS);  
                    THIS = IIF
                    (
                    [Measure].[Measure].CURRENTMEMBER.Properties( "Measure Type" ) <> "Ratio"
                    AND  [Measure].[Measure].CURRENTMEMBER.Properties( "Measure Type" ) <> "Volume"
                    ,
                    (   ([Currency Scaling].[Currency Scaling].[Stored Currency])/
                        [Management Unit].[Management Unit Hierarchy].CURRENTMEMBER.PROPERTIES("Stored Currency Conv Factor")
                    )
                    ,   ([Currency Scaling].[Currency Scaling].[Stored Currency])
                    );  
                    END SCOPE;  

                      


                    //s2.1 Local Currency = Stored Currency  * Conversion Rate
                    SCOPE([Currency Scaling].[Currency Scaling].[Local Currency],[Management Unit].[Management Unit Hierarchy].[GBU].MEMBERS);  
                    THIS = IIF
                    (
                    [Measure].[Measure].CURRENTMEMBER.Properties( "Measure Type" ) <> "Ratio"
                    AND  [Measure].[Measure].CURRENTMEMBER.Properties( "Measure Type" ) <> "Volume"
                    ,(
                     (([Currency Scaling].[Currency Scaling].[Stored Currency])/
                     [Management Unit].[Management Unit Hierarchy].CURRENTMEMBER.PROPERTIES("Stored Currency Conv Factor"))*
                     [Management Unit].[Management Unit Hierarchy].CURRENTMEMBER.PROPERTIES("Currency Conv Factor")
					 )
                    , 
                     ([Currency Scaling].[Currency Scaling].[Stored Currency])
                    );  
                    END SCOPE;  

					//s2.2 000s Local Currency
					SCOPE([Currency Scaling].[Currency Scaling].[Local Currency (k)]); 
					THIS = IIF([Measure].[Measure].CURRENTMEMBER.Properties( "Measure Type" ) <> "Ratio" AND  [Measure].[Measure].CURRENTMEMBER.Properties( "Measure Type" ) <> "Volume"
					,(([Currency Scaling].[Currency Scaling].[Local Currency])/1000)
					,( [Currency Scaling].[Currency Scaling].[Stored Currency])
					); 
					END SCOPE; 


					//s2.3 - 000s Euro
					SCOPE([Currency Scaling].[Currency Scaling].[Euro (k)]); 
					THIS = IIF([Measure].[Measure].CURRENTMEMBER.Properties( "Measure Type" ) <> "Ratio" AND  [Measure].[Measure].CURRENTMEMBER.Properties( "Measure Type" ) <> "Volume"
					,([Currency Scaling].[Currency Scaling].[Euro]/1000)
					,[Currency Scaling].[Currency Scaling].[Stored Currency]
					); 
					END SCOPE; 


					//s2.5 - M Local Currency
					SCOPE([Currency Scaling].[Currency Scaling].[Local Currency (m)]); 
					THIS = IIF([Measure].[Measure].CURRENTMEMBER.Properties( "Measure Type" ) <> "Ratio" AND  [Measure].[Measure].CURRENTMEMBER.Properties( "Measure Type" ) <> "Volume"
					,(([Currency Scaling].[Currency Scaling].[Local Currency])/1000000)
					,([Currency Scaling].[Currency Scaling].[Stored Currency])
					); 
					END SCOPE; 

					//s2.6 - M Euro
					SCOPE([Currency Scaling].[Currency Scaling].[Euro (m)]); 
					THIS = IIF([Measure].[Measure].CURRENTMEMBER.Properties( "Measure Type" ) <> "Ratio" AND  [Measure].[Measure].CURRENTMEMBER.Properties( "Measure Type" ) <> "Volume"
					,(([Currency Scaling].[Currency Scaling].[Euro])/1000000)
					,([Currency Scaling].[Currency Scaling].[Stored Currency])
					); 
					END SCOPE; 

					-- End Scope for Currency Scaling (Conversion) dimension

    				--BEGIN Scopes
                    --Period Selections
						SCOPE([Period].[Period].[CY],[Measures].[Value]); 
						THIS = [Measures].[Value]; 
						END SCOPE; 

						SCOPE([Period].[Period].[CY],[Measures].[NRM Value]); 
						THIS = [Measures].[NRM Value]; 
						END SCOPE; 

						SCOPE([Period].[Period].[CY],[Measures].[Forecast Value]); 
						THIS = [Measures].[Forecast Value]; 
						END SCOPE; 


                        SCOPE([Period].[Period].[NY]); 
                        THIS = (PARALLELPERIOD([Calendar].[Calendar Hierarchy].[Year],-1), [Period].[Period].[CY]); 
                        END SCOPE; 

						SCOPE([Period].[Period].[PY]); 
						THIS = (PARALLELPERIOD([Calendar].[Calendar Hierarchy].[Year]),[Period].[Period].[CY]); 
						END SCOPE; 

                        SCOPE([Period].[Period].&[23]); 
						THIS = (PARALLELPERIOD([Calendar].[Calendar Hierarchy].[Year]),[Period].[Period].[PY]); 
						END SCOPE; 
                        

                        SCOPE([Period].[Period].[PFC]); 	
                        THIS = ([Scenario FC].[Scenario FC].[Previous Forecast]); 			
                        END SCOPE; 			
				
                        SCOPE([Period].[Period].[CFC]); 			
                        THIS = ([Scenario FC].[Scenario FC].[Current Forecast]); 			
                        END SCOPE; 		

						SCOPE([Period].[Period].[AT]); 			
                        THIS = ([Scenario FC].[Scenario FC].[Annual Target]); 			
                        END SCOPE; 			
						
						SCOPE([Period].[Period].[MCFC]); 			
                        THIS = ([Scenario FC].[Scenario FC].[Machine Forecast]); 			
                        END SCOPE; 	
						
                        
                        // s1.18 Month
						SCOPE([Date Comparison].[Date Comparison].[Month]); 
						THIS = [Date Comparison].[Date Comparison].[Current Period]; 
						END SCOPE; 


                        //January
					    SCOPE([Date Comparison].[Date Comparison].[January]); 
					    THIS = AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Month Name].MEMBERVALUE="January"),[Calendar].[Year].CURRENTMEMBER, [Date Comparison].[Date Comparison].[Current Period]));
					    END SCOPE;

                        //February
					    SCOPE([Date Comparison].[Date Comparison].[February]); 
					    THIS = AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Month Name].MEMBERVALUE="February"),[Calendar].[Year].CURRENTMEMBER, [Date Comparison].[Date Comparison].[Current Period]));
					    END SCOPE; 

                        //March
					    SCOPE([Date Comparison].[Date Comparison].[March]); 
					    THIS = AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Month Name].MEMBERVALUE="March"),[Calendar].[Year].CURRENTMEMBER, [Date Comparison].[Date Comparison].[Current Period]));
					    END SCOPE; 

                        //April
					    SCOPE([Date Comparison].[Date Comparison].[April]); 
					    THIS = AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Month Name].MEMBERVALUE="April"),[Calendar].[Year].CURRENTMEMBER, [Date Comparison].[Date Comparison].[Current Period])); 
					    END SCOPE; 

                        //May
					    SCOPE([Date Comparison].[Date Comparison].[May]); 
					    THIS = AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Month Name].MEMBERVALUE="May"),[Calendar].[Year].CURRENTMEMBER, [Date Comparison].[Date Comparison].[Current Period]));
					    END SCOPE; 

                        //June
					    SCOPE([Date Comparison].[Date Comparison].[June]); 
					    THIS = AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Month Name].MEMBERVALUE="June"),[Calendar].[Year].CURRENTMEMBER, [Date Comparison].[Date Comparison].[Current Period]));
					    END SCOPE; 

                        //July
					    SCOPE([Date Comparison].[Date Comparison].[July]); 
					    THIS = AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Month Name].MEMBERVALUE="July"),[Calendar].[Year].CURRENTMEMBER, [Date Comparison].[Date Comparison].[Current Period]));
					    END SCOPE; 

                        //August
					    SCOPE([Date Comparison].[Date Comparison].[August]); 
					    THIS = AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Month Name].MEMBERVALUE="August"),[Calendar].[Year].CURRENTMEMBER, [Date Comparison].[Date Comparison].[Current Period]));
					    END SCOPE; 

                        //September
					    SCOPE([Date Comparison].[Date Comparison].[September]); 
					    THIS = AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Month Name].MEMBERVALUE="September"),[Calendar].[Year].CURRENTMEMBER, [Date Comparison].[Date Comparison].[Current Period]));
					    END SCOPE; 

                        //October
					    SCOPE([Date Comparison].[Date Comparison].[October]); 
					    THIS = AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Month Name].MEMBERVALUE="October"),[Calendar].[Year].CURRENTMEMBER, [Date Comparison].[Date Comparison].[Current Period]));
					    END SCOPE; 

                        //November
					    SCOPE([Date Comparison].[Date Comparison].[November]); 
					    THIS = AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Month Name].MEMBERVALUE="November"),[Calendar].[Year].CURRENTMEMBER, [Date Comparison].[Date Comparison].[Current Period]));
					    END SCOPE; 

                        //December
					    SCOPE([Date Comparison].[Date Comparison].[December]); 
					    THIS = AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Month Name].MEMBERVALUE="December"),[Calendar].[Year].CURRENTMEMBER, [Date Comparison].[Date Comparison].[Current Period]));
					    END SCOPE; 	

                        //Q1
					    SCOPE([Date Comparison].[Date Comparison].[Q1]); 
					    THIS = AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q1"),[Calendar].[Year].CURRENTMEMBER, [Date Comparison].[Date Comparison].[Current Period]));
					    END SCOPE; 

                        //Q2
					    SCOPE([Date Comparison].[Date Comparison].[Q2]); 
					    THIS = AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q2"),[Calendar].[Year].CURRENTMEMBER, [Date Comparison].[Date Comparison].[Current Period]));
					    END SCOPE; 

                        //Q3
					    SCOPE([Date Comparison].[Date Comparison].[Q3]); 
					    THIS = AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q3"),[Calendar].[Year].CURRENTMEMBER, [Date Comparison].[Date Comparison].[Current Period]));
					    END SCOPE; 

                        //Q4
					    SCOPE([Date Comparison].[Date Comparison].[Q4]); 
					    THIS = AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q4"),[Calendar].[Year].CURRENTMEMBER, [Date Comparison].[Date Comparison].[Current Period]));
					    END SCOPE; 

                        //HY1
					    SCOPE([Date Comparison].[Date Comparison].[HY1]); 
					    THIS = AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY1"),[Calendar].[Year].CURRENTMEMBER, [Date Comparison].[Date Comparison].[Current Period]));
					    END SCOPE; 

                        //HY2
					    SCOPE([Date Comparison].[Date Comparison].[HY2]); 
					    THIS = AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY2"),[Calendar].[Year].CURRENTMEMBER, [Date Comparison].[Date Comparison].[Current Period])); 
					    END SCOPE; 					
	

						//Begin Calculated Measures Definitions
						-- 1.1 GSV
						CREATE MEMBER CURRENTCUBE.[Gross Sales Value (GSV)]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						-- 1.2 Turnover
						CREATE MEMBER CURRENTCUBE.[Turnover]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.3 Gross Profit
						CREATE MEMBER CURRENTCUBE.[Measures].[Gross Profit]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.4 Total Supply Chain Costs
						CREATE MEMBER CURRENTCUBE.[Measures].[Total Supply Chain Costs]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.5 Trade Terms
						CREATE MEMBER CURRENTCUBE.[Measures].[Trade Terms]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.6 Sales Volume
						CREATE MEMBER CURRENTCUBE.[Measures].[Sales Volume - CU (Secondary)]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.6 Sales Volume - Tons
						CREATE MEMBER CURRENTCUBE.[Measures].[Sales Volume - Tons (Secondary)]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.8 NIV
						CREATE MEMBER CURRENTCUBE.[Measures].[Net Invoice Value (NIV)]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.9 Local Currency Conversion Rate
						CREATE MEMBER CURRENTCUBE.[Measures].[Local Currency Conversion Rate]
						AS NULL, 
						FORMAT_STRING = "Double",
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 0; 

						// 1.10  USG %
						CREATE MEMBER CURRENTCUBE.[Measures].[USG %]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.10a  USG % abs
						CREATE MEMBER CURRENTCUBE.[Measures].[USG]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.11  UVG %
						CREATE MEMBER CURRENTCUBE.[Measures].[UVG %]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.11a  UVG % abs
						CREATE MEMBER CURRENTCUBE.[Measures].[UVG]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1;

						// 1.12  UPG %
						CREATE MEMBER CURRENTCUBE.[Measures].[UPG %]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.12a  UPG % abs
						CREATE MEMBER CURRENTCUBE.[Measures].[UPG]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1;

						// 1.13  Trade Terms in % GSV
						CREATE MEMBER CURRENTCUBE.[Measures].[Trade Terms in % GSV]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.14  Gross Margin %
						CREATE MEMBER CURRENTCUBE.[Measures].[Gross Margin %]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.14a  Gross Margin abs
						CREATE MEMBER CURRENTCUBE.[Measures].[Gross Margin]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.15  Trade Terms in % Turnover
						CREATE MEMBER CURRENTCUBE.[Measures].[Trade Terms in % Turnover]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.16  Gross Margin Growth %
						CREATE MEMBER CURRENTCUBE.[Measures].[Gross Margin Growth %]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.17   GSV Growth %
						CREATE MEMBER CURRENTCUBE.[Measures].[GSV Growth %]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.18   BBTOT Growth %
						CREATE MEMBER CURRENTCUBE.[Measures].[BBTOT Growth %]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.19   Business Building & Other Terms
						CREATE MEMBER CURRENTCUBE.[Measures].[Business Building & Other Terms]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.20   BBTOT % GSV
						CREATE MEMBER CURRENTCUBE.[Measures].[BBTOT % GSV]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.21   Turnover vs PY
						CREATE MEMBER CURRENTCUBE.[Measures].[Turnover vs PY]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.22   Gross Profit vs PY
						CREATE MEMBER CURRENTCUBE.[Measures].[Gross Profit vs PY]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.23   BBTOT vs PY
						CREATE MEMBER CURRENTCUBE.[Measures].[BBTOT vs PY]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.24   BBTOT% vs PY
						CREATE MEMBER CURRENTCUBE.[Measures].[BBTOT% vs PY]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.25   GSV vs PY
						CREATE MEMBER CURRENTCUBE.[Measures].[GSV vs PY]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.26   RSV vs PY
						CREATE MEMBER CURRENTCUBE.[Measures].[RSV vs PY]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.27   RSV Growth %
						CREATE MEMBER CURRENTCUBE.[Measures].[RSV Growth %]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.28   Gross Profit Growth %
						CREATE MEMBER CURRENTCUBE.[Measures].[Gross Profit Growth %]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.29   TTS% vs PY
						CREATE MEMBER CURRENTCUBE.[Measures].[TTS% vs PY]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.30   Sales Volume - Tons (Primary)
						CREATE MEMBER CURRENTCUBE.[Measures].[Sales Volume - Tons (Primary)]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.31   Deflated Turnover
						CREATE MEMBER CURRENTCUBE.[Measures].[Deflated Turnover]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.32  PY GSV
						CREATE MEMBER CURRENTCUBE.[Measures].[PY GSV]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.33   PY Turnover
						CREATE MEMBER CURRENTCUBE.[Measures].[PY Turnover]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.34   PY Gross Profit
						CREATE MEMBER CURRENTCUBE.[Measures].[PY Gross Profit]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.35   Sales Volume - Consumer Units (k) (Primary)
						CREATE MEMBER CURRENTCUBE.[Measures].[Sales Volume - Consumer Units (k) (Primary)]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.36   Customer Contribution
						CREATE MEMBER CURRENTCUBE.[Measures].[Customer Contribution]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.37   Core Operating Profit
						CREATE MEMBER CURRENTCUBE.[Measures].[Core Operating Profit]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.38   BMI Trade
						CREATE MEMBER CURRENTCUBE.[Measures].[BMI Trade]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.39   Overheads Trade
						CREATE MEMBER CURRENTCUBE.[Measures].[Overhead Trade]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.40   Customer Contribution % GSV
						CREATE MEMBER CURRENTCUBE.[Measures].[Customer Contribution % TO]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.41   Core Operating Profit % GSV
						CREATE MEMBER CURRENTCUBE.[Measures].[Core Operating Profit % TO]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.42   BMI Trade % TO
						CREATE MEMBER CURRENTCUBE.[Measures].[BMI Trade % TO]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.42a   BMI % TO  abs
						CREATE MEMBER CURRENTCUBE.[Measures].[BMI TO]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						//1.43 UOM % abs
						CREATE MEMBER CURRENTCUBE.[Measures].[UOM]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 
						
						//1.43a UOM % Turnover
						CREATE MEMBER CURRENTCUBE.[Measures].[UOM % Turnover]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1;

                                             

						// 1.44   Overheads Trade % TO
						CREATE MEMBER CURRENTCUBE.[Measures].[Overhead Trade % TO]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.45   RSV
						CREATE MEMBER CURRENTCUBE.[Measures].[RSV]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.46   RSV - Untaxed
						CREATE MEMBER CURRENTCUBE.[Measures].[RSV - Untaxed]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.47   PY RSV
						CREATE MEMBER CURRENTCUBE.[Measures].[PY RSV]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

                        //1.48    PY SCC
						CREATE MEMBER CURRENTCUBE.[Measures].[PY Total Supply Chain Costs]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.49   PY Sales Volume - CU
						CREATE MEMBER CURRENTCUBE.[Measures].[PY Sales Volume - CU]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.50   Promo Pressure
						CREATE MEMBER CURRENTCUBE.[Measures].[Promo Pressure]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.51   Promo Pressure - Untaxed
						CREATE MEMBER CURRENTCUBE.[Measures].[Promo Pressure - Untaxed]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.52   Promo Pressure Percentage
						CREATE MEMBER CURRENTCUBE.[Measures].[Promo Pressure %]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.53   CPP
						CREATE MEMBER CURRENTCUBE.[Measures].[CPP]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.54   CPP % GSV
						CREATE MEMBER CURRENTCUBE.[Measures].[CPP % GSV]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.55   CPP % TO
						CREATE MEMBER CURRENTCUBE.[Measures].[CPP % TO]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.56   BMI
						CREATE MEMBER CURRENTCUBE.[Measures].[BMI]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.57   Overheads
						CREATE MEMBER CURRENTCUBE.[Measures].[Overheads]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.58  BMI % TO
						CREATE MEMBER CURRENTCUBE.[Measures].[BMI % TO]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.59   Overheads % TO
						CREATE MEMBER CURRENTCUBE.[Measures].[Overheads % TO]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.60   PY Value
						CREATE MEMBER CURRENTCUBE.[Measures].[PY Value]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.61   PBO  - Profit Before Overheads
						CREATE MEMBER CURRENTCUBE.[Measures].[PBO]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.62   Business Building % TO
						CREATE MEMBER CURRENTCUBE.[Measures].[Business Building % TO]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.63   Efficient Operations % TO
						CREATE MEMBER CURRENTCUBE.[Measures].[Efficient Operations % TO]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.64   PY Sales Volume - Tons
						CREATE MEMBER CURRENTCUBE.[Measures].[PY Sales Volume - Tons]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

                        //for others
                        //Temporary calculation for Overheads - add in Feb 2018 while restatements correct the calc in the DB
						SCOPE ([Measure].[Measure].&[M4_INDR0C]);
						THIS = [Measure].[Measure].&[OVH0030] + [Measure].[Measure].&[OVH0060] + [Measure].[Measure].&[OVH0150];
						END SCOPE;

                        //Temporary calculation for Other Overheads - add in Feb 2018 while restatements correct the calc in the DB
						SCOPE ([Measure].[Measure].&[M5_OTHOVH],EXCEPT([Management Unit].[Reporting Unit].[Reporting Unit].MEMBERS,{FILTER([Management Unit].[Reporting Unit].[Reporting Unit].MEMBERS, [Management Unit].[Reporting Unit].CURRENTMEMBER.MEMBERVALUE="India"),
                        FILTER([Management Unit].[Reporting Unit].[Reporting Unit].MEMBERS, [Management Unit].[Reporting Unit].CURRENTMEMBER.MEMBERVALUE="Russia"),
                        FILTER([Management Unit].[Reporting Unit].[Reporting Unit].MEMBERS, [Management Unit].[Reporting Unit].CURRENTMEMBER.MEMBERVALUE="Turkey"),
                        FILTER([Management Unit].[Reporting Unit].[Reporting Unit].MEMBERS, [Management Unit].[Reporting Unit].CURRENTMEMBER.MEMBERVALUE="Thailand")}));
						THIS = [Measure].[Measure].&[M4_INDR0C] - [Measure].[Measure].&[M4_INDR0T];
						END SCOPE;

                        //Temporary calculation for Core Operating Profit - add in Feb 2018 while restatements correct the calc in the DB
						SCOPE ([Measure].[Measure].&[T_TRXR0C],EXCEPT([Management Unit].[Reporting Unit].[Reporting Unit].MEMBERS,{FILTER([Management Unit].[Reporting Unit].[Reporting Unit].MEMBERS, [Management Unit].[Reporting Unit].CURRENTMEMBER.MEMBERVALUE="India"),
                        FILTER([Management Unit].[Reporting Unit].[Reporting Unit].MEMBERS, [Management Unit].[Reporting Unit].CURRENTMEMBER.MEMBERVALUE="Russia"),
                        FILTER([Management Unit].[Reporting Unit].[Reporting Unit].MEMBERS, [Management Unit].[Reporting Unit].CURRENTMEMBER.MEMBERVALUE="Turkey"),
                        FILTER([Management Unit].[Reporting Unit].[Reporting Unit].MEMBERS, [Management Unit].[Reporting Unit].CURRENTMEMBER.MEMBERVALUE="Thailand")}));
						THIS = [Measure].[Measure].&[M4_INDR0C] + [Measure].[Measure].&[T4_PBO001];
						END SCOPE;

                    //For Russia Only
						//Temporary calculation for Other Overheads - add in Feb 2018 while restatements correct the calc in the DB
						SCOPE ([Measure].[Measure].&[M5_OTHOVH],FILTER([Management Unit].[Reporting Unit].[Reporting Unit].MEMBERS, [Management Unit].[Reporting Unit].CURRENTMEMBER.MEMBERVALUE="Russia"));
						THIS = [Measure].[Measure].&[M4_INDR0C] - [Measure].[Measure].&[M4_INDR0T] + [Measure].[Measure].&[OVH0180] + [Measure].[Measure].&[OVH0040];
						END SCOPE;
						
						//Temporary calculation for Core Operating Profit - add in Feb 2018 while restatements correct the calc in the DB
						SCOPE ([Measure].[Measure].&[T_TRXR0C],FILTER([Management Unit].[Reporting Unit].[Reporting Unit].MEMBERS, [Management Unit].[Reporting Unit].CURRENTMEMBER.MEMBERVALUE="Russia"));
						THIS = [Measure].[Measure].&[M4_INDR0C] + [Measure].[Measure].&[T4_PBO001] + [Measure].[Measure].&[OVH0180] + [Measure].[Measure].&[OVH0040];
						END SCOPE;
						
						//For Turkey Only
						//Temporary calculation for Other Overheads - add in Feb 2018 while restatements correct the calc in the DB
						SCOPE ([Measure].[Measure].&[M5_OTHOVH],FILTER([Management Unit].[Reporting Unit].[Reporting Unit].MEMBERS, [Management Unit].[Reporting Unit].CURRENTMEMBER.MEMBERVALUE="Turkey"));
						THIS = [Measure].[Measure].&[M4_INDR0C] - [Measure].[Measure].&[M4_INDR0T] + [Measure].[Measure].&[OVH0180] + [Measure].[Measure].&[OVH0040];
						END SCOPE;
						
						//Temporary calculation for Core Operating Profit - add in Feb 2018 while restatements correct the calc in the DB
						SCOPE ([Measure].[Measure].&[T_TRXR0C],FILTER([Management Unit].[Reporting Unit].[Reporting Unit].MEMBERS, [Management Unit].[Reporting Unit].CURRENTMEMBER.MEMBERVALUE="Turkey"));
						THIS = [Measure].[Measure].&[M4_INDR0C] + [Measure].[Measure].&[T4_PBO001] + [Measure].[Measure].&[OVH0180] + [Measure].[Measure].&[OVH0040];
						END SCOPE;
						
						//For India Only
						//Temporary calculation for Other Overheads - add in Feb 2018 while restatements correct the calc in the DB
						SCOPE ([Measure].[Measure].&[M5_OTHOVH],FILTER([Management Unit].[Reporting Unit].[Reporting Unit].MEMBERS, [Management Unit].[Reporting Unit].CURRENTMEMBER.MEMBERVALUE="India"));
						THIS = [Measure].[Measure].&[M4_INDR0C] - [Measure].[Measure].&[M4_INDR0T] + [Measure].[Measure].&[OVH0180] + [Measure].[Measure].&[OVH0040];
						END SCOPE;
						
						//Temporary calculation for Core Operating Profit - add in Feb 2018 while restatements correct the calc in the DB
						SCOPE ([Measure].[Measure].&[T_TRXR0C],FILTER([Management Unit].[Reporting Unit].[Reporting Unit].MEMBERS, [Management Unit].[Reporting Unit].CURRENTMEMBER.MEMBERVALUE="India"));
						THIS = [Measure].[Measure].&[M4_INDR0C] + [Measure].[Measure].&[T4_PBO001] + [Measure].[Measure].&[OVH0180] + [Measure].[Measure].&[OVH0040];
						END SCOPE;
						
						//For Thailand Only
						//Temporary calculation for Other Overheads - add in Feb 2018 while restatements correct the calc in the DB
						SCOPE ([Measure].[Measure].&[M5_OTHOVH],FILTER([Management Unit].[Reporting Unit].[Reporting Unit].MEMBERS, [Management Unit].[Reporting Unit].CURRENTMEMBER.MEMBERVALUE="Thailand"));
						THIS = [Measure].[Measure].&[M4_INDR0C] - [Measure].[Measure].&[M4_INDR0T] + [Measure].[Measure].&[OVH0180] + [Measure].[Measure].&[OVH0040];
						END SCOPE;
						
						//Temporary calculation for Core Operating Profit - add in Feb 2018 while restatements correct the calc in the DB
						SCOPE ([Measure].[Measure].&[T_TRXR0C],FILTER([Management Unit].[Reporting Unit].[Reporting Unit].MEMBERS, [Management Unit].[Reporting Unit].CURRENTMEMBER.MEMBERVALUE="Thailand"));
						THIS = [Measure].[Measure].&[M4_INDR0C] + [Measure].[Measure].&[T4_PBO001] + [Measure].[Measure].&[OVH0180] + [Measure].[Measure].&[OVH0040];
						END SCOPE;
 

                        // 1.65   BMI vs PY
						CREATE MEMBER CURRENTCUBE.[Measures].[BMI vs PY]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1;

                        // 1.66   ROI
						CREATE MEMBER CURRENTCUBE.[Measures].[ROI]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

                        // 1.67    OVERHEADS TO
                        CREATE MEMBER CURRENTCUBE.[Measures].[Overheads TO]
                        AS NULL,
                        ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
                        VISIBLE = 1;


						--END Calculated Measures Definitions


						//Begin Scopes - Normal Scopes that are required for the Measures due to the flat hierarchy
						
						//Scope for Turnover
						SCOPE ([Measure].[Measure].&[M1_TTO001]);
						THIS = ROUND([Measure].[Measure].&[M1_TTO001],4);
						END SCOPE;
						
						//Scope for Gross Profit
						SCOPE ([Measure].[Measure].&[T3_GP0001]);
						THIS = ROUND([Measure].[Measure].&[T3_GP0001],4);
						END SCOPE;
						
						//Scope for Deflated Turnover
						SCOPE ([Measure].[Measure].&[M1_DFTT01]); 
						THIS =[Measure].[Measure].&[M1_DFTT01_PC]; 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[M1_DFTT01],[Measures].[Value],[Customer].[Local Customer Hierarchy].[Customer GBU],[Customer].[Customer Hierarchy].[All]); 
						THIS = ([Measure].[Measure].&[M1_DFTT01_TC],[Measures].[Value]); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[M1_DFTT01],[Measures].[Value],[Customer].[Customer Hierarchy].[Total Customer],[Customer].[Local Customer Hierarchy].[All]); 
						THIS = ([Measure].[Measure].&[M1_DFTT01_TC],[Measures].[Value]); 
						END SCOPE; 

                        SCOPE ([Measure].[Measure].&[M1_DFTT01],[Measures].[Forecast Value],[Customer].[Local Customer Hierarchy].[Customer GBU],[Customer].[Customer Hierarchy].[All]); 			
                        THIS = ([Measure].[Measure].&[M1_DFTT01_TC],[Measures].[Forecast Value]); 			
                        END SCOPE; 			

                        SCOPE ([Measure].[Measure].&[M1_DFTT01],[Measures].[Forecast Value],[Customer].[Customer Hierarchy].[Total Customer],[Customer].[Local Customer Hierarchy].[All]); 			
                        THIS = ([Measure].[Measure].&[M1_DFTT01_TC],[Measures].[Forecast Value]); 			
                        END SCOPE; 	

                        // Scope for Overheads bOTI = Local Overheads bOTI + Allocation Charges Overheads
						SCOPE ([Measure].[Measure].&[OVH011]); 
						THIS = ([Measure].[Measure].&[OVH0060]) + ([Measure].[Measure].&[OVH0030]); 
						FORMAT_STRING(THIS) = "#,##0.0";
                        END SCOPE; 

						//Begin Scope for Date Comparions members (except Reporting Periods)
						// s1.1 YTD
						SCOPE([Date Comparison].[Date Comparison].[YTD]); 
						THIS = AGGREGATE(YTD([Calendar].[Calendar Hierarchy].CURRENTMEMBER), [Date Comparison].[Date Comparison].[Current Period]); 
						END SCOPE; 

						// s1.2 PY YTD -- Previous Year YTD
						SCOPE([Date Comparison].[Date Comparison].[PY YTD]); 
						THIS = (PARALLELPERIOD([Calendar].[Calendar Hierarchy].[Year]), [Date Comparison].[Date Comparison].[YTD]); 
						END SCOPE; 

						// s1.3 QTD
						SCOPE([Date Comparison].[Date Comparison].[QTD]); 
						THIS = IIF( [Calendar].[Calendar Hierarchy].CURRENTMEMBER.LEVEL IS [Calendar].[Calendar Hierarchy].[Year]
						,[Date Comparison].[Date Comparison].[YTD]
						,AGGREGATE(QTD([Calendar].[Calendar Hierarchy].CURRENTMEMBER), [Date Comparison].[Date Comparison].[Current Period])
						); 
						END SCOPE; 

						// s1.4 PY QTD -- Previous Year QTD
						SCOPE([Date Comparison].[Date Comparison].[PY QTD]); 
						THIS = IIF( [Calendar].[Calendar Hierarchy].CURRENTMEMBER.LEVEL IS [Calendar].[Calendar Hierarchy].[Year]
						,[Date Comparison].[Date Comparison].[PY YTD]
						,(PARALLELPERIOD([Calendar].[Calendar Hierarchy].[Year]), [Date Comparison].[Date Comparison].[QTD])
						); 
						END SCOPE; 

						// s1.5 MAT -- Moving Annual Total (Rolling 12 months)
						SCOPE([Date Comparison].[Date Comparison].[MAT]); 
						THIS = IIF( [Calendar].[Calendar Hierarchy].CURRENTMEMBER.LEVEL IS [Calendar].[Calendar Hierarchy].[Year]
						,[Date Comparison].[Date Comparison].[YTD]
						,IIF(
						[Calendar].[Calendar Hierarchy].CURRENTMEMBER.LEVEL IS [Calendar].[Calendar Hierarchy].[Quarter]
						,AGGREGATE(LASTPERIODS(4),[Date Comparison].[Date Comparison].[Current Period])
						,AGGREGATE(LASTPERIODS(12),[Date Comparison].[Date Comparison].[Current Period])
						)
						); 
						END SCOPE; 
						
						// s1.51 L3M -- Last 3 Months total
						SCOPE([Date Comparison].[Date Comparison].[L3M]); 
						THIS = IIF( [Calendar].[Calendar Hierarchy].CURRENTMEMBER.LEVEL IS [Calendar].[Calendar Hierarchy].[Month]
								,AGGREGATE(LASTPERIODS(3),[Date Comparison].[Date Comparison].[Current Period])
								,AGGREGATE(LastPeriods(3, CLOSINGPERIOD([Calendar].[Calendar Hierarchy].[Month],[Calendar Hierarchy].CURRENTMEMBER)),[Date Comparison].[Date Comparison].[Current Period]));
                        END SCOPE;

						// s1.6 PY MAT -- Previous Year Moving Annual Total (Previous year Rolling 12 months)
						SCOPE([Date Comparison].[Date Comparison].[PY MAT]); 
						THIS = (PARALLELPERIOD([Calendar].[Calendar Hierarchy].[Year]), [Date Comparison].[Date Comparison].[MAT]); 
						END SCOPE; 

						// s1.7 Full Year = Equal to YTD for that year
						SCOPE([Date Comparison].[Date Comparison].[Full Year]); 
						THIS = (ANCESTOR([Calendar].[Calendar Hierarchy].CURRENTMEMBER
						,[Calendar].[Calendar Hierarchy].[Year]), [Date Comparison].[Date Comparison].[YTD]); 
						END SCOPE; 

						// s1.8 PY Full Year = Equal to YTD for that Previous
						SCOPE([Date Comparison].[Date Comparison].[PY Full Year]); 
						THIS = (ANCESTOR([Calendar].[Calendar Hierarchy].CURRENTMEMBER,
						[Calendar].[Calendar Hierarchy].[Year]), [Date Comparison].[Date Comparison].[PY YTD]); 
						END SCOPE; 

						// s1.9 PY - Period Previous Period
						SCOPE([Date Comparison].[Date Comparison].[PY Period],[Calendar].[Calendar Hierarchy].MEMBERS); 
						THIS = (
						PARALLELPERIOD([Calendar].[Calendar Hierarchy].[Year],1,[Calendar].[Calendar Hierarchy].CURRENTMEMBER)
						,[Date Comparison].[Date Comparison].[Current Period]); 
						END SCOPE; 

                         // s1.10 YTG - year to Go - FY - YTD 
                        SCOPE([Date Comparison].[Date Comparison].[YTG]); 
                        THIS =([Date Comparison].[Date Comparison].[Full Year] - [Date Comparison].[Date Comparison].[YTD]); 
						END SCOPE; 

                        // s1.11 PY YTG - PY FY - PY YTD 
                        SCOPE([Date Comparison].[Date Comparison].[PY YTG]); 
						THIS =[Date Comparison].[Date Comparison].[PY Full Year] - [Date Comparison].[Date Comparison].[PY YTD]; 
						END SCOPE; 

                        // s1.12 QTG = Full Quarter - QTD
                        SCOPE([Date Comparison].[Date Comparison].[QTG]); 
                        THIS = (ANCESTOR([Calendar].[Calendar Hierarchy].CURRENTMEMBER
                        ,[Calendar].[Calendar Hierarchy].[Quarter]), [Date Comparison].[Date Comparison].[Current Period]) - [Date Comparison].[Date Comparison].[QTD]; 
                        END SCOPE; 

                        // s1.13 PY QTG - PY Full Quarter - PY QTD 
                        SCOPE([Date Comparison].[Date Comparison].[PY QTG]); 
						THIS =(ANCESTOR([Calendar].[Calendar Hierarchy].CURRENTMEMBER
                        ,[Calendar].[Calendar Hierarchy].[Quarter]), [Date Comparison].[Date Comparison].[PY QTD]) - [Date Comparison].[Date Comparison].[PY QTD]; 
						END SCOPE; 

						// s1.14 Change [vs PY] = (CY-PY)
						SCOPE([Date Comparison].[Date Comparison].[Change vs PY]); 
						THIS = (IIF (([Date Comparison].[Date Comparison].[Current Period])-([Date Comparison].[Date Comparison].[PY Period]) = 0
						,NULL
						,([Date Comparison].[Date Comparison].[Current Period])-([Date Comparison].[Date Comparison].[PY Period]))
						); 
						END SCOPE; 

						// s1.15 YTD Growth % = (YTD-PY YTD)/(PY YTD)
						SCOPE([Date Comparison].[Date Comparison].[YTD Growth %]); 
						THIS = (IIF (([Date Comparison].[Date Comparison].[PY YTD]) = 0 OR ISEMPTY(([Date Comparison].[Date Comparison].[PY YTD]))
						,NULL
						,((([Date Comparison].[Date Comparison].[YTD])-([Date Comparison].[Date Comparison].[PY YTD])) /([Date Comparison].[Date Comparison].[PY YTD])))
						); 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// s1.16 Growth % = (CY-PY) / PY
						SCOPE([Date Comparison].[Date Comparison].[Growth %]); 
						THIS = (IIF (([Date Comparison].[Date Comparison].[PY Period]) = 0 OR ISEMPTY(([Date Comparison].[Date Comparison].[PY Period]))
						,NULL
						,((([Date Comparison].[Date Comparison].[Current Period])-([Date Comparison].[Date Comparison].[PY Period])) /([Date Comparison].[Date Comparison].[PY Period]))*100)
						); 
						END SCOPE; 

						// s1.17 YTD Growth % = (YTD-PY YTD)/(PY YTD)
						SCOPE([Date Comparison].[Date Comparison].[YTD Growth %]); 
						THIS = (IIF (([Date Comparison].[Date Comparison].[PY YTD]) = 0 OR ISEMPTY(([Date Comparison].[Date Comparison].[PY YTD]))
						,NULL
						,((([Date Comparison].[Date Comparison].[YTD])-([Date Comparison].[Date Comparison].[PY YTD])) /([Date Comparison].[Date Comparison].[PY YTD]))*100)
						); 
						END SCOPE;

                        // s1.18 Month
						//SCOPE([Date Comparison].[Date Comparison].[Month]); 
						//THIS = [Date Comparison].[Date Comparison].[Current Period]; 
						//END SCOPE; 

						--End Scope for Date Comparions members
                     
    					--Begin Measure Scopes
						/*
						General note - For some of the ratio measures depending on the date comparison member selected we need to use the corresponding PY element
						e.g.

						A - Current Period / PY Period
						B - QTD / PY QTD
						C - YTD / PY YTD
						D - MAT / PY MAT
 
						*/
						// 3.1a USG % (Current Period) = (( (([Turnover: (CY)] + [Acquisition Turnover: (CY)]) / ([Turnover: (PY)] + Disposal Turnover(in PY): (CY)))-1)*100)
                        SCOPE ([Measure].[Measure].&[M1_USG],[Date Comparison].[Date Comparison].[Current Period]); 
                        THIS =(IIF(ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
									OR
								(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])) = 0	
									OR 	(ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])))
,
                        IIF(ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])),NULL,0),
                        DIVIDE(
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])),
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])))
                                -1)*100);
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                        END SCOPE; 

                        // 3.1b USG % (QTD) = (( (([Turnover: (QTD)] + [Acquisition Turnover: (QTD)]) / ([Turnover: (PYQTD)] + Disposal Turnover(in PY): (QTD)))-1)*100)
                        SCOPE ([Measure].[Measure].&[M1_USG],[Date Comparison].[Date Comparison].[QTD]); 
                         THIS =(IIF(ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY QTD],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[QTD],[Currency Scaling].[Currency Scaling].[Euro]))
									OR
								(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY QTD],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[QTD],[Currency Scaling].[Currency Scaling].[Euro])) = 0	
										OR 	(ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])))
,
                        IIF(ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[QTD],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[QTD],[Currency Scaling].[Currency Scaling].[Euro])),NULL,0),
                        DIVIDE(
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[QTD],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[QTD],[Currency Scaling].[Currency Scaling].[Euro])),
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY QTD],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[QTD],[Currency Scaling].[Currency Scaling].[Euro])))
                                -1)*100); 
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                        END SCOPE; 

                        // 3.1c USG % (YTD) = (( (([Turnover: (YTD)] + [Acquisition Turnover: (YTD)]) / ([Turnover: (PYYTD)] + Disposal Turnover(in PY): (YTD)))-1)*100)
                        SCOPE ([Measure].[Measure].&[M1_USG],[Date Comparison].[Date Comparison].[YTD]); 
                        THIS =(IIF(ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY YTD],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[YTD],[Currency Scaling].[Currency Scaling].[Euro]))
									OR
								(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY YTD],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[YTD],[Currency Scaling].[Currency Scaling].[Euro])) = 0	
										OR 	(ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])))
,
                        IIF(ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[YTD],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[YTD],[Currency Scaling].[Currency Scaling].[Euro])),NULL,0),
                        DIVIDE(
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[YTD],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[YTD],[Currency Scaling].[Currency Scaling].[Euro])),
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY YTD],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[YTD],[Currency Scaling].[Currency Scaling].[Euro])))
                                -1)*100); 
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                        END SCOPE; 

                        // 3.1d USG % (MAT) = (( (([Turnover: (MAT)] + [Acquisition Turnover: (MAT)]) / ([Turnover: (MAT)] + Disposal Turnover(in PY): (MAT)))-1)*100)
                        SCOPE ([Measure].[Measure].&[M1_USG],[Date Comparison].[Date Comparison].[MAT]); 
                         THIS =(IIF(ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY MAT],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[MAT],[Currency Scaling].[Currency Scaling].[Euro]))
									OR
								(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY MAT],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[MAT],[Currency Scaling].[Currency Scaling].[Euro])) = 0	
										OR 	(ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])))
,
                        IIF(ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[MAT],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[MAT],[Currency Scaling].[Currency Scaling].[Euro])),NULL,0),
                        DIVIDE(
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[MAT],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[MAT],[Currency Scaling].[Currency Scaling].[Euro])),
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY MAT],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[MAT],[Currency Scaling].[Currency Scaling].[Euro])))
                                -1)*100); 
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                        END SCOPE; 

                        // 3.1e USG % (YTG) = (( (([Turnover: (YTG)] + [Acquisition Turnover: (YTG)]) / ([Turnover: (PYYTG)] + Disposal Turnover(in PY): (YTG)))-1)*100)
                        SCOPE ([Measure].[Measure].&[M1_USG],[Date Comparison].[Date Comparison].[YTG]); 
                       THIS =(IIF(ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY YTG],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[YTG],[Currency Scaling].[Currency Scaling].[Euro]))
									OR
								(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY YTG],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[YTG],[Currency Scaling].[Currency Scaling].[Euro])) = 0	
										OR 	(ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])))
,
                        IIF(ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[YTG],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[YTG],[Currency Scaling].[Currency Scaling].[Euro])),NULL,0),
                        DIVIDE(
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[YTG],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[YTG],[Currency Scaling].[Currency Scaling].[Euro])),
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY YTG],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[YTG],[Currency Scaling].[Currency Scaling].[Euro])))
                                -1)*100); 
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                        END SCOPE; 
                        
                        // 3.1f USG % (QTG) = (( (([Turnover: (QTG)] + [Acquisition Turnover: (QTG)]) / ([Turnover: (PYQTG)] + Disposal Turnover(in PY): (QTG)))-1)*100)
                        SCOPE ([Measure].[Measure].&[M1_USG],[Date Comparison].[Date Comparison].[QTG]); 
                        
                        THIS =(IIF(ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY QTG],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[QTG],[Currency Scaling].[Currency Scaling].[Euro]))
									OR
								(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY QTG],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[QTG],[Currency Scaling].[Currency Scaling].[Euro])) = 0	
										OR 	(ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])))
,
                        IIF(ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[QTG],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[QTG],[Currency Scaling].[Currency Scaling].[Euro])),NULL,0),
                        DIVIDE(
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[QTG],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[QTG],[Currency Scaling].[Currency Scaling].[Euro])),
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY QTG],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[QTG],[Currency Scaling].[Currency Scaling].[Euro])))
                                -1)*100); 
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                        END SCOPE; 
						
						// 3.1G USG % (L3M) = (( (([Turnover: (L3M)] + [Acquisition Turnover: (L3M)]) / ([Turnover: (L3M PY)] + Disposal Turnover(in PY): (L3M)))-1)*100)
                        SCOPE ([Measure].[Measure].&[M1_USG],[Date Comparison].[Date Comparison].[L3M]); 
                        
                         THIS =(IIF(ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[L3M],[Currency Scaling].[Currency Scaling].[Euro],[Period].[Period].[PY])+
                                 ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[L3M],[Currency Scaling].[Currency Scaling].[Euro]))
									OR
								(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[L3M],[Currency Scaling].[Currency Scaling].[Euro],[Period].[Period].[PY])+
                                 ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[L3M],[Currency Scaling].[Currency Scaling].[Euro])) = 0	
										OR 	(ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])))
,
                        IIF(ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[L3M],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[L3M],[Currency Scaling].[Currency Scaling].[Euro])),NULL,0),
                        DIVIDE(
                              (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[L3M],[Currency Scaling].[Currency Scaling].[Euro])+
                                ([Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[L3M],[Currency Scaling].[Currency Scaling].[Euro])),
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[L3M],[Currency Scaling].[Currency Scaling].[Euro],[Period].[Period].[PY])+
                                 ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[L3M],[Currency Scaling].[Currency Scaling].[Euro])))
                                -1)*100); 
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                        END SCOPE;

                        // USG % Q1
                    SCOPE ([Measure].[Measure].&[M1_USG],[Date Comparison].[Date Comparison].[Q1]); 
                    THIS =(IIF(ISEMPTY(AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            +
							AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])))
                            or
                    (AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            +
							AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))) = 0,
                    IIF(ISEMPTY(AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            +
                            AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))),NULL,0),
                    DIVIDE(
                            AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            +
                            AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
							,
                            AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            +
							AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            )-1)*100); 
                    END SCOPE;

                    // USG % Q2
                    SCOPE ([Measure].[Measure].&[M1_USG],[Date Comparison].[Date Comparison].[Q2]); 
                    THIS =(IIF(ISEMPTY(AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            +
							AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])))
                            or
                    (AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            +
							AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))) = 0,
                    IIF(ISEMPTY(AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            +
                            AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))),NULL,0),
                    DIVIDE(
                            AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            +
                            AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
							,
                            AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            +
							AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            )-1)*100); 
                    END SCOPE;
					
                    // USG % Q3
                    SCOPE ([Measure].[Measure].&[M1_USG],[Date Comparison].[Date Comparison].[Q3]); 
                    THIS =(IIF(ISEMPTY(AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q3"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            +
							AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q3"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])))
                            or
                    (AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q3"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            +
							AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q3"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))) = 0,
                    IIF(ISEMPTY(AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q3"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            +
                            AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q3"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))),NULL,0),
                    DIVIDE(
                            AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q3"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            +
                            AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q3"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
							,
                            AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q3"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            +
							AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q3"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            )-1)*100); 
                    END SCOPE;
					
					// USG % Q4
                    SCOPE ([Measure].[Measure].&[M1_USG],[Date Comparison].[Date Comparison].[Q4]); 
                    THIS =(IIF(ISEMPTY(AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q4"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            +
							AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q4"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])))
                            or
                    (AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q4"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            +
							AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q4"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))) = 0,
                    IIF(ISEMPTY(AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q4"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            +
                            AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q4"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))),NULL,0),
                    DIVIDE(
                            AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q4"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            +
                            AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q4"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
							,
                            AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q4"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            +
							AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q4"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            )-1)*100); 
                    END SCOPE;

					// USG % HY1
                    SCOPE ([Measure].[Measure].&[M1_USG],[Date Comparison].[Date Comparison].[HY1]); 
                    THIS =(IIF(ISEMPTY(AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            +
							AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])))
                            or
                   (AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            +
							AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))) = 0,
                   IIF(ISEMPTY(AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            +
                            AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))), NULL,0),
                    DIVIDE(
                            AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            +
                            AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
							,
                            AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            +
							AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            )-1)*100); 
                    END SCOPE;
					
					// USG % HY2
                    SCOPE ([Measure].[Measure].&[M1_USG],[Date Comparison].[Date Comparison].[HY2]); 
                    THIS =(IIF(ISEMPTY(AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            +
							AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])))
                            or
                   (AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            +
							AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))) = 0,
                   IIF(ISEMPTY(AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            +
                            AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))), NULL,0),
                    DIVIDE(
                            AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            +
                            AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
							,
                            AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            +
							AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                            )-1)*100); 
                    END SCOPE;


						// 3.1a USG % (Current Period) = (( (([Turnover: (CY)] + [Acquisition Turnover: (CY)]) / ([Turnover: (PY)] + Disposal Turnover(in PY): (CY)))-1)*100)

                        SCOPE ([Measure].[Measure].&[M1_USG_RAW],[Date Comparison].[Date Comparison].[Current Period]); 
                        THIS = (
                        DIVIDE(
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
		                        -(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])),
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])))
                                )*100; 
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                        END SCOPE;

                        

                        // 3.1b USG % (QTD) = (( (([Turnover: (QTD)] + [Acquisition Turnover: (QTD)]) / ([Turnover: (PYQTD)] + Disposal Turnover(in PY): (QTD)))-1)*100)
                        SCOPE ([Measure].[Measure].&[M1_USG_RAW],[Date Comparison].[Date Comparison].[QTD]); 
                        THIS = (
                        DIVIDE(
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[QTD],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[QTD],[Currency Scaling].[Currency Scaling].[Euro]))
								-(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY QTD],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[QTD],[Currency Scaling].[Currency Scaling].[Euro])),
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY QTD],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[QTD],[Currency Scaling].[Currency Scaling].[Euro])))
                                )*100; 
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                        END SCOPE; 

                        // 3.1c USG % (YTD) = (( (([Turnover: (YTD)] + [Acquisition Turnover: (YTD)]) / ([Turnover: (PYYTD)] + Disposal Turnover(in PY): (YTD)))-1)*100)
                        SCOPE ([Measure].[Measure].&[M1_USG_RAW],[Date Comparison].[Date Comparison].[YTD]); 
                        THIS = (
                        DIVIDE(
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[YTD],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[YTD],[Currency Scaling].[Currency Scaling].[Euro]))
								-(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY YTD],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[YTD],[Currency Scaling].[Currency Scaling].[Euro])),
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY YTD],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[YTD],[Currency Scaling].[Currency Scaling].[Euro])))
                                )*100; 
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                        END SCOPE; 

                        // 3.1d USG % (MAT) = (( (([Turnover: (MAT)] + [Acquisition Turnover: (MAT)]) / ([Turnover: (MAT)] + Disposal Turnover(in PY): (MAT)))-1)*100)
                        SCOPE ([Measure].[Measure].&[M1_USG_RAW],[Date Comparison].[Date Comparison].[MAT]); 
                        THIS = (
                        DIVIDE(
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[MAT],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[MAT],[Currency Scaling].[Currency Scaling].[Euro]))
								-(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY MAT],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[MAT],[Currency Scaling].[Currency Scaling].[Euro])),
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY MAT],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[MAT],[Currency Scaling].[Currency Scaling].[Euro])))
                                )*100; 
                        END SCOPE; 

                        // 3.1e USG % (YTG) = (( (([Turnover: (YTG)] + [Acquisition Turnover: (YTG)]) / ([Turnover: (PYYTG)] + Disposal Turnover(in PY): (YTG)))-1)*100)
                        SCOPE ([Measure].[Measure].&[M1_USG_RAW],[Date Comparison].[Date Comparison].[YTG]); 
                        THIS = (
                        DIVIDE(
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[YTG],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[YTG],[Currency Scaling].[Currency Scaling].[Euro]))
								-(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY YTG],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[YTG],[Currency Scaling].[Currency Scaling].[Euro])),
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY YTG],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[YTG],[Currency Scaling].[Currency Scaling].[Euro])))
                                )*100; 
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                        END SCOPE; 
                            
                        // 3.1f USG % (QTG) = (( (([Turnover: (QTG)] + [Acquisition Turnover: (QTG)]) / ([Turnover: (PYQTG)] + Disposal Turnover(in PY): (QTG)))-1)*100)
                        SCOPE ([Measure].[Measure].&[M1_USG_RAW],[Date Comparison].[Date Comparison].[QTG]); 
                        THIS = (
                        DIVIDE(
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[QTG],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[QTG],[Currency Scaling].[Currency Scaling].[Euro]))
								-(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY QTG],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[QTG],[Currency Scaling].[Currency Scaling].[Euro])),
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY QTG],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[QTG],[Currency Scaling].[Currency Scaling].[Euro])))
                                )*100; 
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                        END SCOPE; 
						
						//3.1g USG % (L3M) = (( (([Turnover: (L3M)] + [Acquisition Turnover: (L3M)]) / ([Turnover: (PY L3M)] + Disposal Turnover(in PY): (L3M)))-1)*100)
                        SCOPE ([Measure].[Measure].&[M1_USG_RAW],[Date Comparison].[Date Comparison].[L3M]); 
                        THIS = (
                        DIVIDE(
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[L3M],[Currency Scaling].[Currency Scaling].[Euro])+
                                ([Measure].[Measure].&[M1_TTO001_ACQ],[Date Comparison].[Date Comparison].[L3M],[Currency Scaling].[Currency Scaling].[Euro]))
								-(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[L3M],[Currency Scaling].[Currency Scaling].[Euro],[Period].[Period].[PY])+
                                     ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[L3M],[Currency Scaling].[Currency Scaling].[Euro])),
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[L3M],[Currency Scaling].[Currency Scaling].[Euro],[Period].[Period].[PY])+
                                     ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[L3M],[Currency Scaling].[Currency Scaling].[Euro])))
                                 )*100; 
                        END SCOPE;
							
                        // 3.2a UVG % (Current Period) = (( (([Deflated Turnover: (CY)] + [Deflated Acquisition Turnover: (CY)]) / ([Turnover: (PY)] + Disposal Turnover(in PY): (CY)))-1)*100)
                        SCOPE ([Measure].[Measure].&[M1_UVG],[Date Comparison].[Date Comparison].[Current Period]); 
                        THIS =ROUND((IIF(ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))
                                or
                        ISEMPTY(([Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])),
                        NULL,
                        DIVIDE(
                                (([Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DAC],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])),
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])))
                                -1)*100),6); 
                        END SCOPE; 

                        // 3.2b UVG % (QTD) = (( (([Deflated Turnover: (QTD)] + [Deflated Acquisition Turnover: (QTD)]) / ([Turnover: (PYQTD)] + Disposal Turnover(in PY): (QTD)))-1)*100)
                        SCOPE ([Measure].[Measure].&[M1_UVG],[Date Comparison].[Date Comparison].[QTD]); 
                        THIS =ROUND((IIF(ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY QTD],[Currency Scaling].[Currency Scaling].[Euro]))
                                or
                        ISEMPTY(([Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[QTD],[Currency Scaling].[Currency Scaling].[Euro])),
                        NULL,
                        DIVIDE(
                                (([Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[QTD],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DAC],[Date Comparison].[Date Comparison].[QTD],[Currency Scaling].[Currency Scaling].[Euro])),
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY QTD],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[QTD],[Currency Scaling].[Currency Scaling].[Euro])))
                                -1)*100),6); 
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                        END SCOPE; 

                        // 3.2c UVG % (YTD) = (( (([Deflated Turnover: (YTD)] + [Deflated Acquisition Turnover: (YTD)]) / ([Turnover: (PYYTD)] + Disposal Turnover(in PY): (YTD)))-1)*100)
                        SCOPE ([Measure].[Measure].&[M1_UVG],[Date Comparison].[Date Comparison].[YTD]); 
                        THIS =ROUND((IIF(ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY YTD],[Currency Scaling].[Currency Scaling].[Euro]))
                                or
                        ISEMPTY(([Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[YTD],[Currency Scaling].[Currency Scaling].[Euro])),
                        NULL,
                        DIVIDE(
                                (([Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[YTD],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DAC],[Date Comparison].[Date Comparison].[YTD],[Currency Scaling].[Currency Scaling].[Euro])),
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY YTD],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[YTD],[Currency Scaling].[Currency Scaling].[Euro])))
                                -1)*100),6); 
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                        END SCOPE; 

                        // 3.2d UVG % (MAT) = (( (([Deflated Turnover: (MAT)] + [Deflated Acquisition Turnover: (MAT)]) / ([Turnover: (PYMAT)] + Disposal Turnover(in PY): (MAT)))-1)*100)
                        SCOPE ([Measure].[Measure].&[M1_UVG],[Date Comparison].[Date Comparison].[MAT]); 
                        THIS =ROUND((IIF(ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY MAT],[Currency Scaling].[Currency Scaling].[Euro]))
                                or
                        ISEMPTY(([Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[MAT],[Currency Scaling].[Currency Scaling].[Euro])),
                        NULL,
                        DIVIDE(
                                (([Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[MAT],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DAC],[Date Comparison].[Date Comparison].[MAT],[Currency Scaling].[Currency Scaling].[Euro])),
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY MAT],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[MAT],[Currency Scaling].[Currency Scaling].[Euro])))
                                -1)*100),6); 
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                        END SCOPE; 

                        // 3.2e UVG % (YTG) = (( (([Deflated Turnover: (YTG)] + [Deflated Acquisition Turnover: (YTG)]) / ([Turnover: (PYYTG)] + Disposal Turnover(in PY): (QTG)))-1)*100)
                        SCOPE ([Measure].[Measure].&[M1_UVG],[Date Comparison].[Date Comparison].[YTG]); 
                        THIS =ROUND((IIF(ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY YTG],[Currency Scaling].[Currency Scaling].[Euro]))
                                or
                        ISEMPTY(([Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[YTG],[Currency Scaling].[Currency Scaling].[Euro])),
                        NULL,
                        DIVIDE(
                                (([Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[YTG],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DAC],[Date Comparison].[Date Comparison].[YTG],[Currency Scaling].[Currency Scaling].[Euro])),
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY YTG],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[YTG],[Currency Scaling].[Currency Scaling].[Euro])))
                                -1)*100),6); 
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                        END SCOPE; 

                        // 3.2f UVG % (QTG) = (( (([Deflated Turnover: (QTG)] + [Deflated Acquisition Turnover: (QTG)]) / ([Turnover: (PYQTG)] + Disposal Turnover(in PY): (QTG)))-1)*100)
                        SCOPE ([Measure].[Measure].&[M1_UVG],[Date Comparison].[Date Comparison].[QTG]); 
                        THIS =ROUND((IIF(ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY QTG],[Currency Scaling].[Currency Scaling].[Euro]))
                                or
                        ISEMPTY(([Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[QTG],[Currency Scaling].[Currency Scaling].[Euro])),
                        NULL,
                        DIVIDE(
                                (([Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[QTG],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DAC],[Date Comparison].[Date Comparison].[QTG],[Currency Scaling].[Currency Scaling].[Euro])),
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY QTG],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[QTG],[Currency Scaling].[Currency Scaling].[Euro])))
                                -1)*100),6); 
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                            END SCOPE; 
							
						// 3.2g UVG % (L3M) = (( (([Deflated Turnover: (L3M)] + [Deflated Acquisition Turnover: (L3M)]) / ([Turnover: (L3M PY)] + Disposal Turnover(in PY): (L3M)))-1)*100)
                        SCOPE ([Measure].[Measure].&[M1_UVG],[Date Comparison].[Date Comparison].[L3M]); 
                        THIS =ROUND((IIF(ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[L3M],[Currency Scaling].[Currency Scaling].[Euro],[Period].[Period].[PY]))
                                or
                        ISEMPTY(([Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[L3M],[Currency Scaling].[Currency Scaling].[Euro])),
                        NULL,
                        DIVIDE(
                                (([Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[L3M],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DAC],[Date Comparison].[Date Comparison].[L3M],[Currency Scaling].[Currency Scaling].[Euro])),
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[L3M],[Currency Scaling].[Currency Scaling].[Euro],[Period].[Period].[PY])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[L3M],[Currency Scaling].[Currency Scaling].[Euro])))
                                -1)*100),6); 
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                        END SCOPE;

                        // 3.2a UVG_RAW % (Current Period) = (( (([Deflated Turnover: (CY)] + [Deflated Acquisition Turnover: (CY)]) / ([Turnover: (PY)] + Disposal Turnover(in PY): (CY)))-1)*100)
                        SCOPE ([Measure].[Measure].&[M1_UVG_RAW],[Date Comparison].[Date Comparison].[Current Period]); 
                        THIS =(
                        DIVIDE(
                                (([Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DAC],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
								-(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])),
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])))
                                *100); 
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                        END SCOPE; 

                        // 3.2b UVG_RAW % (QTD) = (( (([Deflated Turnover: (QTD)] + [Deflated Acquisition Turnover: (QTD)]) / ([Turnover: (PYQTD)] + Disposal Turnover(in PY): (QTD)))-1)*100)
                        SCOPE ([Measure].[Measure].&[M1_UVG_RAW],[Date Comparison].[Date Comparison].[QTD]); 
                        THIS =(
                        DIVIDE(
                                (([Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[QTD],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DAC],[Date Comparison].[Date Comparison].[QTD],[Currency Scaling].[Currency Scaling].[Euro]))
								-(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY QTD],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[QTD],[Currency Scaling].[Currency Scaling].[Euro])),
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY QTD],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[QTD],[Currency Scaling].[Currency Scaling].[Euro])))
                                *100); 
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                        END SCOPE; 

                        // 3.2c UVG_RAW % (YTD) = (( (([Deflated Turnover: (YTD)] + [Deflated Acquisition Turnover: (YTD)]) / ([Turnover: (PYYTD)] + Disposal Turnover(in PY): (YTD)))-1)*100)
                        SCOPE ([Measure].[Measure].&[M1_UVG_RAW],[Date Comparison].[Date Comparison].[YTD]); 
                        THIS =(
                        DIVIDE(
                                (([Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[YTD],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DAC],[Date Comparison].[Date Comparison].[YTD],[Currency Scaling].[Currency Scaling].[Euro]))
								-(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY YTD],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[YTD],[Currency Scaling].[Currency Scaling].[Euro])),
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY YTD],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[YTD],[Currency Scaling].[Currency Scaling].[Euro])))
                                *100); 
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                        END SCOPE; 

                        // 3.2d UVG_RAW % (MAT) = (( (([Deflated Turnover: (MAT)] + [Deflated Acquisition Turnover: (MAT)]) / ([Turnover: (PYMAT)] + Disposal Turnover(in PY): (MAT)))-1)*100)
                        SCOPE ([Measure].[Measure].&[M1_UVG_RAW],[Date Comparison].[Date Comparison].[MAT]); 
                        THIS =(
                        DIVIDE(
                                (([Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[MAT],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DAC],[Date Comparison].[Date Comparison].[MAT],[Currency Scaling].[Currency Scaling].[Euro]))
								-(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY MAT],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[MAT],[Currency Scaling].[Currency Scaling].[Euro])),
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY MAT],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[MAT],[Currency Scaling].[Currency Scaling].[Euro])))
                                *100); 
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                        END SCOPE; 

                        // 3.2e UVG_RAW % (YTG) = (( (([Deflated Turnover: (YTG)] + [Deflated Acquisition Turnover: (YTG)]) / ([Turnover: (PYYTG)] + Disposal Turnover(in PY): (QTG)))-1)*100)
                        SCOPE ([Measure].[Measure].&[M1_UVG_RAW],[Date Comparison].[Date Comparison].[YTG]); 
                        THIS =(
                        DIVIDE(
                                (([Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[YTG],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DAC],[Date Comparison].[Date Comparison].[YTG],[Currency Scaling].[Currency Scaling].[Euro]))
								-(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY YTG],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[YTG],[Currency Scaling].[Currency Scaling].[Euro])),
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY YTG],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[YTG],[Currency Scaling].[Currency Scaling].[Euro])))
                                *100); 
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                        END SCOPE; 

                        // 3.2f UVG_RAW % (QTG) = (( (([Deflated Turnover: (QTG)] + [Deflated Acquisition Turnover: (QTG)]) / ([Turnover: (PYQTG)] + Disposal Turnover(in PY): (QTG)))-1)*100)
                        SCOPE ([Measure].[Measure].&[M1_UVG_RAW],[Date Comparison].[Date Comparison].[QTG]); 
                        THIS =(
                        DIVIDE(
                                (([Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[QTG],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DAC],[Date Comparison].[Date Comparison].[QTG],[Currency Scaling].[Currency Scaling].[Euro]))
								-(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY QTG],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[QTG],[Currency Scaling].[Currency Scaling].[Euro])),
                                (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY QTG],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[QTG],[Currency Scaling].[Currency Scaling].[Euro])))
                                *100); 
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                            END SCOPE; 
							
						// 3.2g UVG_RAW % (L3M) = (( (([Deflated Turnover: (L3M)] + [Deflated Acquisition Turnover: (L3M)]) / ([Turnover: (L3M PY)] + Disposal Turnover(in PY): (L3M)))-1)*100)
                        SCOPE ([Measure].[Measure].&[M1_UVG_RAW],[Date Comparison].[Date Comparison].[L3M]); 
                        THIS =(
                        DIVIDE(
                                (([Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[L3M],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DAC],[Date Comparison].[Date Comparison].[L3M],[Currency Scaling].[Currency Scaling].[Euro]))
								 -(([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[L3M],[Currency Scaling].[Currency Scaling].[Euro],[Period].[Period].[PY])+
                                     ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[L3M],[Currency Scaling].[Currency Scaling].[Euro])),
                                 (([Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[L3M],[Currency Scaling].[Currency Scaling].[Euro],[Period].[Period].[PY])+
                                    ([Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[L3M],[Currency Scaling].[Currency Scaling].[Euro])))
                                *100); 
                         FORMAT_STRING(THIS) = "#,##0.0"; 
                         END SCOPE;


                        // 3.3 UPG % = (( (([Turnover: (CY)] + [Acquisition Turnover: (CY)]) / ([Deflated Turnover: (CY)] + [Deflated Acquisition Turnover: (CY)]))-1)*100)
                        SCOPE ([Measure].[Measure].&[M1_UPG]); 
                        THIS =ROUND((IIF(ISEMPTY(([Measure].[Measure].&[M1_DFTT01],[Currency Scaling].[Currency Scaling].[Euro]))
                                or
                        ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro])),
                        NULL,
                        DIVIDE(
                                (([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_ACQ],[Currency Scaling].[Currency Scaling].[Euro])),
                                (([Measure].[Measure].&[M1_DFTT01],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DAC],[Currency Scaling].[Currency Scaling].[Euro])))
                                -1)*100),6); 
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                            END SCOPE; 

                        // 3.3 UPG_RAW % = (( (([Turnover: (CY)] + [Acquisition Turnover: (CY)]) / ([Deflated Turnover: (CY)] + [Deflated Acquisition Turnover: (CY)]))-1)*100)
                        SCOPE ([Measure].[Measure].&[M1_UPG_RAW]); 
                        THIS =(
                        DIVIDE(
                                (([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_ACQ],[Currency Scaling].[Currency Scaling].[Euro]))
								-(([Measure].[Measure].&[M1_DFTT01],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DAC],[Currency Scaling].[Currency Scaling].[Euro])),
                                (([Measure].[Measure].&[M1_DFTT01],[Currency Scaling].[Currency Scaling].[Euro])+
                                    ([Measure].[Measure].&[M1_TTO001_DAC],[Currency Scaling].[Currency Scaling].[Euro])))
                                *100); 
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                            END SCOPE; 

						// 3.4 Trade Terms in % GSV  = [Trade Terms] / [GSV]
						SCOPE ([Measure].[Measure].&[M1_TTGSV]); 
						THIS = (IIF (([Measure].[Measure].&[M1_GSV001]
						,[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[M1_GSV001]
						,[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,(([Measure].[Measure].&[M1_TSD001],[Currency Scaling].[Currency Scaling].[Euro])/
						([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))*100)
						); 
						END SCOPE; 

						// 3.5 Gross Margin % = [Gross Profit] / [Turnover]
						SCOPE ([Measure].[Measure].&[M1_GM]); 
						THIS = ROUND((IIF (([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]) = 0 OR ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]))
						,IIF(ISEMPTY(([Measure].[Measure].&[T3_GP0001],[Currency Scaling].[Currency Scaling].[Euro]))
                        ,NULL
                        ,0)
						,(([Measure].[Measure].&[T3_GP0001],[Currency Scaling].[Currency Scaling].[Euro])/([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]))*100)
						),4); 
						FORMAT_STRING(THIS) = "#,##0.0";
						END SCOPE; 

                        // 3.5 Gross Margin % = [Gross Profit] / [Turnover]
						SCOPE ([Measure].[Measure].&[M1_GM_RAW]); 
						THIS = (([Measure].[Measure].&[T3_GP0001],[Currency Scaling].[Currency Scaling].[Euro])
                                /([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]))*100; 
						FORMAT_STRING(THIS) = "#,##0.0";
						END SCOPE; 

						// 3.6 Trade Terms in % Turnover [Trade Terms] / [Turnover]
						SCOPE ([Measure].[Measure].&[M1_TTO]); 
						THIS = (IIF (([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]) = 0 OR ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,(([Measure].[Measure].&[M1_TSD001],[Currency Scaling].[Currency Scaling].[Euro])/
						([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]))*100)
						);
						END SCOPE; 

						// 3.7A Gross Margin Growth %	= [Gross Margin %: current year]-[Gross Margin %: prior year]
						SCOPE ([Measure].[Measure].&[YOY_GM],[Date Comparison].[Date Comparison].[Current Period]); 
						THIS = ([Measure].[Measure].&[M1_GM],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])
						- ([Measure].[Measure].&[M1_GM],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]); 
						END SCOPE; 

						// 3.7B Gross Margin Growth %	= [Gross Margin %: current year]-[Gross Margin %: prior year]
						SCOPE ([Measure].[Measure].&[YOY_GM],[Date Comparison].[Date Comparison].[QTD]); 
						THIS = ([Measure].[Measure].&[M1_GM],[Date Comparison].[Date Comparison].[QTD],[Currency Scaling].[Currency Scaling].[Euro])
						- ([Measure].[Measure].&[M1_GM],[Date Comparison].[Date Comparison].[PY QTD],[Currency Scaling].[Currency Scaling].[Euro]); 
						END SCOPE; 

						// 3.7C Gross Margin Growth %	= [Gross Margin %: current year]-[Gross Margin %: prior year]
						SCOPE ([Measure].[Measure].&[YOY_GM],[Date Comparison].[Date Comparison].[YTD]); 
						THIS = IIF(([Measure].[Measure].&[M1_GM],[Date Comparison].[Date Comparison].[YTD],[Currency Scaling].[Currency Scaling].[Euro]) = 0 OR
                                  ISEMPTY(([Measure].[Measure].&[M1_GM],[Date Comparison].[Date Comparison].[YTD],[Currency Scaling].[Currency Scaling].[Euro])),NULL,
                          ([Measure].[Measure].&[M1_GM],[Date Comparison].[Date Comparison].[YTD],[Currency Scaling].[Currency Scaling].[Euro])
						- ([Measure].[Measure].&[M1_GM],[Date Comparison].[Date Comparison].[PY YTD],[Currency Scaling].[Currency Scaling].[Euro])); 
						END SCOPE; 

						// 3.7D Gross Margin Growth %	= [Gross Margin %: current year]-[Gross Margin %: prior year]
						SCOPE ([Measure].[Measure].&[YOY_GM],[Date Comparison].[Date Comparison].[MAT]); 
						THIS = ([Measure].[Measure].&[M1_GM],[Date Comparison].[Date Comparison].[MAT],[Currency Scaling].[Currency Scaling].[Euro])
						- ([Measure].[Measure].&[M1_GM],[Date Comparison].[Date Comparison].[PY MAT],[Currency Scaling].[Currency Scaling].[Euro]); 
						END SCOPE; 

						// 3.8A GSV Growth % = ([GSV: current year]-[GSV: prior year])/[GSV: prior year]
						SCOPE ([Measure].[Measure].&[YOY_GSV],[Date Comparison].[Date Comparison].[Current Period]); 
						THIS = (
						IIF (([Measure].[Measure].&[M1_GSV001],[Date Comparison].[Date Comparison].[PY Period]
						,[Currency Scaling].[Currency Scaling].[Euro]) = 0 OR
						ISEMPTY(([Measure].[Measure].&[M1_GSV001],[Date Comparison].[Date Comparison].[PY Period]
						,[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[M1_GSV001],[Date Comparison].[Date Comparison].[Current Period]
						,[Currency Scaling].[Currency Scaling].[Euro])-
						([Measure].[Measure].&[M1_GSV001],[Date Comparison].[Date Comparison].[PY Period]
						,[Currency Scaling].[Currency Scaling].[Euro]))
						/([Measure].[Measure].&[M1_GSV001],[Date Comparison].[Date Comparison].[PY Period]
						,[Currency Scaling].[Currency Scaling].[Euro]))*100)
						); 
						END SCOPE; 

						// 3.8B GSV Growth % = ([GSV: current year]-[GSV: prior year])/[GSV: prior year]
						SCOPE ([Measure].[Measure].&[YOY_GSV],[Date Comparison].[Date Comparison].[QTD]); 
						THIS =
						(IIF (([Measure].[Measure].&[M1_GSV001],[Date Comparison].[Date Comparison].[PY QTD]
						,[Currency Scaling].[Currency Scaling].[Euro]) = 0 OR ISEMPTY(([Measure].[Measure].&[M1_GSV001],[Date Comparison].[Date Comparison].[PY QTD],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[M1_GSV001],[Date Comparison].[Date Comparison].[QTD],[Currency Scaling].[Currency Scaling].[Euro])-([Measure].[Measure].&[M1_GSV001],[Date Comparison].[Date Comparison].[PY QTD],[Currency Scaling].[Currency Scaling].[Euro])) /([Measure].[Measure].&[M1_GSV001],[Date Comparison].[Date Comparison].[PY QTD],[Currency Scaling].[Currency Scaling].[Euro]))*100)
						);
						END SCOPE; 

						// 3.8C GSV Growth % = ([GSV: current year]-[GSV: prior year])/[GSV: prior year]
						SCOPE ([Measure].[Measure].&[YOY_GSV],[Date Comparison].[Date Comparison].[YTD]); 
						THIS = (IIF (([Measure].[Measure].&[M1_GSV001],[Date Comparison].[Date Comparison].[PY YTD],[Currency Scaling].[Currency Scaling].[Euro]) = 0 OR ISEMPTY(([Measure].[Measure].&[M1_GSV001],[Date Comparison].[Date Comparison].[PY YTD],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[M1_GSV001],[Date Comparison].[Date Comparison].[YTD],[Currency Scaling].[Currency Scaling].[Euro])-([Measure].[Measure].&[M1_GSV001],[Date Comparison].[Date Comparison].[PY YTD],[Currency Scaling].[Currency Scaling].[Euro])) /([Measure].[Measure].&[M1_GSV001],[Date Comparison].[Date Comparison].[PY YTD],[Currency Scaling].[Currency Scaling].[Euro]))*100)
						);
						END SCOPE; 

						// 3.8D GSV Growth % = ([GSV: current year]-[GSV: prior year])/[GSV: prior year]
						SCOPE ([Measure].[Measure].&[YOY_GSV],[Date Comparison].[Date Comparison].[MAT]); 
						THIS = (IIF (([Measure].[Measure].&[M1_GSV001],[Date Comparison].[Date Comparison].[PY MAT],[Currency Scaling].[Currency Scaling].[Euro]) = 0 OR ISEMPTY(([Measure].[Measure].&[M1_GSV001],[Date Comparison].[Date Comparison].[PY MAT],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[M1_GSV001],[Date Comparison].[Date Comparison].[MAT],[Currency Scaling].[Currency Scaling].[Euro])-([Measure].[Measure].&[M1_GSV001],[Date Comparison].[Date Comparison].[PY MAT],[Currency Scaling].[Currency Scaling].[Euro])) /([Measure].[Measure].&[M1_GSV001],[Date Comparison].[Date Comparison].[PY MAT],[Currency Scaling].[Currency Scaling].[Euro]))*100)
						); 
						END SCOPE; 

						// 3.9A BBTOT Growth % = ([Business Building: current year]-[Business Building: prior year])/[Business Building: prior year]
						SCOPE ([Measure].[Measure].&[YOY_BBTOT],[Date Comparison].[Date Comparison].[Current Period]); 
						THIS = (IIF (([Measure].[Measure].&[PM_BBOT],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[PM_BBOT],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[PM_BBOT],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])-
						([Measure].[Measure].&[PM_BBOT],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro])) /
						([Measure].[Measure].&[PM_BBOT],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))*100)
						);
						END SCOPE; 

						// 3.9B BBTOT Growth % = ([Business Building: current year]-[Business Building: prior year])/[Business Building: prior year]
						SCOPE ([Measure].[Measure].&[YOY_BBTOT],[Date Comparison].[Date Comparison].[QTD]); 
						THIS = (IIF (([Measure].[Measure].&[PM_BBOT],[Date Comparison].[Date Comparison].[PY QTD],[Currency Scaling].[Currency Scaling].[Euro]) = 0 OR ISEMPTY(([Measure].[Measure].&[PM_BBOT],[Date Comparison].[Date Comparison].[PY QTD],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[PM_BBOT],[Date Comparison].[Date Comparison].[QTD],[Currency Scaling].[Currency Scaling].[Euro])-([Measure].[Measure].&[PM_BBOT],[Date Comparison].[Date Comparison].[PY QTD],[Currency Scaling].[Currency Scaling].[Euro])) /([Measure].[Measure].&[PM_BBOT],[Date Comparison].[Date Comparison].[PY QTD],[Currency Scaling].[Currency Scaling].[Euro]))*100)
						);
						END SCOPE; 

						// 3.9C BBTOT Growth % = ([Business Building: current year]-[Business Building: prior year])/[Business Building: prior year]
						SCOPE ([Measure].[Measure].&[YOY_BBTOT],[Date Comparison].[Date Comparison].[YTD]); 
						THIS = (IIF (([Measure].[Measure].&[PM_BBOT],[Date Comparison].[Date Comparison].[PY YTD],[Currency Scaling].[Currency Scaling].[Euro]) = 0 OR ISEMPTY(([Measure].[Measure].&[PM_BBOT],[Date Comparison].[Date Comparison].[PY YTD],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[PM_BBOT],[Date Comparison].[Date Comparison].[YTD],[Currency Scaling].[Currency Scaling].[Euro])-([Measure].[Measure].&[PM_BBOT],[Date Comparison].[Date Comparison].[PY YTD],[Currency Scaling].[Currency Scaling].[Euro])) /([Measure].[Measure].&[PM_BBOT],[Date Comparison].[Date Comparison].[PY YTD],[Currency Scaling].[Currency Scaling].[Euro]))*100)
						);
						END SCOPE; 

						// 3.9D BBTOT Growth % = ([Business Building: current year]-[Business Building: prior year])/[Business Building: prior year]
						SCOPE ([Measure].[Measure].&[YOY_BBTOT],[Date Comparison].[Date Comparison].[MAT]); 
						THIS = (IIF (([Measure].[Measure].&[PM_BBOT],[Date Comparison].[Date Comparison].[PY MAT],[Currency Scaling].[Currency Scaling].[Euro]) = 0 OR ISEMPTY(([Measure].[Measure].&[PM_BBOT],[Date Comparison].[Date Comparison].[PY MAT],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[PM_BBOT],[Date Comparison].[Date Comparison].[MAT],[Currency Scaling].[Currency Scaling].[Euro])-([Measure].[Measure].&[PM_BBOT],[Date Comparison].[Date Comparison].[PY MAT],[Currency Scaling].[Currency Scaling].[Euro])) /([Measure].[Measure].&[PM_BBOT],[Date Comparison].[Date Comparison].[PY MAT],[Currency Scaling].[Currency Scaling].[Euro]))*100)
						);
						END SCOPE; 

						// 3.10 BBTOT in % GSV [BBTOT] / [GSV]
						SCOPE ([Measure].[Measure].&[PGSV_BBTOT]); 
						THIS = (IIF (([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]) = 0 OR ISEMPTY(([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,(([Measure].[Measure].&[PM_BBOT],[Currency Scaling].[Currency Scaling].[Euro])
						/([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))*100)
						);
						END SCOPE; 

						// 3.11 A&P in % TO = ( [A&P] / [Turnover] )
						SCOPE ([Measure].[Measure].&[PTO_BMI]); 
						THIS = (IIF (([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[M4_MDC001],[Currency Scaling].[Currency Scaling].[Euro])
						/([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]))*100))
						); 
						END SCOPE; 

						// 3.12 A&P Trade in % TO = ( [A&P Trade] / [Turnover] )
						SCOPE ([Measure].[Measure].&[PTO_BMI_TR]); 
						THIS = (IIF (([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[M4_MDC01T],[Currency Scaling].[Currency Scaling].[Euro])
						/([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]))*100))
						); 
						END SCOPE; 

						// 3.13 Overheads in % TO = ( [Overheads] / [Turnover] )
						SCOPE ([Measure].[Measure].&[PTO_OVH]); 
						THIS = (IIF (([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[M4_INDR0C],[Currency Scaling].[Currency Scaling].[Euro])
						/([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]))*100))
						); 
						END SCOPE; 

						// 3.14 Overheads Trade in % TO = ( [Overheads Trade] / [Turnover] )
						SCOPE ([Measure].[Measure].&[PTO_OVH_TR]); 
						THIS = (IIF (([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[M4_INDR0T],[Currency Scaling].[Currency Scaling].[Euro])
						/([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]))*100))
						); 
						END SCOPE; 

						// 3.15 Customer Contribution in % Turnover [Customer Contribution] / [Turnover]
						SCOPE ([Measure].[Measure].&[PTO_CC]); 
						THIS = (IIF (([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,(([Measure].[Measure].&[M7_CC0001],[Currency Scaling].[Currency Scaling].[Euro])
						/([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]))*100)
						); 
						END SCOPE; 

						// 3.16 Core Operating Profit in % Turnover [Core Operating Profit] / [Turnover]
						SCOPE ([Measure].[Measure].&[PTO_COP]); 
						THIS = (IIF (([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,(([Measure].[Measure].&[T_TRXR0C],[Currency Scaling].[Currency Scaling].[Euro])
						/([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]))*100)
						); 
						END SCOPE; 

						// 3.171 Underlying Operating Profit bOTI in % Turnover [Underlying Operating Profit bOTI] / [Turnover]
						SCOPE ([Measure].[Measure].&[PTO_OVH0211]); 
						THIS = (IIF (([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,(([Measure].[Measure].&[OVH0211],[Currency Scaling].[Currency Scaling].[Euro])
						/([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]))*100)
						); 
						END SCOPE; 

						// 3.172 Underlying Operating Profit in % Turnover [Underlying Operating Profit] / [Turnover]
						SCOPE ([Measure].[Measure].&[PTO_OVH0212]); 
						THIS = (IIF (([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,(([Measure].[Measure].&[OVH0212],[Currency Scaling].[Currency Scaling].[Euro])
						/([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]))*100)
						);
						END SCOPE; 

						--End Hierarchy A

						//3.18 Customer Margin %
						SCOPE([Measure].[Measure].&[S1_CSTMRG]); 
						THIS = IIF(([Measure].[Measure].&[S1_VAL002],[Measures].[Value]) = 0
						OR ISEMPTY(([Measure].[Measure].&[S1_VAL002],[Measures].[Value])),
						NULL,
						([Measure].[Measure].&[S1_CSTMRG_ABS]/[Measure].[Measure].&[S1_VAL002] )*100); 
						END SCOPE; 

						//3.19 Front Margin %
						SCOPE([Measure].[Measure].&[S1_FRMRG]); 
						THIS = IIF(([Measure].[Measure].&[S1_VAL002],[Measures].[Value]) = 0
						OR ISEMPTY(([Measure].[Measure].&[S1_VAL002],[Measures].[Value])),
						NULL,
						([Measure].[Measure].&[S1_FRMRG_ABS]/[Measure].[Measure].&[S1_VAL002] )*100); 
						END SCOPE; 

						//3.20 Back Margin %
						SCOPE([Measure].[Measure].&[S1_BCKMRG]); 
						THIS = IIF(([Measure].[Measure].&[S1_VAL002],[Measures].[Value]) = 0
						OR ISEMPTY(([Measure].[Measure].&[S1_VAL002],[Measures].[Value])),
						NULL,
						([Measure].[Measure].&[S1_BCKMRG_ABS]/[Measure].[Measure].&[S1_VAL002] )*100); 
						END SCOPE; 
						--END Percentage Measures

						// 1.1s GSV Scope
						SCOPE ([Measures].[Gross Sales Value (GSV)]); 
						THIS = ([Measure].[Measure].&[M1_GSV001],[Measures].[Value]); 
						END SCOPE; 

						// 1.2s Turnover
						SCOPE ([Measures].[Turnover]); 
						THIS = ROUND(([Measure].[Measure].&[M1_TTO001],[Measures].[Value]),4);
                        FORMAT_STRING(THIS) = "#,##0.0";       
						END SCOPE; 

						// 1.3s Gross Profit
						SCOPE ([Measures].[Gross Profit]); 
						THIS  = ROUND(([Measure].[Measure].&[T3_GP0001],[Measures].[Value]),4); 
                        FORMAT_STRING(THIS) = "#,##0.0";  
						END SCOPE; 

						// 1.4s Total Supply Chain Costs
						SCOPE ([Measures].[Total Supply Chain Costs]); 
						THIS = ([Measure].[Measure].&[M2_SCC00R],[Measures].[Value]); 
						END SCOPE; 

						// 1.5s Trade Terms
						SCOPE ([Measures].[Trade Terms]); 
						THIS = ([Measure].[Measure].&[M1_TSD001],[Measures].[Value]); 
						END SCOPE; 

						// 1.6s Sales Volume - CU(k)
						SCOPE ([Measures].[Sales Volume - CU (Secondary)]); 
						THIS = ([Measure].[Measure].&[S1_VOL001K],[Measures].[Value]); 
						END SCOPE; 

						// 1.7s Sales Volume - Tons
						SCOPE ([Measures].[Sales Volume - Tons (Secondary)]); 
						THIS = ([Measure].[Measure].&[S1_LTK001],[Measures].[Value]); 
						END SCOPE; 

						// 1.8s NIV
						SCOPE ([Measures].[Net Invoice Value (NIV)]); 
						THIS = ([Measure].[Measure].&[M1_NIV001],[Measures].[Value]); 
						END SCOPE; 

						// 1.9s  USG %
						SCOPE ([Measures].[USG %]); 
						THIS = ROUND(([Measure].[Measure].&[M1_USG],[Measures].[Value])/100,6); 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.10s  USG % abs
						SCOPE ([Measures].[USG]); 
						THIS = ROUND(([Measure].[Measure].&[M1_USG],[Measures].[Value]),4); 
						FORMAT_STRING(THIS) = "#,##0.0"; 
						END SCOPE; 

						// 1.11s  UVG %
						SCOPE ([Measures].[UVG %]); 
						THIS = ROUND(([Measure].[Measure].&[M1_UVG],[Measures].[Value])/100,6); 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.12s  UVG % abs
						SCOPE ([Measures].[UVG]); 
						THIS = ROUND(([Measure].[Measure].&[M1_UVG],[Measures].[Value]),4); 
						FORMAT_STRING(THIS) = "#,##0.0"; 
						END SCOPE; 

						// 1.13s  UPG %
						SCOPE ([Measures].[UPG %]); 
						THIS = ROUND(([Measure].[Measure].&[M1_UPG],[Measures].[Value])/100,6); 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.31  UPG % abs
						SCOPE ([Measures].[UPG]); 
						THIS = ROUND(([Measure].[Measure].&[M1_UPG],[Measures].[Value]),4); 
						FORMAT_STRING(THIS) = "#,##0.0"; 
						END SCOPE; 

						// 1.12s  Trade Terms in % GSV
						SCOPE ([Measures].[Trade Terms in % GSV]); 
						THIS = ([Measure].[Measure].&[M1_TTGSV],[Measures].[Value])/100; 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.13s  Gross Margin %
						SCOPE ([Measures].[Gross Margin %]); 
						THIS = ROUND(([Measure].[Measure].&[M1_GM],[Measures].[Value])/100,6); 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.51  Gross Margin % abs
						SCOPE ([Measures].[Gross Margin]); 
						THIS = ROUND(([Measure].[Measure].&[M1_GM],[Measures].[Value]),4); 
						FORMAT_STRING(THIS) = "#,##0.0"; 
						END SCOPE; 

						// 1.14s  Trade Terms in % Turnover
						SCOPE ([Measures].[Trade Terms in % Turnover]); 
						THIS = ([Measure].[Measure].&[M1_TTO],[Measures].[Value])/100; 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.15s  Gross Margin Growth %
						SCOPE ([Measures].[Gross Margin Growth %]); 
						THIS = ROUND(([Measure].[Measure].&[YOY_GM],[Measures].[Forecast Value])/100,6); 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.16s   GSV Growth %
						SCOPE ([Measures].[GSV Growth %]); 
						THIS = ([Measure].[Measure].&[YOY_GSV],[Measures].[Value])/100; 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.17s   BBTOT YOY % Change
						SCOPE ([Measures].[BBTOT Growth %]); 
						THIS = ([Measure].[Measure].&[YOY_BBTOT],[Measures].[Value])/100; 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.18s   Business Building & Other Terms
						SCOPE ([Measures].[Business Building & Other Terms]); 
						THIS = ([Measure].[Measure].&[PM_BBOT],[Measures].[Value]); 
						END SCOPE; 

						// 1.18s   Deflated Turnover
						SCOPE ([Measures].[Deflated Turnover]); 
						THIS = ([Measure].[Measure].&[M1_DFTT01],[Measures].[Value]); 
						END SCOPE; 

						// 1.19s   BBTOT % GSV
						SCOPE ([Measures].[BBTOT % GSV]); 
						THIS = ([Measure].[Measure].&[PGSV_BBTOT],[Measures].[Value])/100; 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.18s   Deflated Turnover
						SCOPE ([Measures].[Deflated Turnover]); 
						THIS = ([Measure].[Measure].&[M1_DFTT01],[Measures].[Value]); 
						END SCOPE; 

						// 1.18s   Sales Volume - Tons (Primary)
						SCOPE ([Measures].[Sales Volume - Tons (Primary)]); 
						THIS = ([Measure].[Measure].&[M1_LTK001],[Measures].[Value]); 
						END SCOPE; 

						// 1.18s   Sales Volume - Consumer units (k) (Primary)
						SCOPE ([Measures].[Sales Volume - Consumer units (k) (Primary)]); 
						THIS = ([Measure].[Measure].&[M1_UNI00RK],[Measures].[Value]); 
						END SCOPE; 

						// 1.18s   Customer Contribution
						SCOPE ([Measures].[Customer Contribution]); 
						THIS = ([Measure].[Measure].&[M7_CC0001],[Measures].[Value]); 
						END SCOPE; 

						// 1.18s   Core Operating Profit
						SCOPE ([Measures].[Core Operating Profit]); 
						THIS = ([Measure].[Measure].&[T_TRXR0C],[Measures].[Value]); 
						END SCOPE; 

						// 1.18s   BMI Trade
						SCOPE ([Measures].[BMI Trade]); 
						THIS = ([Measure].[Measure].&[M4_MDC01T],[Measures].[Value]); 
						END SCOPE; 

						// 1.91   BMI % TO abs
						SCOPE ([Measures].[BMI TO]); 
						THIS = ([Measure].[Measure].&[PTO_BMI],[Measures].[Value]); 
						FORMAT_STRING(THIS) = "#,##0.0"; 
						END SCOPE;

						// 1.18s   Overhead Trade
						SCOPE ([Measures].[Overhead Trade]); 
						THIS = ([Measure].[Measure].&[M4_INDR0T],[Measures].[Value]); 
						END SCOPE; 

						//1.361 UOM % abs
						SCOPE([Measures].[UOM]); 
						THIS = (IIF (([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro],[Measures].[Value]) = 0
						OR ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro],[Measures].[Value]))
							,NULL
							,((([Measure].[Measure].&[OVH0212],[Currency Scaling].[Currency Scaling].[Euro],[Measures].[Value])
							/([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro],[Measures].[Value]))*100))
							); 
						FORMAT_STRING(THIS) = "#,##0.0"; 
						END SCOPE; 
						
						//1.361a UOM % Turnover
						SCOPE([Measures].[UOM % Turnover]); 
						THIS = (IIF (([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro],[Measures].[Value]) = 0
						OR ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro],[Measures].[Value]))
							,NULL
							,((([Measure].[Measure].&[OVH0212],[Currency Scaling].[Currency Scaling].[Euro],[Measures].[Value])
							/([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro],[Measures].[Value]))))
							); 
						FORMAT_STRING(THIS) = "#,##0.0%";
						END SCOPE;

                        

						// 1.20s   Turnover vs PY

						SCOPE ([Measures].[Turnover vs PY]); 
						THIS = ROUND(([Measure].[Measure].&[M1_TTO001],[Measures].[Value],[Period].[Period].[vs PY]),4);
                        FORMAT_STRING(THIS) = "#,##0.0"; 
						END SCOPE; 

						// 1.20A Turnover vs PY = ([Turnover: current period]-[Turnover: prior period])
						SCOPE ([Measures].[Turnover vs PY],[Date Comparison].[Date Comparison].[Current Period]); 
						THIS = ROUND(([Measure].[Measure].&[M1_TTO001],[Measures].[Value],
						[Date Comparison].[Date Comparison].[Current Period])-
						([Measure].[Measure].&[M1_TTO001],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY Period]),4); 
                        FORMAT_STRING(THIS) = "#,##0.0";
						END SCOPE; 

						// 1.20B Turnover vs PY = ([Turnover: current QTD]-[Turnover: prior QTD])
						SCOPE ([Measures].[Turnover vs PY],[Date Comparison].[Date Comparison].[QTD]); 
						THIS = ROUND(([Measure].[Measure].&[M1_TTO001],[Measures].[Value],[Date Comparison].[Date Comparison].[QTD])-
						([Measure].[Measure].&[M1_TTO001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY QTD]),4);
                        FORMAT_STRING(THIS) = "#,##0.0";
						END SCOPE; 

						// 1.20C Turnover vs PY = ([Turnover: current YTD]-[Turnover: prior YTD])
						SCOPE ([Measures].[Turnover vs PY],[Date Comparison].[Date Comparison].[YTD]); 
						THIS = ([Measure].[Measure].&[M1_TTO001],[Measures].[Value],[Date Comparison].[Date Comparison].[YTD])-
						([Measure].[Measure].&[M1_TTO001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY YTD]);
						FORMAT_STRING(THIS) = "#,##0.0";
                        END SCOPE; 

						// 1.20D Turnover vs PY = ([Turnover: current MAT]-[Turnover: prior MAT])
						SCOPE ([Measures].[Turnover vs PY],[Date Comparison].[Date Comparison].[MAT]); 
						THIS = ROUND(([Measure].[Measure].&[M1_TTO001],[Measures].[Value],[Date Comparison].[Date Comparison].[MAT])-
						([Measure].[Measure].&[M1_TTO001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY MAT]),4);
                        FORMAT_STRING(THIS) = "#,##0.0";        
						END SCOPE; 

						// 1.20E Turnover vs PY = ([Turnover: current Full Year]-[Turnover: prior Full Year])
						SCOPE ([Measures].[Turnover vs PY],[Date Comparison].[Date Comparison].[Full Year]); 
						THIS = ROUND(([Measure].[Measure].&[M1_TTO001],[Measures].[Value],[Date Comparison].[Date Comparison].[Full Year])-
						([Measure].[Measure].&[M1_TTO001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Full Year]),4);
                        FORMAT_STRING(THIS) = "#,##0.0";						
                        END SCOPE; 

						// 1.20s   PY Turnover

						// 1.20A PY Turnover = ([Turnover: prior period])
						SCOPE ([Measures].[PY Turnover]); 
						THIS =
						([Measure].[Measure].&[M1_TTO001],[Measures].[Value],[Period].[Period].[PY]);
						END SCOPE; 

						// 1.20A PY Turnover = ([Turnover: prior period])
						SCOPE ([Measures].[PY Turnover],[Date Comparison].[Date Comparison].[Current Period]); 
						THIS =
						([Measure].[Measure].&[M1_TTO001],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY Period]);
						END SCOPE; 

						// 1.20B PY Turnover = ([Turnover: prior QTD])
						SCOPE ([Measures].[PY Turnover],[Date Comparison].[Date Comparison].[QTD]); 
						THIS =
						([Measure].[Measure].&[M1_TTO001],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY QTD]);
						END SCOPE; 

						// 1.20C PY Turnover = ([Turnover: prior YTD])
						SCOPE ([Measures].[PY Turnover],[Date Comparison].[Date Comparison].[YTD]); 
						THIS =
						([Measure].[Measure].&[M1_TTO001],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY YTD]);
						END SCOPE; 

						// 1.20D PY Turnover = ([Turnover: prior MAT])
						SCOPE ([Measures].[PY Turnover],[Date Comparison].[Date Comparison].[MAT]); 
						THIS =
						([Measure].[Measure].&[M1_TTO001],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY MAT]);
						END SCOPE; 

						// 1.20E PY Turnover = ([Turnover: prior Full Year])
						SCOPE ([Measures].[PY Turnover],[Date Comparison].[Date Comparison].[Full Year]); 
						THIS =
						([Measure].[Measure].&[M1_TTO001],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY Full Year]);
						END SCOPE; 


						// 1.21s   Gross Profit vs PY
						// 1.21A Gross Profit vs PY = ([Gross Profit: current period]-[Gross Profit: prior period])
						SCOPE ([Measures].[Gross Profit vs PY],[Date Comparison].[Date Comparison].[Current Period]); 
						THIS = ROUND(([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[Current Period])-
						([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Period]),4);
                        FORMAT_STRING(THIS) = "#,##0.0"; 						
                        END SCOPE; 

						// 1.21B Gross Profit vs PY = ([Gross Profit: current QTD]-[Gross Profit: prior QTD])
						SCOPE ([Measures].[Gross Profit vs PY],[Date Comparison].[Date Comparison].[QTD]); 
						THIS = ROUND(([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[QTD])-
						([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY QTD]),4);
                        FORMAT_STRING(THIS) = "#,##0.0"; 		
						END SCOPE; 

						// 1.21C Gross Profit vs PY = ([Gross Profit: current YTD]-[Gross Profit: prior YTD])
						SCOPE ([Measures].[Gross Profit vs PY],[Date Comparison].[Date Comparison].[YTD]); 
						THIS = ROUND(([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[YTD])-
						([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY YTD]),4);
                        FORMAT_STRING(THIS) = "#,##0.0"; 		
						END SCOPE; 

						// 1.21D Gross Profit vs PY = ([Gross Profit: current MAT]-[Gross Profit: prior MAT])
						SCOPE ([Measures].[Gross Profit vs PY],[Date Comparison].[Date Comparison].[MAT]); 
						THIS = ROUND(([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[MAT])-
						([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY MAT]),4);
                        FORMAT_STRING(THIS) = "#,##0.0"; 		
						END SCOPE; 

						// 1.21E Gross Profit vs PY = ([Gross Profit: current Full Year]-[Gross Profit: prior Full Year])
						SCOPE ([Measures].[Gross Profit vs PY],[Date Comparison].[Date Comparison].[Full Year]); 
						THIS = ROUND(([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[Full Year])-
						([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Full Year]),4);
                        FORMAT_STRING(THIS) = "#,##0.0"; 		
						END SCOPE; 

						// 1.20s   PY Gross Profit
						// 1.20A PY Gross Profit = ([Gross Profit: prior period])
						SCOPE ([Measures].[PY Gross Profit],[Date Comparison].[Date Comparison].[Current Period]); 
						THIS =
						([Measure].[Measure].&[T3_GP0001],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY Period]);
						END SCOPE; 

						// 1.20B PY Gross Profit = ([Gross Profit: prior QTD])
						SCOPE ([Measures].[PY Gross Profit],[Date Comparison].[Date Comparison].[QTD]); 
						THIS =
						([Measure].[Measure].&[T3_GP0001],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY QTD]);
						END SCOPE; 

						// 1.20C PY Gross Profit = ([Gross Profit: prior YTD])
						SCOPE ([Measures].[PY Gross Profit],[Date Comparison].[Date Comparison].[YTD]); 
						THIS =
						([Measure].[Measure].&[T3_GP0001],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY YTD]);
						END SCOPE; 

						// 1.20D PY Gross Profit = ([Gross Profit: prior MAT])
						SCOPE ([Measures].[PY Gross Profit],[Date Comparison].[Date Comparison].[MAT]); 
						THIS =
						([Measure].[Measure].&[T3_GP0001],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY MAT]);
						END SCOPE; 

						// 1.20E PY Gross Profit = ([Gross Profit: prior Full Year])
						SCOPE ([Measures].[PY Gross Profit],[Date Comparison].[Date Comparison].[Full Year]); 
						THIS =
						([Measure].[Measure].&[T3_GP0001],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY Full Year]); 
						END SCOPE; 

						// 1.20s   PY GSV
						// 1.20A PY GSV = ([GSV: prior period])
						SCOPE ([Measures].[PY GSV],[Date Comparison].[Date Comparison].[Current Period]); 
						THIS =
						([Measure].[Measure].&[M1_GSV001],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY Period]);
						END SCOPE; 

						// 1.20B PY GSV = ([GSV: prior QTD])
						SCOPE ([Measures].[PY GSV],[Date Comparison].[Date Comparison].[QTD]); 
						THIS =
						([Measure].[Measure].&[M1_GSV001],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY QTD]);
						END SCOPE; 

						// 1.20C PY GSV = ([GSV: prior YTD])
						SCOPE ([Measures].[PY GSV],[Date Comparison].[Date Comparison].[YTD]); 
						THIS =
						([Measure].[Measure].&[M1_GSV001],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY YTD]); 
						END SCOPE; 

						// 1.20D PY GSV = ([GSV: prior MAT])
						SCOPE ([Measures].[PY GSV],[Date Comparison].[Date Comparison].[MAT]); 
						THIS =
						([Measure].[Measure].&[M1_GSV001],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY MAT]); 
						END SCOPE; 

						// 1.20E PY GSV = ([GSV: prior Full Year])
						SCOPE ([Measures].[PY GSV],[Date Comparison].[Date Comparison].[Full Year]); 
						THIS =
						([Measure].[Measure].&[M1_GSV001],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY Full Year]);
						END SCOPE; 

						// 1.22s   BBTOT vs PY

						// 1.22A BBTOT vs PY = ([BBTOT: current period]-[BBTOT: prior period])
						SCOPE ([Measures].[BBTOT vs PY],[Date Comparison].[Date Comparison].[Current Period]); 
						THIS = ([Measure].[Measure].&[PM_BBOT],[Measures].[Value],[Date Comparison].[Date Comparison].[Current Period])-
						([Measure].[Measure].&[PM_BBOT],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Period]);
						END SCOPE; 

						// 1.22B BBTOT vs PY = ([BBTOT: current QTD]-[BBTOT: prior QTD])
						SCOPE ([Measures].[BBTOT vs PY],[Date Comparison].[Date Comparison].[QTD]); 
						THIS = ([Measure].[Measure].&[PM_BBOT],[Measures].[Value],[Date Comparison].[Date Comparison].[QTD])-
						([Measure].[Measure].&[PM_BBOT],[Measures].[Value],[Date Comparison].[Date Comparison].[PY QTD]);
						END SCOPE; 

						// 1.22C BBTOT vs PY = ([BBTOT: current YTD]-[BBTOT: prior YTD])
						SCOPE ([Measures].[BBTOT vs PY],[Date Comparison].[Date Comparison].[YTD]); 
						THIS = ([Measure].[Measure].&[PM_BBOT],[Measures].[Value],[Date Comparison].[Date Comparison].[YTD])-
						([Measure].[Measure].&[PM_BBOT],[Measures].[Value],[Date Comparison].[Date Comparison].[PY YTD]);
						END SCOPE; 

						// 1.22D BBTOT vs PY = ([BBTOT: current MAT]-[BBTOT: prior MAT])
						SCOPE ([Measures].[BBTOT vs PY],[Date Comparison].[Date Comparison].[MAT]); 
						THIS = ([Measure].[Measure].&[PM_BBOT],[Measures].[Value],[Date Comparison].[Date Comparison].[MAT])-
						([Measure].[Measure].&[PM_BBOT],[Measures].[Value],[Date Comparison].[Date Comparison].[PY MAT]);
						END SCOPE; 

						// 1.22E BBTOT vs PY = ([BBTOT: current Full Year]-[BBTOT: prior Full Year])
						SCOPE ([Measures].[BBTOT vs PY],[Date Comparison].[Date Comparison].[Full Year]); 
						THIS = ([Measure].[Measure].&[PM_BBOT],[Measures].[Value],[Date Comparison].[Date Comparison].[Full Year])-
						([Measure].[Measure].&[PM_BBOT],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Full Year]);
						END SCOPE; 

						// 1.23s   BBTOT% vs PY
						// 1.23A BBTOT% vs PY = ([BBTOT%: current period]-[BBTOT%: prior period])
						SCOPE ([Measures].[BBTOT% vs PY],[Date Comparison].[Date Comparison].[Current Period]); 
						THIS = (([Measure].[Measure].&[PGSV_BBTOT],[Measures].[Value],[Date Comparison].[Date Comparison].[Current Period])-
						([Measure].[Measure].&[PGSV_BBTOT],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Period]))/100; 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.23B BBTOT% vs PY = ([BBTOT%: current QTD]-[BBTOT%: prior QTD])
						SCOPE ([Measures].[BBTOT% vs PY],[Date Comparison].[Date Comparison].[QTD]); 
						THIS = (([Measure].[Measure].&[PGSV_BBTOT],[Measures].[Value],[Date Comparison].[Date Comparison].[QTD])-
						([Measure].[Measure].&[PGSV_BBTOT],[Measures].[Value],[Date Comparison].[Date Comparison].[PY QTD]))/100; 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.23C BBTOT% vs PY = ([BBTOT%: current YTD]-[BBTOT%: prior YTD])
						SCOPE ([Measures].[BBTOT% vs PY],[Date Comparison].[Date Comparison].[YTD]); 
						THIS = (([Measure].[Measure].&[PGSV_BBTOT],[Measures].[Value],[Date Comparison].[Date Comparison].[YTD])-
						([Measure].[Measure].&[PGSV_BBTOT],[Measures].[Value],[Date Comparison].[Date Comparison].[PY YTD]))/100; 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.23D BBTOT% vs PY = ([BBTOT%: current MAT]-[BBTOT%: prior MAT])
						SCOPE ([Measures].[BBTOT% vs PY],[Date Comparison].[Date Comparison].[MAT]); 
						THIS = (([Measure].[Measure].&[PGSV_BBTOT],[Measures].[Value],[Date Comparison].[Date Comparison].[MAT])-
						([Measure].[Measure].&[PGSV_BBTOT],[Measures].[Value],[Date Comparison].[Date Comparison].[PY MAT]))/100; 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.23E BBTOT% vs PY = ([BBTOT%: current Full Year]-[BBTOT%: prior Full Year])
						SCOPE ([Measures].[BBTOT% vs PY],[Date Comparison].[Date Comparison].[Full Year]); 
						THIS = (([Measure].[Measure].&[PGSV_BBTOT],[Measures].[Value],[Date Comparison].[Date Comparison].[Full Year])-
						([Measure].[Measure].&[PGSV_BBTOT],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Full Year]))/100; 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.24s   GSV vs PY
						// 1.24A GSV vs PY = ([GSV: current period]-[GSV: prior period])
						SCOPE ([Measures].[GSV vs PY],[Date Comparison].[Date Comparison].[Current Period]); 
						THIS = ([Measure].[Measure].&[M1_GSV001],[Measures].[Value],[Date Comparison].[Date Comparison].[Current Period])-
						([Measure].[Measure].&[M1_GSV001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Period]);
						END SCOPE; 

						// 1.24B GSV vs PY = ([GSV: current QTD]-[GSV: prior QTD])
						SCOPE ([Measures].[GSV vs PY],[Date Comparison].[Date Comparison].[QTD]); 
						THIS = ([Measure].[Measure].&[M1_GSV001],[Measures].[Value],[Date Comparison].[Date Comparison].[QTD])-
						([Measure].[Measure].&[M1_GSV001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY QTD]); 
						END SCOPE; 

						// 1.24C GSV vs PY = ([GSV: current YTD]-[GSV: prior YTD])
						SCOPE ([Measures].[GSV vs PY],[Date Comparison].[Date Comparison].[YTD]); 
						THIS = ([Measure].[Measure].&[M1_GSV001],[Measures].[Value],[Date Comparison].[Date Comparison].[YTD])-
						([Measure].[Measure].&[M1_GSV001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY YTD]); 
						END SCOPE; 

						// 1.24D GSV vs PY = ([GSV: current MAT]-[GSV: prior MAT])
						SCOPE ([Measures].[GSV vs PY],[Date Comparison].[Date Comparison].[MAT]); 
						THIS = ([Measure].[Measure].&[M1_GSV001],[Measures].[Value],[Date Comparison].[Date Comparison].[MAT])-
						([Measure].[Measure].&[M1_GSV001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY MAT]); 
						END SCOPE; 

						// 1.24E GSV vs PY = ([GSV: current Full Year]-[GSV: prior Full Year])
						SCOPE ([Measures].[GSV vs PY],[Date Comparison].[Date Comparison].[Full Year]); 
						THIS = ([Measure].[Measure].&[M1_GSV001],[Measures].[Value],[Date Comparison].[Date Comparison].[Full Year])-
						([Measure].[Measure].&[M1_GSV001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Full Year]); 
						END SCOPE; 

						// 1.25s   RSV vs PY
						// 1.25A RSV vs PY = ([RSV: current period]-[RSV: prior period])
						SCOPE ([Measures].[RSV vs PY],[Date Comparison].[Date Comparison].[Current Period]); 
						THIS = ([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[Current Period])-
						([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Period]); 
						END SCOPE; 

						// 1.25B RSV vs PY = ([RSV: current QTD]-[RSV: prior QTD])
						SCOPE ([Measures].[RSV vs PY],[Date Comparison].[Date Comparison].[QTD]); 
						THIS = ([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[QTD])-
						([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[PY QTD]); 
						END SCOPE; 

						// 1.25C RSV vs PY = ([RSV: current YTD]-[RSV: prior YTD])
						SCOPE ([Measures].[RSV vs PY],[Date Comparison].[Date Comparison].[YTD]); 
						THIS = ([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[YTD])-
						([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[PY YTD]); 
						END SCOPE; 

						// 1.25D RSV vs PY = ([RSV: current MAT]-[RSV: prior MAT])
						SCOPE ([Measures].[RSV vs PY],[Date Comparison].[Date Comparison].[MAT]); 
						THIS = ([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[MAT])-
						([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[PY MAT]); 
						END SCOPE; 

						// 1.25E RSV vs PY = ([RSV: current Full Year]-[RSV: prior Full Year])
						SCOPE ([Measures].[RSV vs PY],[Date Comparison].[Date Comparison].[Full Year]); 
						THIS = ([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[Full Year])-
						([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Full Year]); 
						END SCOPE; 

						// 1.26 RSV Growth %
						// 1.26A RSV Growth % = ([RSV: current period]-[RSV: prior period])/[RSV: prior period]
						SCOPE ([Measures].[RSV Growth %],[Date Comparison].[Date Comparison].[Current Period]); 
						THIS = (IIF (([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])
						-([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))
						/([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro])))
						); 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.26B RSV Growth % = ([RSV: current QTD]-[RSV: prior QTD])/[RSV: prior QTD]
						SCOPE ([Measures].[RSV Growth %],[Date Comparison].[Date Comparison].[QTD]); 
						THIS = (IIF (([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[PY QTD],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[PY QTD],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[QTD],[Currency Scaling].[Currency Scaling].[Euro])
						-([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[PY QTD],[Currency Scaling].[Currency Scaling].[Euro]))
						/([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[PY QTD],[Currency Scaling].[Currency Scaling].[Euro])))
						); 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.26C RSV Growth % = ([RSV: current YTD]-[RSV: prior YTD])/[RSV: prior YTD]
						SCOPE ([Measures].[RSV Growth %],[Date Comparison].[Date Comparison].[YTD]); 
						THIS = (IIF (([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[PY YTD],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[PY YTD],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[YTD],[Currency Scaling].[Currency Scaling].[Euro])
						-([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[PY YTD],[Currency Scaling].[Currency Scaling].[Euro]))
						/([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[PY YTD],[Currency Scaling].[Currency Scaling].[Euro])))
						); 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.26D RSV Growth % = ([RSV: current MAT]-[RSV: prior MAT])/[RSV: prior MAT]
						SCOPE ([Measures].[RSV Growth %],[Date Comparison].[Date Comparison].[MAT]); 
						THIS = (IIF (([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[PY MAT],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[PY MAT],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[MAT],[Currency Scaling].[Currency Scaling].[Euro])
						-([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[PY MAT],[Currency Scaling].[Currency Scaling].[Euro]))
						/([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[PY MAT],[Currency Scaling].[Currency Scaling].[Euro])))
						); 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.26E RSV Growth % = ([RSV: current Full Year]-[RSV: prior Full Year])/[RSV: prior Full Year]
						SCOPE ([Measures].[RSV Growth %],[Date Comparison].[Date Comparison].[Full Year]); 
						THIS = (IIF (([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Full Year],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Full Year],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[Full Year],[Currency Scaling].[Currency Scaling].[Euro])
						-([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Full Year],[Currency Scaling].[Currency Scaling].[Euro]))
						/([Measure].[Measure].&[S1_VAL002],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Full Year],[Currency Scaling].[Currency Scaling].[Euro])))
						); 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.27 Gross Profit Growth %

						// 1.27A Gross Profit Growth % = ([Gross Profit: current period]-[Gross Profit: prior period])/[Gross Profit: prior period]
						SCOPE ([Measures].[Gross Profit Growth %],[Date Comparison].[Date Comparison].[Current Period]); 
						THIS = (IIF (([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro])
						-([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))
						/([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro])))
						); 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.27B Gross Profit Growth % = ([Gross Profit: current QTD]-[Gross Profit: prior QTD])/[Gross Profit: prior QTD]
						SCOPE ([Measures].[Gross Profit Growth %],[Date Comparison].[Date Comparison].[QTD]); 
						THIS = (IIF (([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY QTD],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY QTD],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[QTD],[Currency Scaling].[Currency Scaling].[Euro])
						-([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY QTD],[Currency Scaling].[Currency Scaling].[Euro]))
						/([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY QTD],[Currency Scaling].[Currency Scaling].[Euro])))
						); 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.27C Gross Profit Growth % = ([Gross Profit: current YTD]-[Gross Profit: prior YTD])/[Gross Profit: prior YTD]
						SCOPE ([Measures].[Gross Profit Growth %],[Date Comparison].[Date Comparison].[YTD]); 
						THIS = (IIF (([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY YTD],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY YTD],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[YTD],[Currency Scaling].[Currency Scaling].[Euro])
						-([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY YTD],[Currency Scaling].[Currency Scaling].[Euro]))
						/([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY YTD],[Currency Scaling].[Currency Scaling].[Euro])))
						); 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.27D Gross Profit Growth % = ([Gross Profit: current MAT]-[Gross Profit: prior MAT])/[Gross Profit: prior MAT]
						SCOPE ([Measures].[Gross Profit Growth %],[Date Comparison].[Date Comparison].[MAT]); 
						THIS = (IIF (([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY MAT],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY MAT],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[MAT],[Currency Scaling].[Currency Scaling].[Euro])
						-([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY MAT],[Currency Scaling].[Currency Scaling].[Euro]))
						/([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY MAT],[Currency Scaling].[Currency Scaling].[Euro])))
						); 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.27E Gross Profit Growth % = ([Gross Profit: current Full Year]-[Gross Profit: prior Full Year])/[Gross Profit: prior Full Year]
						SCOPE ([Measures].[Gross Profit Growth %],[Date Comparison].[Date Comparison].[Full Year]); 
						THIS = (IIF (([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Full Year],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Full Year],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[Full Year],[Currency Scaling].[Currency Scaling].[Euro])
						-([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Full Year],[Currency Scaling].[Currency Scaling].[Euro]))
						/([Measure].[Measure].&[T3_GP0001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Full Year],[Currency Scaling].[Currency Scaling].[Euro])))
						); 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.28s   TTS% vs PY

						// 1.28A TTS% vs PY = ([TTS%: current period]-[TTS%: prior period])
						SCOPE ([Measures].[TTS% vs PY],[Date Comparison].[Date Comparison].[Current Period]); 
						THIS = (([Measure].[Measure].&[M1_TTGSV],[Measures].[Value],[Date Comparison].[Date Comparison].[Current Period])-
						([Measure].[Measure].&[M1_TTGSV],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Period]))/100; 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.28B TTS% vs PY = ([TTS%: current QTD]-[TTS%: prior QTD])
						SCOPE ([Measures].[TTS% vs PY],[Date Comparison].[Date Comparison].[QTD]); 
						THIS = (([Measure].[Measure].&[M1_TTGSV],[Measures].[Value],[Date Comparison].[Date Comparison].[QTD])-
						([Measure].[Measure].&[M1_TTGSV],[Measures].[Value],[Date Comparison].[Date Comparison].[PY QTD]))/100; 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.28C TTS% vs PY = ([TTS%: current YTD]-[TTS%: prior YTD])
						SCOPE ([Measures].[TTS% vs PY],[Date Comparison].[Date Comparison].[YTD]); 
						THIS = (([Measure].[Measure].&[M1_TTGSV],[Measures].[Value],[Date Comparison].[Date Comparison].[YTD])-
						([Measure].[Measure].&[M1_TTGSV],[Measures].[Value],[Date Comparison].[Date Comparison].[PY YTD]))/100; 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.28D TTS% vs PY = ([TTS%: current MAT]-[TTS%: prior MAT])
						SCOPE ([Measures].[TTS% vs PY],[Date Comparison].[Date Comparison].[MAT]); 
						THIS = (([Measure].[Measure].&[M1_TTGSV],[Measures].[Value],[Date Comparison].[Date Comparison].[MAT])-
						([Measure].[Measure].&[M1_TTGSV],[Measures].[Value],[Date Comparison].[Date Comparison].[PY MAT]))/100; 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.28E TTS% vs PY = ([TTS%: current Full Year]-[TTS%: prior Full Year])
						SCOPE ([Measures].[TTS% vs PY],[Date Comparison].[Date Comparison].[Full Year]); 
						THIS = (([Measure].[Measure].&[M1_TTGSV],[Measures].[Value],[Date Comparison].[Date Comparison].[Full Year])-
						([Measure].[Measure].&[M1_TTGSV],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Full Year]))/100; 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.29 Customer Contribution in % TO
						SCOPE ([Measures].[Customer Contribution % TO]); 
						THIS = ([Measure].[Measure].&[PTO_CC],[Measures].[Value])/100; 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.30 Core Operating Profit in % TO
						SCOPE ([Measures].[Core Operating Profit % TO]); 
						THIS = ([Measure].[Measure].&[PTO_COP],[Measures].[Value])/100; 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.31 BMI Trade in % TO
						SCOPE ([Measures].[BMI Trade % TO]); 
						THIS = ([Measure].[Measure].&[PTO_BMI_TR],[Measures].[Value])/100; 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.32 Overhead Trade in % TO
						SCOPE ([Measures].[Overhead Trade % TO]); 
						THIS = ([Measure].[Measure].&[PTO_OVH_TR],[Measures].[Value])/100; 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.33   RSV
						SCOPE ([Measures].[RSV]); 
						THIS = ([Measure].[Measure].&[S1_VAL001],[Measures].[Value]); 
						END SCOPE; 

						// 1.34   RSV - Untaxed
						SCOPE ([Measures].[RSV - Untaxed]); 
						THIS = ([Measure].[Measure].&[S1_VAL002],[Measures].[Value]); 
						END SCOPE; 

						// 1.35   Promo Pressure
						SCOPE ([Measures].[Promo Pressure]); 
						THIS = ([Measure].[Measure].&[S1_PRPR_NET],[Measures].[Value]); 
						END SCOPE; 

						// 1.36   Promo Pressure - Untaxed
						SCOPE ([Measures].[Promo Pressure - Untaxed]); 
						THIS = ([Measure].[Measure].&[S1_PRPR_NET2],[Measures].[Value]); 
						END SCOPE; 

						// 1.36A   Promo Pressure Percentage
						SCOPE ([Measures].[Promo Pressure %]); 
						THIS = ([Measure].[Measure].&[SRSV_PRPR],[Measures].[Value]); 
						END SCOPE; 

						// 1.37s   PY RSV

						// 1.37A PY RSV = ([RSV: prior period])
						SCOPE ([Measures].[PY RSV],[Date Comparison].[Date Comparison].[Current Period]); 
						THIS =
						([Measure].[Measure].&[S1_VAL002],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY Period]); 
						END SCOPE; 

						// 1.37B PY RSV = ([RSV: prior QTD])
						SCOPE ([Measures].[PY RSV],[Date Comparison].[Date Comparison].[QTD]); 
						THIS =
						([Measure].[Measure].&[S1_VAL002],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY QTD]); 
						END SCOPE; 

						// 1.37C PY RSV = ([RSV: prior YTD])
						SCOPE ([Measures].[PY RSV],[Date Comparison].[Date Comparison].[YTD]); 
						THIS =
						([Measure].[Measure].&[S1_VAL002],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY YTD]); 
						END SCOPE; 

						// 1.37D PY RSV = ([RSV: prior MAT])
						SCOPE ([Measures].[PY RSV],[Date Comparison].[Date Comparison].[MAT]); 
						THIS =
						([Measure].[Measure].&[S1_VAL002],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY MAT]); 
						END SCOPE; 

						// 1.37E PY RSV = ([RSV: prior Full Year])
						SCOPE ([Measures].[PY RSV],[Date Comparison].[Date Comparison].[Full Year]); 
						THIS =
						([Measure].[Measure].&[S1_VAL002],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY Full Year]); 
						END SCOPE; 

						// 1.38s   PY Sales Volume - CU

						// 1.38A PY Sales Volume - CU = ([Sales Volume - CU: prior period])
						SCOPE ([Measures].[PY Sales Volume - CU],[Date Comparison].[Date Comparison].[Current Period]); 
						THIS =
						([Measure].[Measure].&[M1_UNI00RK],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY Period]); 
						END SCOPE; 

						// 1.38B PY Sales Volume - CU = ([Sales Volume - CU: prior QTD])
						SCOPE ([Measures].[PY Sales Volume - CU],[Date Comparison].[Date Comparison].[QTD]); 
						THIS =
						([Measure].[Measure].&[M1_UNI00RK],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY QTD]); 
    					END SCOPE; 

						// 1.38C PY Sales Volume - CU = ([Sales Volume - CU: prior YTD])
						SCOPE ([Measures].[PY Sales Volume - CU],[Date Comparison].[Date Comparison].[YTD]); 
						THIS =
						([Measure].[Measure].&[M1_UNI00RK],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY YTD]); 
						END SCOPE; 

						// 1.38D PY Sales Volume - CU = ([Sales Volume - CU: prior MAT])
						SCOPE ([Measures].[PY Sales Volume - CU],[Date Comparison].[Date Comparison].[MAT]); 
						THIS =
						([Measure].[Measure].&[M1_UNI00RK],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY MAT]); 
						END SCOPE; 

						// 1.38E PY Sales Volume - CU = ([Sales Volume - CU: prior Full Year])
						SCOPE ([Measures].[PY Sales Volume - CU],[Date Comparison].[Date Comparison].[Full Year]); 
						THIS =
						([Measure].[Measure].&[M1_UNI00RK],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY Full Year]); 
						END SCOPE; 

						// 1.38F PY Sales Volume - Tons = ([Sales Volume - Tons: prior period])
						SCOPE ([Measures].[PY Sales Volume - Tons],[Date Comparison].[Date Comparison].[Current Period]); 
						THIS =
						([Measure].[Measure].&[M1_LTK001],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY Period]); 
						END SCOPE; 

						// 1.38B PY Sales Volume - Tons = ([Sales Volume - Tons: prior QTD])
						SCOPE ([Measures].[PY Sales Volume - Tons],[Date Comparison].[Date Comparison].[QTD]); 
						THIS =
						([Measure].[Measure].&[M1_LTK001],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY QTD]); 
						END SCOPE; 

						// 1.38C PY Sales Volume - Tons = ([Sales Volume - Tons: prior YTD])
						SCOPE ([Measures].[PY Sales Volume - Tons],[Date Comparison].[Date Comparison].[YTD]); 
						THIS =
						([Measure].[Measure].&[M1_LTK001],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY YTD]); 
						END SCOPE; 

						// 1.38D PY Sales Volume - Tons = ([Sales Volume - Tons: prior MAT])
						SCOPE ([Measures].[PY Sales Volume - Tons],[Date Comparison].[Date Comparison].[MAT]); 
						THIS =
						([Measure].[Measure].&[M1_LTK001],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY MAT]); 
						END SCOPE; 

						// 1.38E PY Sales Volume - Tons = ([Sales Volume - Tons: prior Full Year])
						SCOPE ([Measures].[PY Sales Volume - Tons],[Date Comparison].[Date Comparison].[Full Year]); 
						THIS =
						([Measure].[Measure].&[M1_LTK001],[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY Full Year]); 
						END SCOPE; 

						// 1.38   CPP
						SCOPE ([Measures].[CPP]); 
						THIS = ([Measure].[Measure].&[M1_BP0001],[Measures].[Value]); 
						END SCOPE; 

						// 1.39 CPP in % TO = ( [CPP] / [Turnover] )
						SCOPE ([Measures].[CPP % TO]); 
						THIS = (IIF (([Measure].[Measure].&[M1_TTO001],[Measures].[Value],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Measures].[Value],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[M1_BP0001],[Measures].[Value],[Currency Scaling].[Currency Scaling].[Euro])
						/([Measure].[Measure].&[M1_TTO001],[Measures].[Value],[Currency Scaling].[Currency Scaling].[Euro]))))
						); 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.39 CPP in % GSV = ( [CPP] / [GSV] )
						SCOPE ([Measures].[CPP % GSV]); 
						THIS = (IIF (([Measure].[Measure].&[M1_GSV001],[Measures].[Value],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[M1_GSV001],[Measures].[Value],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[M1_BP0001],[Measures].[Value],[Currency Scaling].[Currency Scaling].[Euro])
						/([Measure].[Measure].&[M1_GSV001],[Measures].[Value],[Currency Scaling].[Currency Scaling].[Euro]))))
						); 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.40 BMI
						SCOPE ([Measures].[BMI]); 
						THIS = ([Measure].[Measure].&[M4_MDC001],[Measures].[Value]); 
						END SCOPE; 

						// 1.41 Overheads
						SCOPE ([Measures].[Overheads]); 
						THIS = ([Measure].[Measure].&[M4_INDR0C],[Measures].[Value]); 
						END SCOPE; 

						// 1.42 BMI in % TO
						SCOPE ([Measures].[BMI % TO]); 
						THIS = ([Measure].[Measure].&[PTO_BMI],[Measures].[Value])/100; 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.43 Overheads in % TO
						SCOPE ([Measures].[Overheads % TO]); 
						THIS = ([Measure].[Measure].&[PTO_OVH],[Measures].[Value])/100; 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.44 BMI vs PY = ([BMI: current period]-[BMI: prior period])
						SCOPE ([Measures].[BMI vs PY]); 
						THIS = ROUND(([Measure].[Measure].&[M4_MDC001],[Measures].[Value])-([Measure].[Measure].&[M4_MDC001],[Measures].[Value],[Period].[Period].[PY]),4);
						END SCOPE;  

                        // 1.40 a ROI
						SCOPE ([Measures].[ROI],EXCEPT([Date Comparison].[Date Comparison].MEMBERS,{[Date Comparison].[Date Comparison].[Growth %],[Date Comparison].[Date Comparison].[YTD Growth %]})); 
						THIS = IIF (([Measures].[BMI vs PY] = 0
						OR ISEMPTY([Measures].[BMI vs PY]))
							,NULL
						,([Measures].[Turnover vs PY]/[Measures].[BMI vs PY])); 
                        FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

                        // 1.40 b ROI Growth %
						SCOPE ([Measures].[ROI],[Date Comparison].[Date Comparison].[Growth %]); 
						THIS = IIF ((([Measures].[ROI],[Date Comparison].[Date Comparison].[PY Period]) = 0
						OR ISEMPTY(([Measures].[ROI],[Date Comparison].[Date Comparison].[PY Period])))
							,NULL
						,(([Measures].[ROI],[Date Comparison].[Date Comparison].[Current Period])/([Measures].[ROI],[Date Comparison].[Date Comparison].[PY Period])-1)); 
                        FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

                        // 1.40 c ROI YTD Growth %
						SCOPE ([Measures].[ROI],[Date Comparison].[Date Comparison].[YTD Growth %]); 
						THIS = IIF ((([Measures].[ROI],[Date Comparison].[Date Comparison].[PY YTD]) = 0
						OR ISEMPTY(([Measures].[ROI],[Date Comparison].[Date Comparison].[PY YTD])))
							,NULL
						,(([Measures].[ROI],[Date Comparison].[Date Comparison].[YTD])/([Measures].[ROI],[Date Comparison].[Date Comparison].[PY YTD])-1)); 
                        FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

                        // 1.67 Overheads TO
                        SCOPE ([Measures].[Overheads TO]); 
                        THIS = ([Measure].[Measure].&[PTO_OVH],[Measures].[Value]); 
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                        END SCOPE;

                        // 1.41

						//These should only work against Value and Volume measures
						SCOPE([Measure].[Measure].[Measure].MEMBERS,[Measures].[Value]
						,{[Date Comparison].[Date Comparison].[Growth %]
						,[Date Comparison].[Date Comparison].[YTD Growth %]}); 
						THIS = IIF(
						[Measure].[Measure].CURRENTMEMBER.Properties( "Measure Type" ) = "Ratio"
						,NULL
						,[Measures].[Value]
						); 
    					END SCOPE; 

						// s1.11 Change [vs PY] = (CY-PY)
						SCOPE([Date Comparison].[Date Comparison].[Change vs PY]); 
						THIS = (IIF (([Date Comparison].[Date Comparison].[Current Period])-([Date Comparison].[Date Comparison].[PY Period]) = 0
						,NULL
						,([Date Comparison].[Date Comparison].[Current Period])-([Date Comparison].[Date Comparison].[PY Period]))
						); 
						END SCOPE; 

						//Added by Sukrut on request by Karlo 20160525
						//Change suggested by Karlo to make Change vs PY applicable to all measures except the following
						SCOPE({[Measure].[Measure].&[YOY_GM],[Measure].[Measure].&[YOY_BBTOT],[Measure].[Measure].&[YOY_GSV]},[Measures].[Value]
						,[Date Comparison].[Date Comparison].[Change vs PY]); 
						THIS = NULL; 
						END SCOPE; 

						SCOPE([Measure].[Measure].[Measure].MEMBERS,[Measures].[Value]); 
						FORMAT_STRING(THIS) = "#,##0.0"; 
						END SCOPE; 

						//p.m. Business Building - CPP (Vol/Val) = (Business Building - CPP)  -  (p.m. Business Building - CPP (PromoPressure))
						SCOPE([Measure].[Measure].&[M1_BP0001_VV]); 
						THIS = [Measure].[Measure].&[M1_BP0001] - [Measure].[Measure].&[M1_BP0001_PRPR]; 
						END SCOPE; 

						//Gross Profit - Vol/Mix Variance
						SCOPE([Measure].[Measure].&[VA_GPVO0R]); 
						THIS = [Measure].[Measure].&[VA_GPVO0R_PC]; 
						END SCOPE; 

						//Gross Profit - Vol/Mix Variance - for Total Customers
						SCOPE([Measure].[Measure].&[VA_GPVO0R]
						,[Customer].[Customer Hierarchy].[Total Customer].MEMBERS); 
						THIS = [Measure].[Measure].&[VA_GPVO0R_TC]; 
						END SCOPE; 

						//Gross Profit - Cost Variance
						SCOPE([Measure].[Measure].&[VA_GPCO0R]); 
						THIS = [Measure].[Measure].&[VA_GPCO0R_PC]; 
						END SCOPE; 

						//Gross Profit - Cost Variance - for Total Customers
						SCOPE([Measure].[Measure].&[VA_GPCO0R]
						,[Customer].[Customer Hierarchy].[Total Customer].MEMBERS); 
						THIS = [Measure].[Measure].&[VA_GPCO0R_TC]; 
						END SCOPE; 

						//Turnover - Price Variance (PC)
						SCOPE([Measure].[Measure].&[VA_TOPR0R_PC]); 
						THIS = [Measure].[Measure].&[M1_TTO001] - [Measure].[Measure].&[M1_DFTT01_PC]; 
						END SCOPE; 

						//Turnover - Price Variance (TC)
						SCOPE([Measure].[Measure].&[VA_TOPR0R_TC]); 
						THIS = [Measure].[Measure].&[M1_TTO001] - [Measure].[Measure].&[M1_DFTT01_TC]; 
						END SCOPE; 

						//Turnover - Price Variance
						SCOPE([Measure].[Measure].&[VA_TOPR0R]); 
						THIS = [Measure].[Measure].&[VA_TOPR0R_PC]; 
						END SCOPE; 

						//Turnover - Price Variance - for Total Customers
						SCOPE([Measure].[Measure].&[VA_TOPR0R],[Customer].[Customer Hierarchy].[Total Customer].MEMBERS); 
						THIS = [Measure].[Measure].&[VA_TOPR0R_TC]; 
						END SCOPE; 

						// 1.68   PY Value
						SCOPE([Measures].[PY Value],{[Date Comparison].[Date Comparison].[PY Period],[Date Comparison].[Date Comparison].[PY YTD],
						[Date Comparison].[Date Comparison].[PY MAT],[Date Comparison].[Date Comparison].[PY QTD],
						[Date Comparison].[Date Comparison].[PY Full Year],[Date Comparison].[Date Comparison].[Change vs PY],
						[Date Comparison].[Date Comparison].[Growth %],[Date Comparison].[Date Comparison].[YTD Growth %]}); 
						THIS = NULL; 
						END SCOPE; 

						SCOPE([Measures].[PY Value],[Date Comparison].[Date Comparison].[Current Period]); 
						THIS = ([Measures].[Value],[Date Comparison].[Date Comparison].[PY Period]); 
						END SCOPE; 

						SCOPE([Measures].[PY Value],[Date Comparison].[Date Comparison].[YTD]); 
						THIS = ([Measures].[Value],[Date Comparison].[Date Comparison].[PY YTD]); 
						END SCOPE; 

						SCOPE([Measures].[PY Value],[Date Comparison].[Date Comparison].[MAT]); 
						THIS = ([Measures].[Value],[Date Comparison].[Date Comparison].[PY MAT]); 
						END SCOPE; 

						SCOPE([Measures].[PY Value],[Date Comparison].[Date Comparison].[QTD]); 
						THIS = ([Measures].[Value],[Date Comparison].[Date Comparison].[PY QTD]); 
						END SCOPE; 

						SCOPE([Measures].[PY Value],[Date Comparison].[Date Comparison].[Full Year]); 
						THIS = ([Measures].[Value],[Date Comparison].[Date Comparison].[PY Full Year]); 
						END SCOPE; 

						// 1.69   PBO  - Profit Before Overhead
						SCOPE([Measures].[PBO]); 
						THIS = ([Measures].[Value],[Measure].[Measure].&[T4_PBO001]); 
						END SCOPE; 

						// 1.70   Business Building % TO
						SCOPE([Measures].[Business Building % TO]); 
						THIS = IIF(([Measures].[Value],[Measure].[Measure].&[M1_TTO001]) = 0
						OR ISEMPTY(([Measures].[Value],[Measure].[Measure].&[M1_TTO001]))
						,NULL
						,([Measures].[Value],[Measure].[Measure].&[M1_BBT001]) / ([Measures].[Value],[Measure].[Measure].&[M1_TTO001])
						); 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						// 1.71   Efficient Operations % TO
						SCOPE([Measures].[Efficient Operations % TO]); 
						THIS = IIF(([Measures].[Value],[Measure].[Measure].&[M1_TTO001]) = 0
						OR ISEMPTY(([Measures].[Value],[Measure].[Measure].&[M1_TTO001]))
						,NULL
						,([Measures].[Value],[Measure].[Measure].&[M1_EOT001]) / ([Measures].[Value],[Measure].[Measure].&[M1_TTO001])
						); 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

                        //1.72a GM vs PFC (bps)
                        SCOPE([Measure].[Measure].&[M1_GM_VS_PFC_BPS]);
                        THIS = ROUND(([Measure].[Measure].&[M1_GM], [Period].[Period].[vs PFC]) * 10000,4); 
                        FORMAT_STRING(THIS) = "#,##0";
                        END SCOPE;

                        //1.72b GM vs PY (bps)
                        SCOPE([Measure].[Measure].&[M1_GM_VS_PY_BPS]);
                        THIS = ROUND(([Measure].[Measure].&[M1_GM], [Period].[Period].[vs PY]) * 10000,4); 
                        FORMAT_STRING(THIS) = "#,##0";
                        END SCOPE;

                        //1.72c Gross Profit vs PY
                        SCOPE([Measure].[Measure].&[M3_GP_VS_PY]);
                        THIS = ROUND(([Measure].[Measure].&[T3_GP0001], [Period].[Period].[vs PY]),4);
                        FORMAT_STRING(THIS) = "#,##0.0";
                        END SCOPE;

                        //1.72 d Gross Profit vs PFC
                        SCOPE([Measure].[Measure].&[M3_GP_VS_PFC]);
                        THIS = ROUND(([Measure].[Measure].&[T3_GP0001], [Period].[Period].[vs PFC]),4);
                        FORMAT_STRING(THIS) = "#,##0.0";
                        END SCOPE;
						--------------------------------------------------------------------------------------------------------------------------------------------------------

						-------------------------------------------------------------------------------- NRM Measures---------------------------------------------------------

						--1.1
						CREATE MEMBER CURRENTCUBE.[Measures].[NRM Price]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 

						--1.2
						CREATE MEMBER CURRENTCUBE.[Measures].[NRM List Price]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 

						--1.31
						CREATE MEMBER CURRENTCUBE.[Measures].[NRM List Price Local]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 

						--1.32
						CREATE MEMBER CURRENTCUBE.[Measures].[NRM List Price ED]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 

						--1.33
						CREATE MEMBER CURRENTCUBE.[Measures].[NRM List Price OD]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 

						--1.3
						CREATE MEMBER CURRENTCUBE.[Measures].[NRM Promo Terms]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 

						--1.4
						CREATE MEMBER CURRENTCUBE.[Measures].[NRM Oth Terms]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 

						--1.5
						CREATE MEMBER CURRENTCUBE.[Measures].[NRM Inno Pack]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 

						--1.6
						CREATE MEMBER CURRENTCUBE.[Measures].[NRM Inno Prod]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 

						--1.7
						CREATE MEMBER CURRENTCUBE.[Measures].[NRM Vol/Mix exceptions]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 

						--1.8
						CREATE MEMBER CURRENTCUBE.[Measures].[NRM Turnover PY]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 

						--1.9
						CREATE MEMBER CURRENTCUBE.[Measures].[NRM Turnover CY]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 

						--1.10
						CREATE MEMBER CURRENTCUBE.[Measures].[NRM Vol/Mix regular]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 

						--1.11
						CREATE MEMBER CURRENTCUBE.[Measures].[NRM Vol/Mix]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 

						--1.12
						CREATE MEMBER CURRENTCUBE.[Measures].[NRM Mix]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 

						--1.13
						CREATE MEMBER CURRENTCUBE.[Measures].[NRM Total Variance]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 

						--1.14
						CREATE MEMBER CURRENTCUBE.[Measures].[NRM Volume CY]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 

						--1.15
						CREATE MEMBER CURRENTCUBE.[Measures].[NRM Volume PY]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 

						--1.16
						CREATE MEMBER CURRENTCUBE.[Measures].[BB Pack]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						--1.17
						CREATE MEMBER CURRENTCUBE.[Measures].[GMI Market Volume CY]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 

						--1.18
						CREATE MEMBER CURRENTCUBE.[Measures].[GMI Market Value CY]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 

						--1.19
						CREATE MEMBER CURRENTCUBE.[Measures].[GMI Market Volume PY]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 

						--1.20
						CREATE MEMBER CURRENTCUBE.[Measures].[GMI Market Value PY]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 

						--1.21
						CREATE MEMBER CURRENTCUBE.[Measures].[GMI Value MS CY]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 
						
						--1.21 a
						CREATE MEMBER CURRENTCUBE.[Measures].[GMI Value MS CY (bps)]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1;

						--1.22
						CREATE MEMBER CURRENTCUBE.[Measures].[GMI Volume MS CY]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 

						--1.22 a
						CREATE MEMBER CURRENTCUBE.[Measures].[GMI Volume MS CY (bps)]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1;
						
						--1.23
						CREATE MEMBER CURRENTCUBE.[Measures].[GMI Value MS PY]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 
						
						--1.23 a
						CREATE MEMBER CURRENTCUBE.[Measures].[GMI Value MS PY (bps)]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1;

						--1.24
						CREATE MEMBER CURRENTCUBE.[Measures].[GMI Volume MS PY]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1;

						--1.24 a
						CREATE MEMBER CURRENTCUBE.[Measures].[GMI Volume MS PY (bps)]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1;

						--1.25
						CREATE MEMBER CURRENTCUBE.[Measures].[Sales Volume - CSMPT]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 

						--1.26
						CREATE MEMBER CURRENTCUBE.[Measures].[PY Sales Volume - CSMPT]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 

						--1.28
						CREATE MEMBER CURRENTCUBE.[Measures].[p.m. NRM Oth General Terms]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 

						--1.27
						CREATE MEMBER CURRENTCUBE.[Measures].[p.m. NRM Ref Price Variance]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 

						--1.28
						CREATE MEMBER CURRENTCUBE.[Measures].[Net Cost vs Net Price]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 

						--1.29
						CREATE MEMBER CURRENTCUBE.[Measures].[Is PPR]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 

						--1.30
						CREATE MEMBER CURRENTCUBE.[Measures].[GMI RSV Growth]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 
						
						--1.31
						CREATE MEMBER CURRENTCUBE.[Measures].[GMI Value MS vs PY (bps)]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 
						
						--1.32
						CREATE MEMBER CURRENTCUBE.[Measures].[GMI Volume MS vs PY (bps)]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 
                                                                                                
						--1.33
						CREATE MEMBER CURRENTCUBE.[Measures].[GMI Value Growth vs PY]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1; 
						
						--1.34
						CREATE MEMBER CURRENTCUBE.[Measures].[GMI Volume Growth vs PY]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1;

						
						-- Actual
						SCOPE (EXCEPT(FILTER([Measure].[Measure].MEMBERS,[Measure].[Measure].CURRENTMEMBER.Properties( "Measure Category" ) = "NRM"),
						{[Measure].[Measure].&[GMI_VOLUME],
						[Measure].[Measure].&[GMI_VALUE],
						[Measure].[Measure].&[NRM_MIX],
						[Measure].[Measure].&[NRM_VCSMPT],
						[Measure].[Measure].&[NRM_VCSMPT_PY]}),
						[Volume Ratio].[Volume Ratio].&[1]); 
						THIS = ROUND(([Measures].[NRM Value]),4); 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

						--GMI Only
						SCOPE ([Measure].[Measure].&[GMI_VOLUME]); 
						THIS = ([Measures].[GMI]); 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[GMI_VALUE]); 
						THIS = ([Measures].[GMI]); 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

						SCOPE ([Measures].[GMI Market Volume CY]); 
						THIS = ([Measure].[Measure].&[GMI_VOLUME],[Measures].[GMI]); 
						END SCOPE; 
       
						// 1.20   GMI Market Volume PY
						
						// 1.20AA GMI Market Volume PY - All
						SCOPE ([Measures].[GMI Market Volume PY]); 
						THIS = ([Measures].[GMI Market Volume CY],[Period].[Period].[PY]); 
						END SCOPE; 

						// 1.20A GMI Market Volume PY = ([GMI Market Volume: prior period])
						SCOPE ([Measures].[GMI Market Volume PY],[Date Comparison].[Date Comparison].[Current Period]); 
						THIS = ([Measures].[GMI Market Volume CY],
						[Date Comparison].[Date Comparison].[PY Period]); 
						END SCOPE; 

						// 1.20 GMI Market Volume PY = ([GMI Market Volume: prior QTD])
						SCOPE ([Measures].[GMI Market Volume PY],[Date Comparison].[Date Comparison].[QTD]); 
						THIS = ([Measures].[GMI Market Volume CY],
						[Date Comparison].[Date Comparison].[PY QTD]); 
						END SCOPE; 

						// 1.20C GMI Market Volume PY = ([GMI Market Volume: prior YTD])
						SCOPE ([Measures].[GMI Market Volume PY],[Date Comparison].[Date Comparison].[YTD]); 
						THIS = ([Measures].[GMI Market Volume CY],
						[Date Comparison].[Date Comparison].[PY YTD]); 
						END SCOPE; 

						// 1.20D GMI Market Volume PY = ([GMI Market Volume: prior MAT])
						SCOPE ([Measures].[GMI Market Volume PY],[Date Comparison].[Date Comparison].[MAT]); 
						THIS = ([Measures].[GMI Market Volume CY],
						[Date Comparison].[Date Comparison].[PY MAT]);
						END SCOPE; 

    					// 1.20E GMI Market Volume PY = ([GMI Market Volume: prior Full Year])
						SCOPE ([Measures].[GMI Market Volume PY],[Date Comparison].[Date Comparison].[Full Year]); 
						THIS = ([Measures].[GMI Market Volume CY],
						[Date Comparison].[Date Comparison].[PY Full Year]);
						END SCOPE; 

						// 1.21   GMI Market Value PY
						
						// 1.21AA GMI Market Volume PY - All
						SCOPE ([Measures].[GMI Market Value PY]); 
						THIS = ([Measures].[GMI Market Value CY],[Period].[Period].[PY]); 
						END SCOPE; 
						
						// 1.21A GMI Market Value PY = ([GMI Market Value: prior period])
						SCOPE ([Measures].[GMI Market Value PY],[Date Comparison].[Date Comparison].[Current Period]); 
						THIS = ([Measures].[GMI Market Value CY],
						[Date Comparison].[Date Comparison].[PY Period]); 
						END SCOPE; 

						// 1.21B GMI Market Value PY = ([GMI Market Value: prior QTD])
						SCOPE ([Measures].[GMI Market Value PY],[Date Comparison].[Date Comparison].[QTD]); 
						THIS = ([Measures].[GMI Market Value CY],
						[Date Comparison].[Date Comparison].[PY QTD]); 
    					END SCOPE; 

						// 1.21C GMI Market Value PY = ([GMI Market Value: prior YTD])
						SCOPE ([Measures].[GMI Market Value PY],[Date Comparison].[Date Comparison].[YTD]); 
						THIS = ([Measures].[GMI Market Value CY],
						[Date Comparison].[Date Comparison].[PY YTD]); 
						END SCOPE; 

						// 1.21D GMI Market Value PY = ([GMI Market Value: prior MAT])
						SCOPE ([Measures].[GMI Market Value PY],[Date Comparison].[Date Comparison].[MAT]); 
						THIS = ([Measures].[GMI Market Value CY],
						[Date Comparison].[Date Comparison].[PY MAT]); 
						END SCOPE; 

						// 1.21E GMI Market Value PY = ([GMI Market Value: prior Full Year])
						SCOPE ([Measures].[GMI Market Value PY],[Date Comparison].[Date Comparison].[Full Year]); 
						THIS = ([Measures].[GMI Market Value CY],
						[Date Comparison].[Date Comparison].[PY Full Year]); 
						END SCOPE; 


						//    PY Total Supply Chain Costs

						// 1.21A PY Total Supply Chain Costs = ([Total Supply Chain Costs: prior period])
						SCOPE ([Measures].[PY Total Supply Chain Costs],[Date Comparison].[Date Comparison].[Current Period]); 
						THIS = ([Measure].[Measure].&[M2_SCC00R],
						[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY Period]); 
						END SCOPE; 

						// 1.21B PY Total Supply Chain Costs = ([Total Supply Chain Costs: prior QTD])
						SCOPE ([Measures].[PY Total Supply Chain Costs],[Date Comparison].[Date Comparison].[QTD]); 
						THIS = ([Measure].[Measure].&[M2_SCC00R],
						[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY QTD]); 
						END SCOPE; 

						// 1.21C PY Total Supply Chain Costs = ([Total Supply Chain Costs: prior YTD])
						SCOPE ([Measures].[PY Total Supply Chain Costs],[Date Comparison].[Date Comparison].[YTD]); 
						THIS = ([Measure].[Measure].&[M2_SCC00R],
						[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY YTD]); 
						END SCOPE; 

						// 1.21D PY Total Supply Chain Costs = ([Total Supply Chain Costs prior MAT])
						SCOPE ([Measures].[PY Total Supply Chain Costs],[Date Comparison].[Date Comparison].[MAT]); 
						THIS = ([Measure].[Measure].&[M2_SCC00R],
						[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY MAT]); 
						END SCOPE; 

						// 1.21E PY Total Supply Chain Costs = (Total Supply Chain Costs: prior Full Year])
						SCOPE ([Measures].[PY Total Supply Chain Costs],[Date Comparison].[Date Comparison].[Full Year]); 
						THIS = ([Measure].[Measure].&[M2_SCC00R],
						[Measures].[Value],
						[Date Comparison].[Date Comparison].[PY Full Year]); 
						END SCOPE; 

						//Scope for NRM Ref Price Variance
						SCOPE ([Measure].[Measure].&[NRM_REFPRVAR],[Measures].[NRM Value]); 
						THIS = ([Measure].[Measure].&[VA_TOPR0R_TC],[Measures].[Value]); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_REFPRVAR_TC],[Measures].[NRM Value]); 
						THIS = ([Measure].[Measure].&[VA_TOPR0R_TC],[Measures].[Value]); 
						END SCOPE; 

						SCOPE ([Measures].[p.m. NRM Ref Price Variance]); 
						THIS = ROUND(([Measure].[Measure].&[VA_TOPR0R_TC],[Measures].[Value]),4); 
						END SCOPE; 

						//For Ph only
						SCOPE ([Scenario].[Scenario].&[3],[Measure].[Measure].&[NRM_REFPRVAR],[Measures].[NRM Value],FILTER([Management Unit].[GBU].[GBU].MEMBERS,[Management Unit].[GBU Code].CURRENTMEMBER.MEMBERVALUE = "U0236")); 
						THIS =([Scenario].[Scenario].&[1],[Measure].[Measure].&[VA_TOPR0R_TC],[Measures].[Value]); 
						END SCOPE; 

						SCOPE ([Scenario].[Scenario].&[3],[Measure].[Measure].&[NRM_REFPRVAR_TC],[Measures].[NRM Value],FILTER([Management Unit].[GBU].[GBU].MEMBERS,[Management Unit].[GBU Code].CURRENTMEMBER.MEMBERVALUE = "U0236")); 
						THIS =([Scenario].[Scenario].&[1],[Measure].[Measure].&[VA_TOPR0R_TC],[Measures].[Value]); 
						END SCOPE; 

						SCOPE ([Scenario].[Scenario].&[3],[Measures].[p.m. NRM Ref Price Variance],FILTER([Management Unit].[GBU].[GBU].MEMBERS,[Management Unit].[GBU Code].CURRENTMEMBER.MEMBERVALUE = "U0236")); 
						THIS =ROUND(([Scenario].[Scenario].&[1],[Measure].[Measure].&[VA_TOPR0R_TC],[Measures].[Value]),4); 
						END SCOPE; 

						//NULL for SEAA
						SCOPE ([Scenario].[Scenario].&[1],[Measure].[Measure].&[NRM_REFPRVAR],[Measures].[NRM Value],FILTER([Management Unit].[GBU].[GBU].MEMBERS,[Management Unit].[GBU Code].CURRENTMEMBER.MEMBERVALUE = "U0236")); 
						THIS =NULL; 
						END SCOPE; 

						SCOPE ([Scenario].[Scenario].&[1],[Measure].[Measure].&[NRM_REFPRVAR_TC],[Measures].[NRM Value],FILTER([Management Unit].[GBU].[GBU].MEMBERS,[Management Unit].[GBU Code].CURRENTMEMBER.MEMBERVALUE = "U0236")); 
						THIS =NULL; 
						END SCOPE; 

						SCOPE ([Scenario].[Scenario].&[1],[Measures].[p.m. NRM Ref Price Variance],FILTER([Management Unit].[GBU].[GBU].MEMBERS,[Management Unit].[GBU Code].CURRENTMEMBER.MEMBERVALUE = "U0236")); 
						THIS = NULL; 
						END SCOPE; 

						SCOPE ([Scenario].[Scenario].&[1],[Measure].[Measure].&[NRM_REFPRVAR],[Measures].[NRM Value],FILTER([Management Unit].[GBU].[GBU].MEMBERS,[Management Unit].[GBU Code].CURRENTMEMBER.MEMBERVALUE = "U1350")); 
						THIS =NULL; 
						END SCOPE; 

						SCOPE ([Scenario].[Scenario].&[1],[Measure].[Measure].&[NRM_REFPRVAR_TC],[Measures].[NRM Value],FILTER([Management Unit].[GBU].[GBU].MEMBERS,[Management Unit].[GBU Code].CURRENTMEMBER.MEMBERVALUE = "U1350")); 
						THIS =NULL; 
						END SCOPE; 

						SCOPE ([Scenario].[Scenario].&[1],[Measures].[p.m. NRM Ref Price Variance],FILTER([Management Unit].[GBU].[GBU].MEMBERS,[Management Unit].[GBU Code].CURRENTMEMBER.MEMBERVALUE = "U1350")); 
						THIS = NULL; 
						END SCOPE; 

						SCOPE ([Scenario].[Scenario].&[1],[Measure].[Measure].&[NRM_REFPRVAR],[Measures].[NRM Value],FILTER([Management Unit].[GBU].[GBU].MEMBERS,[Management Unit].[GBU Code].CURRENTMEMBER.MEMBERVALUE = "U1376")); 
						THIS =NULL; 
						END SCOPE; 

						SCOPE ([Scenario].[Scenario].&[1],[Measure].[Measure].&[NRM_REFPRVAR_TC],[Measures].[NRM Value],FILTER([Management Unit].[GBU].[GBU].MEMBERS,[Management Unit].[GBU Code].CURRENTMEMBER.MEMBERVALUE = "U1376")); 
						THIS =NULL; 
						END SCOPE; 

						SCOPE ([Scenario].[Scenario].&[1],[Measures].[p.m. NRM Ref Price Variance],FILTER([Management Unit].[GBU].[GBU].MEMBERS,[Management Unit].[GBU Code].CURRENTMEMBER.MEMBERVALUE = "U1376")); 
						THIS = NULL; 
						END SCOPE; 

						//Scope for Finance Price Variance
    					SCOPE([Measure].[Measure].&[NRM_REFPRVAR]); 
						THIS = ROUND(([Measure].[Measure].&[NRM_REFPRVAR_PC]),4); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_REFPRVAR],[Customer].[Local Customer Hierarchy].[Customer GBU],[Customer].[Customer Hierarchy].[All]); 
						THIS = ROUND(([Measure].[Measure].&[NRM_REFPRVAR_TC],[Measures].[NRM Value]),4); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_REFPRVAR],[Customer].[Customer Hierarchy].[Total Customer],[Customer].[Local Customer Hierarchy].[All]); 
						THIS = ROUND(([Measure].[Measure].&[NRM_REFPRVAR_TC],[Measures].[NRM Value]),4); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_REFPRVAR],[Customer].[Local Customer Hierarchy].[All],[Customer].[Customer Hierarchy].[All]); 
						THIS = ROUND(([Measure].[Measure].&[NRM_REFPRVAR_TC],[Measures].[NRM Value]),4); 
						END SCOPE; 

						SCOPE ([Measures].[p.m. NRM Ref Price Variance]); 
						THIS = ROUND(([Measure].[Measure].&[NRM_REFPRVAR],[Measures].[NRM Value]),4); 
						END SCOPE; 

						//Scope for List Price
						SCOPE ([Measure].[Measure].&[NRM_LPRCE]); 
						THIS = ROUND([Measure].[Measure].&[NRM_LPRCE_PC],4); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_LPRCE],[Customer].[Local Customer Hierarchy].[Customer GBU],[Customer].[Customer Hierarchy].[All]); 
						THIS = ROUND(([Measure].[Measure].&[NRM_LPRCE_TC],[Measures].[NRM Value]),4); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_LPRCE],[Customer].[Customer Hierarchy].[Total Customer],[Customer].[Local Customer Hierarchy].[All]); 
						THIS = ROUND(([Measure].[Measure].&[NRM_LPRCE_TC],[Measures].[NRM Value]),4); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_LPRCE],[Customer].[Local Customer Hierarchy].[All],[Customer].[Customer Hierarchy].[All]); 
						THIS = ROUND(([Measure].[Measure].&[NRM_LPRCE_TC],[Measures].[NRM Value]),4); 
						END SCOPE; 

						SCOPE ([Measures].[NRM List Price]); 
						THIS = ROUND(([Measure].[Measure].&[NRM_LPRCE],[Measures].[NRM Value]),4); 
						END SCOPE; 

						//Scope for List Price Local
						SCOPE ([Measure].[Measure].&[NRM_LPRCE_LOCAL]); 
						THIS =([Measure].[Measure].&[NRM_LPRCE_LOCAL_PC],[Measures].[NRM Value]); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_LPRCE_LOCAL],[Customer].[Local Customer Hierarchy].[Customer GBU],[Customer].[Customer Hierarchy].[All]); 
						THIS = ([Measure].[Measure].&[NRM_LPRCE_LOCAL_TC],[Measures].[NRM Value]); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_LPRCE_LOCAL],[Customer].[Customer Hierarchy].[Total Customer],[Customer].[Local Customer Hierarchy].[All]); 
						THIS = ([Measure].[Measure].&[NRM_LPRCE_LOCAL_TC],[Measures].[NRM Value]); 
						END SCOPE; 

						SCOPE ([Measures].[NRM List Price Local]); 
						THIS = ([Measure].[Measure].&[NRM_LPRCE_LOCAL],[Measures].[NRM Value]); 
						END SCOPE; 

						//Scope for List Price ED
						SCOPE ([Measure].[Measure].&[NRM_LPRCE_ED]); 
						THIS =([Measure].[Measure].&[NRM_LPRCE_ED_PC],[Measures].[NRM Value]); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_LPRCE_ED],[Customer].[Local Customer Hierarchy].[Customer GBU],[Customer].[Customer Hierarchy].[All]); 
						THIS = ([Measure].[Measure].&[NRM_LPRCE_ED_TC],[Measures].[NRM Value]); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_LPRCE_ED],[Customer].[Customer Hierarchy].[Total Customer],[Customer].[Local Customer Hierarchy].[All]); 
						THIS = ([Measure].[Measure].&[NRM_LPRCE_ED_TC],[Measures].[NRM Value]); 
						END SCOPE; 

						SCOPE ([Measures].[NRM List Price ED]); 
						THIS = ([Measure].[Measure].&[NRM_LPRCE_ED],[Measures].[NRM Value]); 
						END SCOPE; 

						//Scope for List Price OD
						SCOPE ([Measure].[Measure].&[NRM_LPRCE_OD]); 
						THIS =([Measure].[Measure].&[NRM_LPRCE_OD_PC],[Measures].[NRM Value]); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_LPRCE_OD],[Customer].[Local Customer Hierarchy].[Customer GBU],[Customer].[Customer Hierarchy].[All]); 
						THIS = ([Measure].[Measure].&[NRM_LPRCE_OD_TC],[Measures].[NRM Value]); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_LPRCE_OD],[Customer].[Customer Hierarchy].[Total Customer],[Customer].[Local Customer Hierarchy].[All]); 
						THIS = ([Measure].[Measure].&[NRM_LPRCE_OD_TC],[Measures].[NRM Value]); 
						END SCOPE; 

						SCOPE ([Measures].[NRM List Price OD]); 
						THIS = ([Measure].[Measure].&[NRM_LPRCE_OD],[Measures].[NRM Value]); 
						END SCOPE; 

						//Scope for NRM Promo Terms
						SCOPE ([Measure].[Measure].&[NRM_PROMO]); 
						THIS =[Measure].[Measure].&[NRM_PROMO_PC]; 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_PROMO],[Customer].[Local Customer Hierarchy].[Customer GBU],[Customer].[Customer Hierarchy].[All]); 
						THIS = ([Measure].[Measure].&[NRM_PROMO_TC],[Measures].[NRM Value]); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_PROMO],[Customer].[Customer Hierarchy].[Total Customer],[Customer].[Local Customer Hierarchy].[All]); 
						THIS = ([Measure].[Measure].&[NRM_PROMO_TC],[Measures].[NRM Value]); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_PROMO],[Customer].[Customer Hierarchy].[All],[Customer].[Local Customer Hierarchy].[All]); 
						THIS = ([Measure].[Measure].&[NRM_PROMO_TC],[Measures].[NRM Value]); 
						END SCOPE; 

						SCOPE ([Measures].[NRM Promo Terms]); 
						THIS = ([Measure].[Measure].&[NRM_PROMO],[Measures].[NRM Value]); 
						END SCOPE; 

						//Scope for NRM Other Terms
						SCOPE ([Measure].[Measure].&[NRM_OTHTR]); 
						THIS = [Measure].[Measure].&[NRM_OTHTR_PC]; 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_OTHTR],[Customer].[Local Customer Hierarchy].[Customer GBU],[Customer].[Customer Hierarchy].[All]); 
						THIS = ([Measure].[Measure].&[NRM_OTHTR_TC],[Measures].[NRM Value]); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_OTHTR],[Customer].[Customer Hierarchy].[Total Customer],[Customer].[Local Customer Hierarchy].[All]); 
						THIS = ([Measure].[Measure].&[NRM_OTHTR_TC],[Measures].[NRM Value]); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_OTHTR],[Customer].[Customer Hierarchy].[All],[Customer].[Local Customer Hierarchy].[All]); 
						THIS = ([Measure].[Measure].&[NRM_OTHTR_TC],[Measures].[NRM Value]); 
						END SCOPE; 

						SCOPE ([Measures].[NRM Oth Terms]); 
						THIS = ([Measure].[Measure].&[NRM_OTHTR],[Measures].[NRM Value]); 
						END SCOPE; 

						//Scope for NRM Inno Pack
						SCOPE([Measure].[Measure].&[NRM_PACKV]); 
						THIS = ROUND([Measure].[Measure].&[NRM_PACKV_PC],4); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_PACKV],[Customer].[Local Customer Hierarchy].[Customer GBU],[Customer].[Customer Hierarchy].[All]); 
						THIS = ROUND(([Measure].[Measure].&[NRM_PACKV_TC],[Measures].[NRM Value]),4); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_PACKV],[Customer].[Customer Hierarchy].[Total Customer],[Customer].[Local Customer Hierarchy].[All]); 
						THIS = ROUND(([Measure].[Measure].&[NRM_PACKV_TC],[Measures].[NRM Value]),4); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_PACKV],[Customer].[Customer Hierarchy].[All],[Customer].[Local Customer Hierarchy].[All]); 
						THIS = ROUND(([Measure].[Measure].&[NRM_PACKV_TC],[Measures].[NRM Value]),4); 
						END SCOPE; 

						SCOPE ([Measures].[NRM Inno Pack]); 
						THIS = ROUND(([Measure].[Measure].&[NRM_PACKV],[Measures].[NRM Value]),4); 
						END SCOPE; 

						//Scope for NRM Inno Prod
						SCOPE([Measure].[Measure].&[NRM_PRODV]); 
						THIS = ROUND([Measure].[Measure].&[NRM_PRODV_PC],4); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_PRODV],[Customer].[Local Customer Hierarchy].[Customer GBU],[Customer].[Customer Hierarchy].[All]); 
						THIS = ROUND(([Measure].[Measure].&[NRM_PRODV_TC],[Measures].[NRM Value]),4); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_PRODV],[Customer].[Customer Hierarchy].[Total Customer],[Customer].[Local Customer Hierarchy].[All]); 
						THIS = ROUND(([Measure].[Measure].&[NRM_PRODV_TC],[Measures].[NRM Value]),4); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_PRODV],[Customer].[Customer Hierarchy].[All],[Customer].[Local Customer Hierarchy].[All]); 
						THIS = ROUND(([Measure].[Measure].&[NRM_PRODV_TC],[Measures].[NRM Value]),4); 
						END SCOPE; 

						SCOPE ([Measures].[NRM Inno Prod]); 
						THIS = ROUND(([Measure].[Measure].&[NRM_PRODV],[Measures].[NRM Value]),4); 
						END SCOPE; 

						//Scope for NRM Vol/Mix Exceptions
						SCOPE ([Measure].[Measure].&[NRM_VMXEXC]); 
						THIS = [Measure].[Measure].&[NRM_VMXEXC_PC]; 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_VMXEXC],[Customer].[Local Customer Hierarchy].[Customer GBU],[Customer].[Customer Hierarchy].[All]); 
						THIS = ([Measure].[Measure].&[NRM_VMXEXC_TC],[Measures].[NRM Value]); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_VMXEXC],[Customer].[Customer Hierarchy].[Total Customer],[Customer].[Local Customer Hierarchy].[All]); 
						THIS = ([Measure].[Measure].&[NRM_VMXEXC_TC],[Measures].[NRM Value]); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_VMXEXC],[Customer].[Customer Hierarchy].[All],[Customer].[Local Customer Hierarchy].[All]); 
						THIS = ([Measure].[Measure].&[NRM_VMXEXC_TC],[Measures].[NRM Value]); 
						END SCOPE; 

						SCOPE ([Measures].[NRM Vol/Mix exceptions]); 
						THIS = ([Measure].[Measure].&[NRM_VMXEXC],[Measures].[NRM Value]); 
						END SCOPE; 

						//Scope for NRM Vol/Mix Regular

						SCOPE ([Measure].[Measure].&[NRM_VMXREG]); 
						THIS = [Measure].[Measure].&[NRM_VMXREG_PC]; 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_VMXREG],[Customer].[Local Customer Hierarchy].[Customer GBU],[Customer].[Customer Hierarchy].[All]); 
						THIS = ([Measure].[Measure].&[NRM_VMXREG_TC],[Measures].[NRM Value]); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_VMXREG],[Customer].[Customer Hierarchy].[Total Customer],[Customer].[Local Customer Hierarchy].[All]); 
						THIS = ([Measure].[Measure].&[NRM_VMXREG_TC],[Measures].[NRM Value]); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_VMXREG],[Customer].[Customer Hierarchy].[All],[Customer].[Local Customer Hierarchy].[All]); 
						THIS = ([Measure].[Measure].&[NRM_VMXREG_TC],[Measures].[NRM Value]); 
						END SCOPE; 

						SCOPE ([Measures].[NRM Vol/Mix regular]); 
						THIS = ([Measure].[Measure].&[NRM_VMXREG],[Measures].[NRM Value]); 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

						//PPR
						SCOPE ([Measure].[Measure].&[NRM_OTHGN]); 
						THIS = [Measure].[Measure].&[NRM_OTHGN_PC]; 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_OTHGN],[Customer].[Local Customer Hierarchy].[Customer GBU],[Customer].[Customer Hierarchy].[All]); 
						THIS = ([Measure].[Measure].&[NRM_OTHGN_TC],[Measures].[NRM Value]); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_OTHGN],[Customer].[Customer Hierarchy].[Total Customer],[Customer].[Local Customer Hierarchy].[All]); 
						THIS = ([Measure].[Measure].&[NRM_OTHGN_TC],[Measures].[NRM Value]); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_OTHGN],[Customer].[Customer Hierarchy].[All],[Customer].[Local Customer Hierarchy].[All]); 
						THIS = ([Measure].[Measure].&[NRM_OTHGN_TC],[Measures].[NRM Value]); 
						END SCOPE; 

						SCOPE ([Measures].[p.m. NRM Oth General Terms],FILTER([Management Unit].[GBU].[GBU].MEMBERS,[Management Unit].[GBU Code].CURRENTMEMBER.MEMBERVALUE = "U1319")); 
						THIS = ([Measure].[Measure].&[NRM_OTHGN],[Measures].[NRM Value]); 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

						SCOPE([Measure].[Measure].&[NRM_TRSPV]); 
						THIS = ([Measure].[Measure].&[NRM_OTHTR]) + ([Measure].[Measure].&[NRM_PROMO]); 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

						SCOPE([Measure].[Measure].&[NRM_INNOV]); 
						THIS = ([Measure].[Measure].&[NRM_PRODV]) + ([Measure].[Measure].&[NRM_PACKV]); 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

						SCOPE([Measure].[Measure].&[NRM_PRICE]); 
						THIS = ROUND((([Measure].[Measure].&[NRM_LPRCE]) + ([Measure].[Measure].&[NRM_TRSPV])+ ([Measure].[Measure].&[NRM_INNOV])),4); 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

						//Scope for NRM Price
						SCOPE ([Measure].[Measure].&[NRM_PRICE_PC]); 
						THIS = ([Measure].[Measure].&[NRM_LPRCE_PC]) + ([Measure].[Measure].&[NRM_OTHTR_PC]) + ([Measure].[Measure].&[NRM_PROMO_PC])+ ([Measure].[Measure].&[NRM_PRODV_PC]) + ([Measure].[Measure].&[NRM_PACKV_PC]); 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_PRICE_TC]); 
						THIS = ([Measure].[Measure].&[NRM_LPRCE_TC]) + ([Measure].[Measure].&[NRM_OTHTR_TC]) + ([Measure].[Measure].&[NRM_PROMO_TC])+ ([Measure].[Measure].&[NRM_PRODV_TC]) + ([Measure].[Measure].&[NRM_PACKV_TC]); 
						END SCOPE; 

						SCOPE ([Measures].[NRM Price]); 
						THIS = ROUND(([Measure].[Measure].&[NRM_PRICE],[Measures].[NRM Value]),4); 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

						SCOPE ([Measures].[NRM Total Variance]); 
						THIS = ([Measure].[Measure].&[NRM_TOTAL],[Measures].[NRM Value]); 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 
						
						//NRM Turnover for Absolute Value Selection
						SCOPE([Measure].[Measure].&[NRM_TO_PY],[Volume Ratio].[Volume Ratio].&[1]); 
						THIS = ROUND(([Measure].[Measure].&[NRM_TO_PY],[Measures].[NRM Value]),4);
						FORMAT_STRING(THIS) = "#,##0.0";
						END SCOPE;
						
						SCOPE([Measure].[Measure].&[NRM_TO_CY],[Volume Ratio].[Volume Ratio].&[1]); 
						THIS = ROUND(([Measure].[Measure].&[NRM_TO_CY],[Measures].[NRM Value]),4);
						FORMAT_STRING(THIS) = "#,##0.0";
						END SCOPE;
						
						SCOPE([Measures].[NRM Turnover CY]);
						THIS = ROUND(([Measure].[Measure].&[NRM_TO_CY],[Measures].[NRM Value]),4); 
						FORMAT_STRING(THIS) = "#,##0.0"; 
						END SCOPE; 

						SCOPE([Measures].[NRM Turnover PY]); 
						THIS = ROUND(([Measure].[Measure].&[NRM_TO_PY],[Measures].[NRM Value]),4);
						FORMAT_STRING(THIS) = "#,##0.0"; 
						END SCOPE; 

						SCOPE([Measure].[Measure].&[NRM_MIX]); 
						THIS = ([Measure].[Measure].&[NRM_TO_CY])- ([Measure].[Measure].&[NRM_TO_PY]+[Measure].[Measure].&[NRM_PRICE]+[Measure].[Measure].&[NRM_VMXREG]+[Measure].[Measure].&[NRM_VMXEXC]); 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

						SCOPE([Measures].[NRM Mix]); 
						THIS = ([Measure].[Measure].&[NRM_MIX],[Measures].[NRM Value]); 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

						//NRM VolMix
						SCOPE ([Measure].[Measure].&[NRM_VOLMX_PC]); 
						THIS = [Measure].[Measure].&[NRM_VMXREG_PC] + [Measure].[Measure].&[NRM_VMXEXC_PC] + [Measure].[Measure].&[NRM_MIX]; 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

						SCOPE ([Measure].[Measure].&[NRM_VOLMX_TC]); 
						THIS = [Measure].[Measure].&[NRM_VMXREG_TC] + [Measure].[Measure].&[NRM_VMXEXC_TC] + [Measure].[Measure].&[NRM_MIX]; 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

						SCOPE([Measure].[Measure].&[NRM_VOLMX]); 
						THIS = ROUND(([Measure].[Measure].&[NRM_VMXREG] + [Measure].[Measure].&[NRM_VMXEXC] + [Measure].[Measure].&[NRM_MIX]),4); 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

    					SCOPE([Measures].[NRM Vol/Mix]); 
						THIS = ROUND(([Measure].[Measure].&[NRM_VOLMX],[Measures].[NRM Value]),4); 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

						SCOPE([Measure].[Measure].&[NRM_TOTAL]); 
						THIS = ([Measure].[Measure].&[NRM_PRICE]) + ([Measure].[Measure].&[NRM_VOLMX]); 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

						SCOPE([Measure].[Measure].&[W_TO_CY]); 
						THIS = ROUND([Measure].[Measure].&[NRM_TO_CY],4); 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

						SCOPE([Measure].[Measure].&[W_TO_PY]); 
						THIS = ROUND([Measure].[Measure].&[NRM_TO_PY],4); 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

						SCOPE([Measure].[Measure].&[W_LPRCE]); 
						THIS = [Measure].[Measure].&[NRM_LPRCE]; 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

						SCOPE([Measure].[Measure].&[W_PACKV]); 
						THIS = [Measure].[Measure].&[NRM_PACKV]; 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

						SCOPE([Measure].[Measure].&[W_VOLMX]); 
						THIS = [Measure].[Measure].&[NRM_VOLMX]; 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

						SCOPE([Measure].[Measure].&[W_PROMO]); 
						THIS = ROUND([Measure].[Measure].&[NRM_PROMO],4); 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

						SCOPE([Measure].[Measure].&[W_OTHTR]); 
						THIS = ROUND([Measure].[Measure].&[NRM_OTHTR],4); 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

						SCOPE([Measure].[Measure].&[W_PRODV]); 
						THIS = [Measure].[Measure].&[NRM_PRODV]; 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

						--For Tableau Reports
						SCOPE([Measures].[NRM Volume CY],[Volume Ratio].[Volume Ratio].&[5]); 
						THIS = ROUND(([Measure].[Measure].&[NRM_VCSMPT],[Measures].[NRM Value]),4); 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

						SCOPE([Measures].[NRM Volume CY],[Volume Ratio].[Volume Ratio].&[1]); 
						THIS = ROUND(([Measure].[Measure].&[NRM_VCSMPT],[Measures].[NRM Value]),4); 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

    					--PY Volume
						SCOPE([Measures].[NRM Volume PY],[Volume Ratio].[Volume Ratio].&[5]); 
						THIS = ROUND(([Measure].[Measure].&[NRM_VCSMPT_PY],[Measures].[NRM Value]),4); 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

						SCOPE([Measures].[NRM Volume PY],[Volume Ratio].[Volume Ratio].&[1]); 
						THIS = ROUND(([Measure].[Measure].&[NRM_VCSMPT_PY],[Measures].[NRM Value]),4); 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

						SCOPE ([Measures].[BB Pack]); 
						THIS = ([Measure].[Measure].&[M1_BSN001],[Measures].[Value]); 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

						SCOPE([Measures].[Sales Volume - CSMPT]); 
						THIS = ([Measure].[Measure].&[NRM_VCSMPT],
						[Measures].[NRM Value]); 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

						SCOPE([Measures].[PY Sales Volume - CSMPT]); 
						THIS = ([Measure].[Measure].&[NRM_VCSMPT_PY],
						[Measures].[NRM Value]); 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 

						SCOPE([Measures].[GMI Value MS CY]); 
						THIS =IIF([Measures].[GMI Market Value CY]=0,NULL,
						[Measures].[GMI Market Value CY]/
						([Product].[Manufacturer].[All],
						[Product].[Brand].[All],
						[GTM Product].[GTM Level 5].CURRENTMEMBER,
						[GTM Product].[GTM Level 6].[All],
						[Measures].[GMI Market Value CY]
						)
						); 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE;

						SCOPE([Measures].[GMI Value MS CY (bps)]); 
						THIS =IIF([Measures].[GMI Market Value CY]=0,NULL,
						[Measures].[GMI Market Value CY] * 100/
						([Product].[Manufacturer].[All],
						[Product].[Brand].[All],
						[GTM Product].[GTM Level 5].CURRENTMEMBER,
						[GTM Product].[GTM Level 6].[All],
						[Measures].[GMI Market Value CY]
						)
						); 
						FORMAT_STRING(THIS) = "#,##0"; 
						END SCOPE;

						SCOPE([Measures].[GMI Volume MS CY]); 
						THIS =IIF([Measures].[GMI Market Volume CY]=0,NULL,
						[Measures].[GMI Market Volume CY]/
						([Product].[Manufacturer].[All],
						[Product].[Brand].[All],
						[GTM Product].[GTM Level 5].CURRENTMEMBER,
						[GTM Product].[GTM Level 6].[All],
						[Measures].[GMI Market Volume CY]
						)
						); 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 
						
						SCOPE([Measures].[GMI Volume MS CY (bps)]); 
						THIS =IIF([Measures].[GMI Market Volume CY]=0,NULL,
						[Measures].[GMI Market Volume CY] * 100/
						([Product].[Manufacturer].[All],
						[Product].[Brand].[All],
						[GTM Product].[GTM Level 5].CURRENTMEMBER,
						[GTM Product].[GTM Level 6].[All],
						[Measures].[GMI Market Volume CY]
						)
						); 
						FORMAT_STRING(THIS) = "#,##0"; 
						END SCOPE;

						SCOPE([Measures].[GMI Value MS PY]); 
						THIS =IIF([Measures].[GMI Market Value PY]=0,NULL,
						[Measures].[GMI Market Value PY]/
						([Product].[Manufacturer].[All],
						[Product].[Brand].[All],
						[GTM Product].[GTM Level 5].CURRENTMEMBER,
						[GTM Product].[GTM Level 6].[All],
						[Measures].[GMI Market Value PY]
						)
						); 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 
						
						SCOPE([Measures].[GMI Value MS PY (bps)]); 
						THIS =IIF([Measures].[GMI Market Value PY]=0,NULL,
						[Measures].[GMI Market Value PY]*100/
						([Product].[Manufacturer].[All],
						[Product].[Brand].[All],
						[GTM Product].[GTM Level 5].CURRENTMEMBER,
						[GTM Product].[GTM Level 6].[All],
						[Measures].[GMI Market Value PY]
						)
						); 
						FORMAT_STRING(THIS) = "#,##0"; 
						END SCOPE;

						SCOPE([Measures].[GMI Volume MS PY]); 
						THIS =IIF([Measures].[GMI Market Volume PY]=0,NULL,
						[Measures].[GMI Market Volume PY]/
						([Product].[Manufacturer].[All],
						[Product].[Brand].[All],
						[GTM Product].[GTM Level 5].CURRENTMEMBER,
						[GTM Product].[GTM Level 6].[All],
						[Measures].[GMI Market Volume PY]
						)
						); 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						SCOPE([Measures].[GMI Volume MS PY (bps)]); 
						THIS =IIF([Measures].[GMI Market Volume PY]=0,NULL,
						[Measures].[GMI Market Volume PY] * 100/
						([Product].[Manufacturer].[All],
						[Product].[Brand].[All],
						[GTM Product].[GTM Level 5].CURRENTMEMBER,
						[GTM Product].[GTM Level 6].[All],
						[Measures].[GMI Market Volume PY]
						)
						); 
						FORMAT_STRING(THIS) = "#,##0"; 
						END SCOPE;

                        SCOPE([Measures].[GMI RSV Growth]); 
                        THIS = IIF(([GMI Market Value PY],[Date Comparison].[Date Comparison].[Current Period]) = 0 OR ([GMI Market Value CY],[Date Comparison].[Date Comparison].[Current Period]) = 0
                               , NULL, ([GMI Market Value CY]-[GMI Market Value PY])/[GMI Market Value PY]); 
                        END SCOPE; 
						
						SCOPE([Measures].[GMI Value MS vs PY (bps)]); 
						THIS = ([Measures].[GMI Value MS CY]-[Measures].[GMI Value MS PY])*10000; 
						FORMAT_STRING(THIS) = "#,##0"; 
						END SCOPE;
						
						SCOPE([Measures].[GMI Volume MS vs PY (bps)]); 
						THIS = ([Measures].[GMI Volume MS CY]-[Measures].[GMI Volume MS PY])*10000; 
						FORMAT_STRING(THIS) = "#,##0"; 
						END SCOPE;
						
						SCOPE([Measures].[GMI Value Growth vs PY]); 
						THIS =IIF(([Measures].[GMI Value MS PY]=0 OR ISEMPTY([Measures].[GMI Value MS PY])),NULL,
						(([Measures].[GMI Value MS CY]/[Measures].[GMI Value MS PY])-1)                                                                                  
						); 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE;
						
						SCOPE([Measures].[GMI Volume Growth vs PY]); 
						THIS =IIF(([Measures].[GMI Volume MS PY]=0 OR ISEMPTY([Measures].[GMI Volume MS PY])),NULL,
						(([Measures].[GMI Volume MS CY]/[Measures].[GMI Volume MS PY])-1)                                                                                  
						); 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE;



						SCOPE([Measures].[Net Cost vs Net Price]); 
						THIS = IIF(ISEMPTY([Measures].[PY Turnover])                        OR
						ISEMPTY([Measures].[NRM Volume CY])                      OR
						ISEMPTY([Measures].[PY Total Supply Chain Costs])        OR
						[Measures].[PY Turnover]=0                       OR
						[Measures].[NRM Volume CY]=0                     OR
						[Measures].[PY Total Supply Chain Costs]=0
						, NULL,
						((([Measures].[Turnover])/([Measures].[PY Turnover])) - (([Measures].[Total Supply Chain Costs])/([Measures].[PY Total Supply Chain Costs])))*(([Measures].[NRM Volume PY])/([Measures].[NRM Volume CY]))) * 10000; 
						FORMAT_STRING(THIS) = "#,##0.0"; 
						END SCOPE; 

						SCOPE([Measures].[Is PPR],FILTER([Management Unit].[GBU].[GBU].MEMBERS,[Management Unit].[GBU Code].CURRENTMEMBER.MEMBERVALUE = "U1319")); 
						THIS = 1; 
						END SCOPE; 

						--The change is done due to different measure for Brazil
						SCOPE([Measures].[Is PPR],FILTER([Management Unit].[GBU].[GBU].MEMBERS,[Management Unit].[GBU Code].CURRENTMEMBER.MEMBERVALUE = "U0331")); 
						THIS = 2; 
						END SCOPE; 

						--Consumption Units
						SCOPE (EXCEPT(FILTER([Measure].[Measure].MEMBERS,[Measure].[Measure].CURRENTMEMBER.Properties( "Measure Category" ) = "NRM"),
						{[Measure].[Measure].&[GMI_VOLUME],
						[Measure].[Measure].&[GMI_VALUE],
						[Measure].[Measure].&[NRM_MIX],
						[Measure].[Measure].&[NRM_VOLMX],
						[Measure].[Measure].&[NRM_VCSMPT],
						[Measure].[Measure].&[NRM_VCSMPT_PY],
						[Measure].[Measure].&[NRM_TO_PY],
						[Measure].[Measure].&[W_TO_PY],
						[Measure].[Measure].&[W_VOLMX]}),
						[Volume Ratio].[Volume Ratio].&[5]
						); 
						THIS = IIF(([Measure].[Measure].&[NRM_VCSMPT],[Measures].[NRM Value]) =0 OR ISEMPTY(([Measure].[Measure].&[NRM_VCSMPT],[Measures].[NRM Value])),NULL,
						ROUND(([Measures].[NRM Value])/([Measure].[Measure].&[NRM_VCSMPT],[Measures].[NRM Value]),4)); 
						FORMAT_STRING(THIS) = "#,##0.0"; 
						END SCOPE; 

						--Consumption Units 
						SCOPE ([Measure].[Measure].&[NRM_TO_PY],[Volume Ratio].[Volume Ratio].&[5]); 
						THIS = IIF(([Measure].[Measure].&[NRM_VCSMPT_PY],[Measures].[NRM Value]) =0 OR ISEMPTY(([Measure].[Measure].&[NRM_VCSMPT_PY],[Measures].[NRM Value])), NULL,
						ROUND(([Measures].[NRM Value])/(([Measure].[Measure].&[NRM_VCSMPT_PY],[Measures].[NRM Value])),4));
						FORMAT_STRING(THIS) = "#,##0.0"; 
						END SCOPE; 

						SCOPE ([Measures].[GMI Market Volume CY]); 
						THIS = ([Measure].[Measure].&[GMI_VOLUME],[Measures].[GMI]); 
						END SCOPE; 

						SCOPE ([Measures].[GMI Market Value CY]); 
						THIS = ([Measure].[Measure].&[GMI_Value],[Measures].[GMI]); 
						END SCOPE; 

						SCOPE([Measure].[Measure].&[NRM_NRR]); 
						THIS = ROUND(([Measure].[Measure].&[NRM_TO_CY] - [Measure].[Measure].&[NRM_TO_PY]),4); 
						FORMAT_STRING(THIS) = "#,##0.00"; 
						END SCOPE; 
						--- End of Calculation

						-- Additonal Calculations due to Future Finance
						// 1.1 a Profit Before Overheads in % TO = PBO/TO
						CREATE MEMBER CURRENTCUBE.[Measures].[PBO % TO]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.1 b
						SCOPE ([Measure].[Measure].&[T4_PBO001TO]); 
						THIS = (IIF (([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[T4_PBO001],[Currency Scaling].[Currency Scaling].[Euro])
						/([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro]))*100))
						); 
						END SCOPE; 

						//1.1 c
						SCOPE ([Measures].[PBO % TO]); 
						THIS = ([Measure].[Measure].&[T4_PBO001TO],[Measures].[Value])/100; 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

                        // 1.1 d Profit Before Overheads TO = PBO/TO
                        CREATE MEMBER CURRENTCUBE.[Measures].[PBO TO]
                        AS NULL,
                        ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
                        VISIBLE = 1; 
                    
                        // 1.1 d Profit Before Overheads TO 
                        SCOPE ([Measures].[PBO TO]); 
                        THIS = ([Measure].[Measure].&[T4_PBO001TO],[Measures].[Value]); 
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                        END SCOPE;  

						//1.2 a Trade Terms Other in % GSV
						CREATE MEMBER CURRENTCUBE.[Measures].[Trade Terms Other % GSV]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.2 b
						SCOPE ([Measure].[Measure].&[M1_OT0001GSV]); 
						THIS = (IIF (([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[M1_OT0001],[Currency Scaling].[Currency Scaling].[Euro])
						/([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))*100))
						); 
						END SCOPE; 

						//1.2 c
						SCOPE ([Measures].[Trade Terms Other % GSV]); 
						THIS = ([Measure].[Measure].&[M1_OT0001GSV],[Measures].[Value])/100; 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						//1.3 a Efficient Operations in % GSV
						CREATE MEMBER CURRENTCUBE.[Measures].[Efficient Operations % GSV]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.3 b
						SCOPE ([Measure].[Measure].&[M1_EOT001GSV]); 
						THIS = (IIF (([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[M1_EOT001],[Currency Scaling].[Currency Scaling].[Euro])
						/([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))*100))
						); 
						END SCOPE; 

						//1.3 c
						SCOPE ([Measures].[Efficient Operations % GSV]); 
						THIS = ([Measure].[Measure].&[M1_EOT001GSV],[Measures].[Value])/100; 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						//1.4 a Business Building - CPP in % GSV
						CREATE MEMBER CURRENTCUBE.[Measures].[Business Building - CPP % GSV]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.4 b
						SCOPE ([Measure].[Measure].&[M1_BP0001GSV]); 
						THIS = (IIF (([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[M1_BP0001],[Currency Scaling].[Currency Scaling].[Euro])
						/([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))*100))
						); 
						END SCOPE; 
    
						//1.4 c
						SCOPE ([Measures].[Business Building - CPP % GSV]); 
						THIS = ([Measure].[Measure].&[M1_BP0001GSV],[Measures].[Value])/100; 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						//1.5 a Business Building in % GSV
						CREATE MEMBER CURRENTCUBE.[Measures].[Business Building % GSV]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.5 b
						SCOPE ([Measure].[Measure].&[M1_BBT001GSV]); 
						THIS = (IIF (([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[M1_BBT001],[Currency Scaling].[Currency Scaling].[Euro])
						/([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))*100))
						); 
						END SCOPE; 

						//1.5 c
						SCOPE ([Measures].[Business Building % GSV]); 
						THIS = ([Measure].[Measure].&[M1_BBT001GSV],[Measures].[Value])/100; 
						FORMAT_STRING(THIS) = "#,##0.0%"; 
						END SCOPE; 

						//1.6 a Net Sales Value
						CREATE MEMBER CURRENTCUBE.[Measures].[Net Sales Value]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.6 b
						SCOPE ([Measure].[Measure].&[M1_NSV001]); 
						THIS = ([Measure].[Measure].&[M1_GSV001] + [Measure].[Measure].&[M1_EOT001]); 
						END SCOPE; 

						//1.6 c
						SCOPE ([Measures].[Net Sales Value]); 
						THIS = ([Measure].[Measure].&[M1_NSV001],[Measures].[Value]); 
						END SCOPE; 

						//1.7 a Efficient Operations - Logistic in % GSV
						CREATE MEMBER CURRENTCUBE.[Measures].[Efficient Operations - Logistic % GSV]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.7 b
						SCOPE ([Measure].[Measure].&[M1_EL0001GSV]); 
						THIS = (IIF (([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[M1_EL0001],[Currency Scaling].[Currency Scaling].[Euro])
						/([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))*100))
						); 
						END SCOPE; 

						//1.7 c
						SCOPE ([Measures].[Efficient Operations - Logistic % GSV]); 
						THIS = ([Measure].[Measure].&[M1_EL0001GSV],[Measures].[Value])/100; 
						END SCOPE; 

						//1.8 a Efficient Operations - Payment in % GSV
						CREATE MEMBER CURRENTCUBE.[Measures].[Efficient Operations - Payment % GSV]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.8 b
						SCOPE ([Measure].[Measure].&[M1_EP0001GSV]); 
						THIS = (IIF (([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[M1_EP0001],[Currency Scaling].[Currency Scaling].[Euro])
						/([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))*100))
						); 
						END SCOPE; 

						//1.8 c
						SCOPE ([Measures].[Efficient Operations - Payment % GSV]); 
						THIS = ([Measure].[Measure].&[M1_EP0001GSV],[Measures].[Value])/100; 
						END SCOPE; 

						//1.9 a Business Building - Product in % GSV
						CREATE MEMBER CURRENTCUBE.[Measures].[Business Building - Product % GSV]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 1.9 b
						SCOPE ([Measure].[Measure].&[M1_BPDCT1GSV]); 
						THIS = (IIF (([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[M1_BPDCT1],[Currency Scaling].[Currency Scaling].[Euro])
						/([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))*100))
						); 
						END SCOPE; 

						//1.9 c
						SCOPE ([Measures].[Business Building - Product % GSV]); 
						THIS = ([Measure].[Measure].&[M1_BPDCT1GSV],[Measures].[Value])/100; 
						END SCOPE; 

						//2.0 a Business Building - Pack % GSV
						CREATE MEMBER CURRENTCUBE.[Measures].[Business Building - Pack % GSV]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 2.0 b
						SCOPE ([Measure].[Measure].&[M1_BSN001GSV]); 
						THIS = (IIF (([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[M1_BSN001],[Currency Scaling].[Currency Scaling].[Euro])
						/([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))*100))
						); 
						END SCOPE; 

						//2.0 c
						SCOPE ([Measures].[Business Building - Pack % GSV]); 
						THIS = ([Measure].[Measure].&[M1_BSN001GSV],[Measures].[Value])/100; 
						END SCOPE; 


						//2.1 a Business Building - Place in % GSV
						CREATE MEMBER CURRENTCUBE.[Measures].[Business Building - Place % GSV]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						// 2.1 b
						SCOPE ([Measure].[Measure].&[M1_BPLACEGSV]); 
						THIS = (IIF (([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[M1_BPLACE],[Currency Scaling].[Currency Scaling].[Euro])
						/([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))*100))
						); 
						END SCOPE; 

						//2.1 c
						SCOPE ([Measures].[Business Building - Place % GSV]); 
						THIS = ([Measure].[Measure].&[M1_BPLACEGSV],[Measures].[Value])/100; 
						END SCOPE; 

						//2.2 a Business Building - Prop in % GSV
						CREATE MEMBER CURRENTCUBE.[Measures].[Business Building - Prop % GSV]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						//2.2 b
						SCOPE ([Measure].[Measure].&[M1_BPROP1GSV]); 
						THIS = (IIF (([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[M1_BPROP1],[Currency Scaling].[Currency Scaling].[Euro])
						/([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))*100))
						); 
						END SCOPE; 

						//2.2 c
						SCOPE ([Measures].[Business Building - Prop % GSV]); 
						THIS = ([Measure].[Measure].&[M1_BPROP1GSV],[Measures].[Value])/100; 
						END SCOPE; 

						//2.3 a Business Building - Promo in % GSV
						CREATE MEMBER CURRENTCUBE.[Measures].[Business Building - Promo % GSV]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						//2.3 b
						SCOPE ([Measure].[Measure].&[M1_PROMO1GSV]); 
						THIS = (IIF (([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[M1_PROMO1],[Currency Scaling].[Currency Scaling].[Euro])
						/([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))*100))
						); 
						END SCOPE; 

						//2.3 c
						SCOPE ([Measures].[Business Building - Promo % GSV]); 
						THIS = ([Measure].[Measure].&[M1_PROMO1GSV],[Measures].[Value])/100; 
						END SCOPE; 

						//2.4 a Trade Terms - Results Oriented in % GSV
						CREATE MEMBER CURRENTCUBE.[Measures].[Trade Terms - Results Oriented % GSV]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						//2.4 b
						SCOPE ([Measure].[Measure].&[M1_OR0001GSV]); 
						THIS = (IIF (([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[M1_OR0001],[Currency Scaling].[Currency Scaling].[Euro])
						/([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))*100))
						); 
						END SCOPE; 

						//2.4 c
						SCOPE ([Measures].[Trade Terms - Results Oriented % GSV]); 
						THIS = ([Measure].[Measure].&[M1_OR0001GSV],[Measures].[Value])/100; 
						END SCOPE; 

						//2.5 a Trade Terms - Cust Specific in % GSV
						CREATE MEMBER CURRENTCUBE.[Measures].[Trade Terms - Cust Specific % GSV]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						//2.5 b
						SCOPE ([Measure].[Measure].&[M1_OC0001GSV]); 
						THIS = (IIF (([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[M1_OC0001],[Currency Scaling].[Currency Scaling].[Euro])
						/([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))*100))
						); 
						END SCOPE; 

						//2.5 c
						SCOPE ([Measures].[Trade Terms - Cust Specific % GSV]); 
						THIS = ([Measure].[Measure].&[M1_OC0001GSV],[Measures].[Value])/100; 
						END SCOPE; 

						//2.6 a Trade Terms - Distrib Margin in % GSV
						CREATE MEMBER CURRENTCUBE.[Measures].[Trade Terms - Distrib Margin % GSV]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						//2.6 b
						SCOPE ([Measure].[Measure].&[M1_BDT00RGSV]); 
						THIS = (IIF (([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[M1_BDT00R],[Currency Scaling].[Currency Scaling].[Euro])
						/([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))*100))
						); 
						END SCOPE; 

						//2.6 c
						SCOPE ([Measures].[Trade Terms - Distrib Margin % GSV]); 
						THIS = ([Measure].[Measure].&[M1_BDT00RGSV],[Measures].[Value])/100; 
						END SCOPE; 

						//2.7 a Trade Terms - General Terms in % GSV
						CREATE MEMBER CURRENTCUBE.[Measures].[Trade Terms - General Terms % GSV]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1; 

						//2.7 b
						SCOPE ([Measure].[Measure].&[M1_OG0001GSV]); 
						THIS = (IIF (([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]) = 0
						OR ISEMPTY(([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))
						,NULL
						,((([Measure].[Measure].&[M1_OG0001],[Currency Scaling].[Currency Scaling].[Euro])
						/([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))*100))
						); 
						END SCOPE; 

						//2.7 c
						SCOPE ([Measures].[Trade Terms - General Terms % GSV]); 
						THIS = ([Measure].[Measure].&[M1_OG0001GSV],[Measures].[Value])/100; 
						END SCOPE; 
                        
                        //2.8 a Business Building - Excl CPP
                        CREATE MEMBER CURRENTCUBE.[Measures].[Business Building - Excl CPP]
                        AS NULL,
                        ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
                        VISIBLE = 1; 


				 
                        //2.8 b
                        SCOPE ([Measure].[Measure].&[MX_BBEXCPP]); 
                        THIS = (
                        SUM({[Measure].[Measure].&[M1_BPDCT1],
                        [Measure].[Measure].&[M1_BSN001],
                        [Measure].[Measure].&[M1_BPLACE],
                        [Measure].[Measure].&[M1_BPROP1],
                        [Measure].[Measure].&[M1_PROMO1]}, [Currency Scaling].[Currency Scaling].[Euro])
                        ); 
                        END SCOPE; 

                        //2.8 c
                        SCOPE ([Measures].[Business Building - Excl CPP]); 
                        THIS = ([Measure].[Measure].&[MX_BBEXCPP],[Measures].[Value]); 
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                        END SCOPE;

                        //2.81 a Business Building - Excl CPP % GSV			
                        CREATE MEMBER CURRENTCUBE.[Measures].[Business Building - Excl CPP % GSV]
                        AS NULL,
                        ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
                        VISIBLE = 1; 
						
                        //2.81 b
                        SCOPE ([Measure].[Measure].&[M1_BBEXBBGSV]); 
                        THIS = (IIF (([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]) = 0
                        OR ISEMPTY(([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))
                        ,NULL
                        ,(( [Measure].[Measure].&[MX_BBEXCPP]
                        /([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))*100))
                        ); 
                        END SCOPE; 
            
                        //2.81 c
                        SCOPE ([Measures].[Business Building - Excl CPP % GSV]); 
                        THIS = ([Measure].[Measure].&[M1_BBEXBBGSV],[Measures].[Value])/100;
                        FORMAT_STRING(THIS) = "#,##0.0%"; 
                        END SCOPE; 

						
						/*
				 
                        //2.8 b
                        SCOPE ([Measure].[Measure].&[MX_BBEXCPP]); 
                        THIS = (
                        SUM({[Measure].[Measure].&[M1_BPDCT1],
                        [Measure].[Measure].&[M1_BSN001],
                        [Measure].[Measure].&[M1_BPLACE],
                        [Measure].[Measure].&[M1_BPROP1],
                        [Measure].[Measure].&[M1_PROMO1]}, [Currency Scaling].[Currency Scaling].[Euro])
                        ); 
                        END SCOPE; 

                        //2.8 c
                        SCOPE ([Measures].[Business Building - Excl CPP]); 
                        THIS = ([Measure].[Measure].&[MX_BBEXCPP],[Measures].[Value]); 
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                        END SCOPE;

                        //2.8 a Business Building - Excl CPP % GSV			
                        CREATE MEMBER CURRENTCUBE.[Measures].[Business Building - Excl CPP % GSV]
                        AS NULL,
                        ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
                        VISIBLE = 1; 
						
                        //2.8 b
                        SCOPE ([Measure].[Measure].&[M1_BBEXBBGSV]); 
                        THIS = (IIF (([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]) = 0
                        OR ISEMPTY(([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))
                        ,NULL
                        ,(( [Measure].[Measure].&[MX_BBEXCPP]
                        /([Measure].[Measure].&[M1_GSV001],[Currency Scaling].[Currency Scaling].[Euro]))*100))
                        ); 
                        END SCOPE; 
            
                        //2.8 c
                        SCOPE ([Measures].[Business Building - Excl CPP % GSV]); 
                        THIS = ([Measure].[Measure].&[M1_BBEXBBGSV],[Measures].[Value])/100; 
                        FORMAT_STRING(THIS) = "#,##0.0%"; 
                        END SCOPE; 
*/

                        // 2.9 a Profit Before Overheads in % TO vs PY
						CREATE MEMBER CURRENTCUBE.[Measures].[PBO % TO vs PY (bps)]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
						VISIBLE = 1;
					
                        //2.9 b
					    SCOPE([Measures].[PBO % TO vs PY (bps)]); 
					    THIS = ROUND((([Measures].[PBO % TO], [Period].[Period].[CY]) - ([Measures].[PBO % TO], [Period].[Period].[PY]))*10000,4); 
					    FORMAT_STRING(THIS) = "#,##0"; 
                        END SCOPE;

                        //2.10 a Trade Terms Other % vs PY (bps)
                        CREATE MEMBER CURRENTCUBE.[Measures].[Trade Terms Other % vs PY (bps)]
                        AS NULL,
                        ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
                        VISIBLE = 1; 
                        
                        //2.10 b
					    SCOPE([Measures].[Trade Terms Other % vs PY (bps)]); 
					    THIS =(IIF (([Measure].[Measure].&[M1_OT0001],[Measures].[Value],[Period].[Period].[PY]) = 0
                        OR ISEMPTY(([Measure].[Measure].&[M1_OT0001],[Measures].[Value],[Period].[Period].[PY]))
                        OR ISEMPTY(([Measure].[Measure].&[M1_OT0001],[Measures].[Value],[Period].[Period].[CY]))
                        ,NULL,
                        ([Measure].[Measure].&[M1_OT0001],[Measures].[Value],[Period].[Period].[vs PY])/([Measure].[Measure].&[M1_OT0001],[Measures].[Value],[Period].[Period].[PY])))*10000; 
					    FORMAT_STRING(THIS) = "#,##0";
                        END SCOPE;
                        
                        //2.11 a Business Building – CPP % vs PY (bps)
                        CREATE MEMBER CURRENTCUBE.[Measures].[Business Building – CPP % vs PY (bps)]
                        AS NULL,
                        ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
                        VISIBLE = 1; 
                        
                        //2.11 b
					    SCOPE([Measures].[Business Building – CPP % vs PY (bps)]); 
					    THIS =(IIF (([Measure].[Measure].&[M1_BP0001],[Measures].[Value],[Period].[Period].[PY]) = 0
                        OR ISEMPTY(([Measure].[Measure].&[M1_BP0001],[Measures].[Value],[Period].[Period].[PY]))
                        OR ISEMPTY(([Measure].[Measure].&[M1_BP0001],[Measures].[Value],[Period].[Period].[CY]))
                        ,NULL,
                        ([Measure].[Measure].&[M1_BP0001],[Measures].[Value],[Period].[Period].[vs PY])/([Measure].[Measure].&[M1_BP0001],[Measures].[Value],[Period].[Period].[PY])))*10000; 
					    FORMAT_STRING(THIS) = "#,##0";
                        END SCOPE;

                        //2.12 a Business Building - excl CPP % vs PY (bps)
                        CREATE MEMBER CURRENTCUBE.[Measures].[Business Building - excl CPP % vs PY (bps)]
                        AS NULL,
                        ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
                        VISIBLE = 1; 
                        
                        //2.12 b
					    SCOPE([Measures].[Business Building - excl CPP % vs PY (bps)]); 
					    THIS =(IIF (([Measure].[Measure].&[MX_BBEXCPP],[Measures].[Value],[Period].[Period].[PY]) = 0
                        OR ISEMPTY(([Measure].[Measure].&[MX_BBEXCPP],[Measures].[Value],[Period].[Period].[PY]))
                        OR ISEMPTY(([Measure].[Measure].&[MX_BBEXCPP],[Measures].[Value],[Period].[Period].[CY]))
                        ,NULL,
                        ([Measure].[Measure].&[MX_BBEXCPP],[Measures].[Value],[Period].[Period].[vs PY])/([Measure].[Measure].&[MX_BBEXCPP],[Measures].[Value],[Period].[Period].[PY])))*10000; 
					    FORMAT_STRING(THIS) = "#,##0";
                        END SCOPE;
                        
                        //2.13 a Efficient Operations % vs PY (bps)
                        CREATE MEMBER CURRENTCUBE.[Measures].[Efficient Operations % vs PY (bps)]
                        AS NULL,
                        ASSOCIATED_MEASURE_GROUP = 'PL Measures', DISPLAY_FOLDER = 'Popular Metrics',
                        VISIBLE = 1; 
                        
                        //2.13 b
					    SCOPE([Measures].[Efficient Operations % vs PY (bps)]); 
					    THIS =(IIF (([Measure].[Measure].&[M1_EOT001],[Measures].[Value],[Period].[Period].[PY]) = 0
                        OR ISEMPTY(([Measure].[Measure].&[M1_EOT001],[Measures].[Value],[Period].[Period].[PY]))
                        OR ISEMPTY(([Measure].[Measure].&[M1_EOT001],[Measures].[Value],[Period].[Period].[CY]))
                        ,NULL,
                        ([Measure].[Measure].&[M1_EOT001],[Measures].[Value],[Period].[Period].[vs PY])/([Measure].[Measure].&[M1_EOT001],[Measures].[Value],[Period].[Period].[PY])))*10000; 
					    FORMAT_STRING(THIS) = "#,##0";
                        END SCOPE;
						
						
						
                    -- Forecast Metrics - Use for Tableau Reporting

                    // 1.1  USG % Forecast
                    CREATE MEMBER CURRENTCUBE.[Measures].[USG % Forecast]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 

                    // 1.11  USG % Forecast abs
                    CREATE MEMBER CURRENTCUBE.[Measures].[USG FC]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 

                    // 1.12  USG % PY
                    CREATE MEMBER CURRENTCUBE.[Measures].[PY USG (%) FC]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 

                    // 1.13  USG % vs PFC
                    CREATE MEMBER CURRENTCUBE.[Measures].[USG (%) vs PFC (bps) FC]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 

                    // 1.2  UVG % Forecast
                    CREATE MEMBER CURRENTCUBE.[Measures].[UVG % Forecast]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 

                    // 1.21  UVG % Forecast
                    CREATE MEMBER CURRENTCUBE.[Measures].[UVG FC]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 

                    // 1.22  UVG % PY
                    CREATE MEMBER CURRENTCUBE.[Measures].[PY UVG (%) FC]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 

                    // 1.23  UVG % vs PFC
                    CREATE MEMBER CURRENTCUBE.[Measures].[UVG (%) vs PFC (bps) FC]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 

                    // 1.3  UPG % Forecast
                    CREATE MEMBER CURRENTCUBE.[Measures].[UPG % Forecast]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 

                    // 1.31  UPG % Forecast abs
                    CREATE MEMBER CURRENTCUBE.[Measures].[UPG FC]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 

                    // 1.32  UPG % PY
                    CREATE MEMBER CURRENTCUBE.[Measures].[PY UPG (%) FC]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 

                    // 1.33  UPG % vs PFC
                    CREATE MEMBER CURRENTCUBE.[Measures].[UPG (%) vs PFC (bps) FC]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 

                    // 1.4  Turnover Forecast
                    CREATE MEMBER CURRENTCUBE.[Turnover Forecast]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 

                    // 1.41  Turnover Forecast PY
                    CREATE MEMBER CURRENTCUBE.[Measures].[PY Turnover FC]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 

                    // 1.5  Gross Margin % Forecast
                    CREATE MEMBER CURRENTCUBE.[Measures].[Gross Margin % Forecast]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 

                    // 1.51  Gross Margin % Forecast abs
                    CREATE MEMBER CURRENTCUBE.[Measures].[Gross Margin FC]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 

                    // 1.52  GM % PY
                    CREATE MEMBER CURRENTCUBE.[Measures].[PY GM % FC]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 
					
 				    // 1.6 Gross Profit Forecast
                    CREATE MEMBER CURRENTCUBE.[Measures].[Gross Profit Forecast]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 

					// 1.7   Turnover vs PY Forecast
                    CREATE MEMBER CURRENTCUBE.[Measures].[Turnover vs PY Forecast]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 

                    // 1.71   TTS % TO Forecast
                    CREATE MEMBER CURRENTCUBE.[Measures].[TTS % TO Forecast]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 

                    // 1.72   TTS % TO Forecast
                    CREATE MEMBER CURRENTCUBE.[Measures].[TTS % GSV Forecast]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 

					// 1.8   BMI Foreacst
                    CREATE MEMBER CURRENTCUBE.[Measures].[BMI Forecast]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 
					
                    // 1.9   BMI % TO Forecast
                    CREATE MEMBER CURRENTCUBE.[Measures].[BMI % TO Forecast]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 

                    // 1.91   BMI % TO Forecast abs
                    CREATE MEMBER CURRENTCUBE.[Measures].[BMI TO FC]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 
					
                    // 1.20   PBO  - Profit Before Overheads Forecast
                    CREATE MEMBER CURRENTCUBE.[Measures].[PBO Forecast]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 

                    // 1.21   PBO % TO Forecast
                    CREATE MEMBER CURRENTCUBE.[Measures].[PBO % TO Forecast]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 

                    // 1.211  PBO % PY
                    CREATE MEMBER CURRENTCUBE.[Measures].[PY PBO % FC]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 

                    // 1.212 Profit Before Overheads in % TO vs PY FORECAST
						CREATE MEMBER CURRENTCUBE.[Measures].[PBO % TO vs PY Forecast (bps)]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
						VISIBLE = 1;
					
                        //1.212 Profit Before Overheads in % TO vs PY FORECAST
					    SCOPE([Measures].[PBO % TO vs PY Forecast (bps)]); 
					    THIS = ROUND((([Measures].[PBO % TO Forecast], [Period].[Period].[CY]) - ([PBO % TO Forecast], [Period].[Period].[PY]))*10000,4); 
					    FORMAT_STRING(THIS) = "#,##0"; 
                        END SCOPE;

                    // 1.213   PBO TO Forecast
                    CREATE MEMBER CURRENTCUBE.[Measures].[PBO TO Forecast]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 
                                                                           
                    // 1.213   PBO TO Forecast
                    SCOPE ([Measures].[PBO TO Forecast]); 
                    THIS = ([Measure].[Measure].&[T4_PBO001TO],[Measures].[Forecast Value]); 
                    FORMAT_STRING(THIS) = "#,##0.0"; 
                    END SCOPE; 

                    // 1.22   Gross Sales Value (GSV) Forecast
                    CREATE MEMBER CURRENTCUBE.[Measures].[Gross Sales Value (GSV) Forecast]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 

                    // 1.23   Business Building & Other Terms Forecast
                    CREATE MEMBER CURRENTCUBE.[Measures].[Business Building & Other Terms Forecast]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 

                    // 1.24   Core Operating Profit Forecast
                    CREATE MEMBER CURRENTCUBE.[Measures].[Core Operating Profit Forecast]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 

                    // 1.25   Core Operating Profit % TO Forecast
                    CREATE MEMBER CURRENTCUBE.[Measures].[Core Operating Profit % TO Forecast]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 

                    // 1.26   Gross Margin Growth % Forecast
                    CREATE MEMBER CURRENTCUBE.[Measures].[Gross Margin Growth % Forecast]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 

                    //1.27 Sales Volume Tons
					CREATE MEMBER CURRENTCUBE.[Measures].[Sales Volume - Tons Forecast]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1; 

                    //1.28 Advertising
					CREATE MEMBER CURRENTCUBE.[Measures].[Total Advertising]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1; 

                    //1.28 a Advertising % TO - (Adv % TO)
					CREATE MEMBER CURRENTCUBE.[Measures].[Adv % TO]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1;   

                     //1.28 b Advertising % TO vs PY (bps) - (Adv % TO vs PY (bps))
					CREATE MEMBER CURRENTCUBE.[Measures].[Adv % TO vs PY (bps)]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1;      

                    //1.28 c Advertising % TO vs PFC (bps) - (Adv % TO vs PFC (bps))
					CREATE MEMBER CURRENTCUBE.[Measures].[Adv % TO vs PFC (bps)]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1;   

                    //1.29 Promotions
					CREATE MEMBER CURRENTCUBE.[Measures].[Total Promotion]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1; 

                    //1.29 a Promotional expense % TO (PE % TO)
					CREATE MEMBER CURRENTCUBE.[Measures].[PE % TO]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1;

                    //1.29 b Promotional expense % TO vs PY (bps) (PE % TO vs PY (bps))
					CREATE MEMBER CURRENTCUBE.[Measures].[PE % TO vs PY (bps)]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1;

                     //1.29 c Promotional expense % TO vs PFC (bps) (PE % TO vs PFC (bps))
					CREATE MEMBER CURRENTCUBE.[Measures].[PE % TO vs PFC (bps)]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1;

                    //1.30 Point of Sales investment
					CREATE MEMBER CURRENTCUBE.[Measures].[Point of Sale Investment]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1; 

                    //1.31 Underlying Operating Profit  bOTI
					CREATE MEMBER CURRENTCUBE.[Measures].[Underlying Operating Margin bOTI]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1; 

                    //1.32 Local Overheads bef.Restr. bef. OTI 
					CREATE MEMBER CURRENTCUBE.[Measures].[Local Overheads bRestr bOTI Forecast]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1; 

                    //1.33 Total Overheads 
					CREATE MEMBER CURRENTCUBE.[Measures].[Total Overheads Forecast]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1; 

                    //1.34 Total Overheads % TO Forecast
					CREATE MEMBER CURRENTCUBE.[Measures].[Total Overheads % TO Forecast]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1; 
					
					//1.34a Overheads % TO vs PY Forecast (bps)
					CREATE MEMBER CURRENTCUBE.[Measures].[Overheads % TO vs PY Forecast (bps)]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1;

                    //1.34b Overheads % TO vs PFC Forecast (bps)
					CREATE MEMBER CURRENTCUBE.[Measures].[Overheads % TO vs PFC Forecast (bps)]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1;

                    //1.35 UOP
					CREATE MEMBER CURRENTCUBE.[Measures].[Underlying Operating Profit Forecast]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1; 

                    //1.35.5 UOP bOTI
					CREATE MEMBER CURRENTCUBE.[Measures].[Underlying Operating Profit bOTI Forecast]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1; 

                    //1.36 UOM %
					CREATE MEMBER CURRENTCUBE.[Measures].[UOM % Forecast]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1; 

                    //1.361 UOM % abs
					CREATE MEMBER CURRENTCUBE.[Measures].[UOM FC]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1; 
					
					//1.362a UOM % Turnover Forecast (UOM % TO Forecast)
					CREATE MEMBER CURRENTCUBE.[Measures].[UOM % TO FC]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1;

                          

                    //1.37 OTI
					CREATE MEMBER CURRENTCUBE.[Measures].[OTI Forecast]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1; 

                    //1.38 Sales Volume Litons
					CREATE MEMBER CURRENTCUBE.[Measures].[Sales Volume - Litons Forecast]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1; 
					
					//1.39 UOM % vs PY (bps)
					CREATE MEMBER CURRENTCUBE.[Measures].[UOM % vs PY (bps)]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1; 
					
					//1.40 UOM % vs PFC (bps)
					CREATE MEMBER CURRENTCUBE.[Measures].[UOM % vs PFC (bps)]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1; 	
					
					//1.41 TTS % vs PY (bps)
					CREATE MEMBER CURRENTCUBE.[Measures].[TTS % vs PY (bps)]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1; 						
					
					//1.42 TTS % vs PFC (bps)
					CREATE MEMBER CURRENTCUBE.[Measures].[TTS % vs PFC (bps)]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1; 	
					
					//1.43 BMI % vs PY (bps)
					CREATE MEMBER CURRENTCUBE.[Measures].[BMI % vs PY (bps)]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1; 						
					
					//1.44 BMI % vs PFC (bps)
					CREATE MEMBER CURRENTCUBE.[Measures].[BMI % vs PFC (bps)]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1; 	
					
					//1.45 Turnover vs PFC
					CREATE MEMBER CURRENTCUBE.[Measures].[Turnover vs PFC]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1; 
					
					//1.46 GM % vs PY (bps)
					CREATE MEMBER CURRENTCUBE.[Measures].[GM % vs PY (bps)]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1; 						
					
					//1.47 GM % vs PFC (bps)
					CREATE MEMBER CURRENTCUBE.[Measures].[GM % vs PFC (bps)]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1; 
					
					//1.48 PBO % vs PFC (bps)
					CREATE MEMBER CURRENTCUBE.[Measures].[PBO % vs PFC (bps)]
					AS NULL,
					ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
					VISIBLE = 1; 

                    //1.49 Overheads TO Forecast
                    CREATE MEMBER CURRENTCUBE.[Measures].[Overheads TO Forecast]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1; 
					
					//1.50 Total Supply Chain costs per ton (SC Costs per Tons Forecast)
                    CREATE MEMBER CURRENTCUBE.[Measures].[SC Costs per Tons Forecast]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1;
					
					//1.51 Total Supply Chain costs in % TO
                    CREATE MEMBER CURRENTCUBE.[Measures].[SC Costs in % TO Forecast]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Metrics',
                    VISIBLE = 1;

                    -- Definitions
                    // 1.1  USG % Forecast
                    SCOPE ([Measures].[USG % Forecast]); 
                    THIS = ROUND(([Measure].[Measure].&[M1_USG],[Measures].[Forecast Value])/100,6); 
                    FORMAT_STRING(THIS) = "#,##0.0%"; 
                    END SCOPE; 

                    // 1.11  USG % Forecast abs
                    SCOPE ([Measures].[USG FC]); 
                    THIS = ROUND(([Measure].[Measure].&[M1_USG],[Measures].[Forecast Value]),4); 
                    FORMAT_STRING(THIS) = "#,##0.0"; 
                    END SCOPE; 

                    // 1.12  USG % PY
                    SCOPE ([Measures].[PY USG (%) FC]); 
                    THIS = ROUND(([Period].[Period].[PY],[Measure].[Measure].&[M1_USG],[Measures].[Forecast Value]),4); 
                    FORMAT_STRING(THIS) = "#,##0.0"; 
                    END SCOPE; 

                    // 1.13  USG % vs PFC
                    SCOPE ([Measures].[USG (%) vs PFC (bps) FC]);
                    THIS = ROUND(([Period].[Period].[vs PFC],[Measure].[Measure].&[M1_USG],[Measures].[Forecast Value]),4); 
                    FORMAT_STRING(THIS) = "#,##0"; 
                    END SCOPE; 

                    // 1.2  UVG % Forecast
                    SCOPE ([Measures].[UVG % Forecast]); 
                    THIS = ROUND(([Measure].[Measure].&[M1_UVG],[Measures].[Forecast Value])/100,6); 
                    FORMAT_STRING(THIS) = "#,##0.0%"; 
                    END SCOPE; 

                    // 1.21  UVG % Forecast abs
                    SCOPE ([Measures].[UVG FC]); 
                    THIS = ROUND(([Measure].[Measure].&[M1_UVG],[Measures].[Forecast Value]),4); 
                    FORMAT_STRING(THIS) = "#,##0.0"; 
                    END SCOPE; 

                    // 1.22  UVG % PY
                    SCOPE ([Measures].[PY UVG (%) FC]); 
                    THIS = ROUND(([Period].[Period].[PY],[Measure].[Measure].&[M1_UVG],[Measures].[Forecast Value]),4); 
                    FORMAT_STRING(THIS) = "#,##0.0"; 
                    END SCOPE; 

                    // 1.23  UVG % vs PFC
                    SCOPE ([Measures].[UVG (%) vs PFC (bps) FC]);
                    THIS = ROUND(([Period].[Period].[vs PFC],[Measure].[Measure].&[M1_UVG],[Measures].[Forecast Value]),4); 
                    FORMAT_STRING(THIS) = "#,##0"; 
                    END SCOPE; 

                    // 1.3  UPG % Forecast
                    SCOPE ([Measures].[UPG % Forecast]); 
                    THIS = ROUND(([Measure].[Measure].&[M1_UPG],[Measures].[Forecast Value])/100,6); 
                    FORMAT_STRING(THIS) = "#,##0.0%"; 
                    END SCOPE; 

                    // 1.31  UPG % Forecast abs
                    SCOPE ([Measures].[UPG FC]); 
                    THIS = ROUND(([Measure].[Measure].&[M1_UPG],[Measures].[Forecast Value]),4); 
                    FORMAT_STRING(THIS) = "#,##0.0"; 
                    END SCOPE; 

                    // 1.32  UPG % PY
                    SCOPE ([Measures].[PY UPG (%) FC]); 
                    THIS = ROUND(([Period].[Period].[PY],[Measure].[Measure].&[M1_UPG],[Measures].[Forecast Value]),4); 
                    FORMAT_STRING(THIS) = "#,##0.0"; 
                    END SCOPE; 

                    // 1.33  UPG % vs PFC
                    SCOPE ([Measures].[UPG (%) vs PFC (bps) FC]);
                    THIS = ROUND(([Period].[Period].[vs PFC],[Measure].[Measure].&[M1_UPG],[Measures].[Forecast Value]),4); 
                    FORMAT_STRING(THIS) = "#,##0"; 
                    END SCOPE; 

                    // 1.4  Turnover Forecast
                    SCOPE ([Measures].[Turnover Forecast]); 
                    THIS = ROUND(([Measure].[Measure].&[M1_TTO001],[Measures].[Forecast Value]),4);
                    FORMAT_STRING(THIS) = "#,##0.0";  
                    END SCOPE; 

                    // 1.41  Turnover Forecast PY
                    SCOPE ([Measures].[PY Turnover FC]); 
                    THIS = ([Period].[Period].[PY], [Measure].[Measure].&[M1_TTO001],[Measures].[Forecast Value]); 
                    END SCOPE; 

                    // 1.5  Gross Margin % Forecast
                    SCOPE ([Measures].[Gross Margin % Forecast]); 
                    THIS = ROUND(([Measure].[Measure].&[M1_GM],[Measures].[Forecast Value])/100,6); 
                    FORMAT_STRING(THIS) = "#,##0.0%"; 
                    END SCOPE; 

                    // 1.51  Gross Margin % Forecast abs
                    SCOPE ([Measures].[Gross Margin FC]); 
                    THIS = ROUND(([Measure].[Measure].&[M1_GM],[Measures].[Forecast Value]),4); 
                    FORMAT_STRING(THIS) = "#,##0.0"; 
                    END SCOPE; 

                    // 1.52  GM % PY
                    SCOPE ([Measures].[PY GM % FC]); 
                    THIS = ROUND(([Period].[Period].[PY], [Measure].[Measure].&[M1_GM],[Measures].[Forecast Value])/100,6); 
                    FORMAT_STRING(THIS) = "#,##0.0%"; 
                    END SCOPE; 

 				    // 1.6 Gross Profit Forecast
                    SCOPE ([Measures].[Gross Profit Forecast]); 
                    THIS  = ROUND(([Measure].[Measure].&[T3_GP0001],[Measures].[Forecast Value]),4);
                    FORMAT_STRING(THIS) = "#,##0.0";  
                    END SCOPE; 
					
					// 1.7   Turnover vs PY Forecast

					//All 
					SCOPE ([Measures].[Turnover vs PY Forecast]); 
                    THIS = ROUND(([Measure].[Measure].&[M1_TTO001],[Measures].[Forecast Value],[Period].[Period].[vs PY]),4); 
                    FORMAT_STRING(THIS) = "#,##0.0";  
                    END SCOPE; 								
                                      
                    //([Turnover: current period]-[Turnover: prior period])
                    SCOPE ([Measures].[Turnover vs PY Forecast],[Date Comparison].[Date Comparison].[Current Period]); 
                    THIS = ROUND(([Measure].[Measure].&[M1_TTO001],[Measures].[Forecast Value],
                    [Date Comparison].[Date Comparison].[Current Period])-
                    ([Measure].[Measure].&[M1_TTO001],[Measures].[Forecast Value],
                    [Date Comparison].[Date Comparison].[PY Period]),4); 
                    FORMAT_STRING(THIS) = "#,##0.0";  
                    END SCOPE; 

                    //([Turnover: current QTD]-[Turnover: prior QTD])
                    SCOPE ([Measures].[Turnover vs PY Forecast],[Date Comparison].[Date Comparison].[QTD]); 
                    THIS = ROUND(([Measure].[Measure].&[M1_TTO001],[Measures].[Forecast Value],[Date Comparison].[Date Comparison].[QTD])-
                    ([Measure].[Measure].&[M1_TTO001],[Measures].[Forecast Value],[Date Comparison].[Date Comparison].[PY QTD]),4); 
                    FORMAT_STRING(THIS) = "#,##0.0";  
                    END SCOPE; 

                    //([Turnover: current YTD]-[Turnover: prior YTD])
                    SCOPE ([Measures].[Turnover vs PY Forecast],[Date Comparison].[Date Comparison].[YTD]); 
                    THIS = ROUND(([Measure].[Measure].&[M1_TTO001],[Measures].[Forecast Value],[Date Comparison].[Date Comparison].[YTD])-
                    ([Measure].[Measure].&[M1_TTO001],[Measures].[Forecast Value],[Date Comparison].[Date Comparison].[PY YTD]),4); 
                    FORMAT_STRING(THIS) = "#,##0.0";  
                    END SCOPE; 

                    //([Turnover: current MAT]-[Turnover: prior MAT])
                    SCOPE ([Measures].[Turnover vs PY Forecast],[Date Comparison].[Date Comparison].[MAT]); 
                    THIS = ROUND(([Measure].[Measure].&[M1_TTO001],[Measures].[Forecast Value],[Date Comparison].[Date Comparison].[MAT])-
                    ([Measure].[Measure].&[M1_TTO001],[Measures].[Forecast Value],[Date Comparison].[Date Comparison].[PY MAT]),4); 
                    FORMAT_STRING(THIS) = "#,##0.0";  
                    END SCOPE; 

                    //([Turnover: current Full Year]-[Turnover: prior Full Year])
                    SCOPE ([Measures].[Turnover vs PY Forecast],[Date Comparison].[Date Comparison].[Full Year]); 
                    THIS = ROUND(([Measure].[Measure].&[M1_TTO001],[Measures].[Forecast Value],[Date Comparison].[Date Comparison].[Full Year])-
                    ([Measure].[Measure].&[M1_TTO001],[Measures].[Forecast Value],[Date Comparison].[Date Comparison].[PY Full Year]),4); 
                    FORMAT_STRING(THIS) = "#,##0.0";  
                    END SCOPE; 

                    // 1.71   TTS % TO Forecast
                    SCOPE ([Measures].[TTS % TO Forecast]); 
                    THIS = ([Measure].[Measure].&[M1_TTO],[Measures].[Forecast Value])/100; 
                    FORMAT_STRING(THIS) = "#,##0.0%"; 
                    END SCOPE; 

                    // 1.72   TTS % GSV Forecast
                    SCOPE ([Measures].[TTS % GSV Forecast]); 
                    THIS = ([Measure].[Measure].&[M1_TTGSV],[Measures].[Forecast Value])/100; 
                    FORMAT_STRING(THIS) = "#,##0.0%"; 
                    END SCOPE; 

					// 1.8   BMI Foreacst
                    SCOPE ([Measures].[BMI Forecast]); 
                    THIS  = ([Measure].[Measure].&[M4_MDC001],[Measures].[Forecast Value]); 
                    END SCOPE; 
					
                    // 1.9   BMI % TO Forecast
                    SCOPE ([Measures].[BMI % TO Forecast]); 
                    THIS = ([Measure].[Measure].&[PTO_BMI],[Measures].[Forecast Value])/100; 
                    FORMAT_STRING(THIS) = "#,##0.0%"; 
                    END SCOPE; 

                    // 1.91   BMI % TO Forecast abs
                    SCOPE ([Measures].[BMI TO FC]); 
                    THIS = ([Measure].[Measure].&[PTO_BMI],[Measures].[Forecast Value]); 
                    FORMAT_STRING(THIS) = "#,##0.0"; 
                    END SCOPE; 
					
                    // 1.20   PBO  - Profit Before Overheads Forecast
                    SCOPE([Measures].[PBO Forecast]); 
                    THIS = ([Measure].[Measure].&[T4_PBO001],[Measures].[Forecast Value]); 
                    END SCOPE; 

                    // 1.21   PBO % TO Forecast
                    SCOPE ([Measures].[PBO % TO Forecast]); 
                    THIS = ([Measure].[Measure].&[T4_PBO001TO],[Measures].[Forecast Value])/100; 
                    FORMAT_STRING(THIS) = "#,##0.0%"; 
                    END SCOPE; 

                    // 1.211   PY PBO % TO Forecast
                    SCOPE ([Measures].[PY PBO % FC]); 
                    THIS = ROUND(([Period].[Period].[PY],[Measure].[Measure].&[T4_PBO001TO],[Measures].[Forecast Value])/100,6); 
                    FORMAT_STRING(THIS) = "#,##0.0%"; 
                    END SCOPE; 

                    // 1.22   Gross Sales Value (GSV) Forecast
                    SCOPE ([Measures].[Gross Sales Value (GSV) Forecast]); 
                    THIS = ([Measure].[Measure].&[M1_GSV001],[Measures].[Forecast Value]); 
                    END SCOPE; 

                    // 1.23   Business Building & Other Terms Forecast
                    SCOPE ([Measures].[Business Building & Other Terms Forecast]); 
                    THIS = ([Measure].[Measure].&[PM_BBOT],[Measures].[Forecast Value]); 
                    END SCOPE; 

                    // 1.24   Core Operating Profit Forecast
                    SCOPE ([Measures].[Core Operating Profit Forecast]); 
                    THIS = ([Measure].[Measure].&[T_TRXR0C],[Measures].[Forecast Value]); 
                    END SCOPE; 

                    // 1.25   Core Operating Profit % TO Forecast
                    SCOPE ([Measures].[Core Operating Profit % TO Forecast]); 
                    THIS = ([Measure].[Measure].&[PTO_COP],[Measures].[Forecast Value])/100; 
                    FORMAT_STRING(THIS) = "#,##0.0%"; 
                    END SCOPE; 

					// 1.26  Gross Margin Growth % Forecast
                    SCOPE ([Measures].[Gross Margin Growth % Forecast]); 
                    THIS = ROUND(([Measure].[Measure].&[YOY_GM],[Measures].[Forecast Value])/100,6); 
                    FORMAT_STRING(THIS) = "#,##0.0%"; 
                    END SCOPE; 

                    //1.27 Sales Volume Tons
					SCOPE([Measures].[Sales Volume - Tons Forecast]); 
                    THIS = ([Measure].[Measure].&[M1_LTK001],[Measures].[Forecast Value]); 
                    END SCOPE; 

                    //1.28 Advertising
					SCOPE([Measures].[Total Advertising]); 
					THIS = ([Measure].[Measure].&[ADP0020],[Measures].[Forecast Value]); 
                    END SCOPE; 

                    //1.28 a Advertising % TO (Adv % TO)
					SCOPE([Measures].[Adv % TO]); 
					THIS = (IIF(ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Measures].[Forecast Value])) OR ([Measure].[Measure].&[M1_TTO001],[Measures].[Forecast Value]) = 0
                            , IIF(ISEMPTY(([Measure].[Measure].&[ADP0020],[Measures].[Forecast Value])),NULL,0)
                            , ([Measure].[Measure].&[ADP0020],[Measures].[Forecast Value])/([Measure].[Measure].&[M1_TTO001],[Measures].[Forecast Value]))); 
                    FORMAT_STRING(THIS) = "#,##0.0%"; 
                    END SCOPE; 

                    //1.28 b Advertising % TO vs PY (bps) - (Adv % TO vs PY (bps))
					SCOPE([Measures].[Adv % TO vs PY (bps)]); 
					THIS = (([Measures].[Adv % TO],[Period].[Period].[CY]) - ([Measures].[Adv % TO],[Period].[Period].[PY])) * 100;
                    FORMAT_STRING(THIS) = "#,##0.0"; 
                    END SCOPE;

                     //1.28 c Advertising % TO vs PFC (bps) - (Adv % TO vs PFC (bps))
					SCOPE([Measures].[Adv % TO vs PFC (bps)]); 
					THIS = (([Measures].[Adv % TO],[Period].[Period].[CY]) - ([Adv % TO],[Period].[Period].[PFC])) * 100;
                    FORMAT_STRING(THIS) = "#,##0.0"; 
                    END SCOPE;

                    //1.29 Promotions
					SCOPE([Measures].[Total Promotion]); 
					THIS = ([Measure].[Measure].&[ADP0390],[Measures].[Forecast Value]); 
                    END SCOPE; 

                    //1.29 a Promotional expense % TO (PE % TO)
					SCOPE([Measures].[PE % TO]); 
					THIS = (IIF(ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Measures].[Forecast Value])) OR ([Measure].[Measure].&[M1_TTO001],[Measures].[Forecast Value]) = 0
                            , IIF(ISEMPTY(([Measures].[Total Promotion],[Measures].[Forecast Value])),NULL,0)
                            , ([Measures].[Total Promotion])/([Measure].[Measure].&[M1_TTO001],[Measures].[Forecast Value]))); 
                    FORMAT_STRING(THIS) = "#,##0.0%"; 
                    END SCOPE;

                    //1.29 b Promotional expense % TO vs PY (bps) (PE % TO vs PY (bps))
					SCOPE([Measures].[PE % TO vs PY (bps)]); 
					THIS = (([Measures].[PE % TO],[Period].[Period].[CY]) - ([Measures].[PE % TO],[Period].[Period].[PY])) * 100;
                    FORMAT_STRING(THIS) = "#,##0.0"; 
                    END SCOPE;

                     //1.29 c Promotional expense % TO vs PFC (bps) (PE % TO vs PFC (bps))
					SCOPE([Measures].[PE % TO vs PFC (bps)]); 
					THIS = (([Measures].[PE % TO],[Period].[Period].[CY]) - ([Measures].[PE % TO],[Period].[Period].[PFC])) * 100;
                    FORMAT_STRING(THIS) = "#,##0.0"; 
                    END SCOPE;

                    //1.30 Point of Sales investment
					SCOPE([Measures].[Point of Sale Investment]); 
					THIS = ([Measure].[Measure].&[ADP0580],[Measures].[Forecast Value]); 
                    END SCOPE; 

                    //1.31 Underlying Operating Margin bOTI
					SCOPE([Measures].[Underlying Operating Margin bOTI]); 
                    THIS = (IIF (([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro],[Measures].[Forecast Value]) = 0
					        OR ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro],[Measures].[Forecast Value]))
						,NULL
						,((([Measure].[Measure].&[OVH0211],[Currency Scaling].[Currency Scaling].[Euro],[Measures].[Forecast Value])
						/([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro],[Measures].[Forecast Value]))))
						); 

                    END SCOPE; 

                    //1.32 Local Overheads bef.Restr. bef. OTI 
					SCOPE([Measures].[Local Overheads bRestr bOTI Forecast]); 
                    THIS = ([Measure].[Measure].&[OVH0060],[Measures].[Forecast Value]); 
                    END SCOPE; 

                    //1.33 Total Overheads 
					SCOPE([Measures].[Total Overheads Forecast]); 
                    THIS = ([Measure].[Measure].&[M4_INDR0C],[Measures].[Forecast Value]); 
                    END SCOPE; 

                    //1.34 Total Overheads % TO Forecast 
					SCOPE([Measures].[Total Overheads % TO Forecast]); 
                    THIS = ([Measure].[Measure].&[PTO_OVH],[Measures].[Forecast Value])/100; 
                    FORMAT_STRING(THIS) = "#,##0.0%";  
                    END SCOPE;

					//1.34a Overheads % TO vs PY Forecast (bps)
					SCOPE([Measures].[Overheads % TO vs PY Forecast (bps)]); 
					THIS = (([Measures].[Total Overheads % TO Forecast], [Period].[Period].[CY]) - ([Measures].[Total Overheads % TO Forecast], [Period].[Period].[PY]))*10000; 
					FORMAT_STRING(THIS) = "#,##0"; 
					END SCOPE;

                    //1.34a Overheads % TO vs PFC Forecast (bps)
					SCOPE([Measures].[Overheads % TO vs PFC Forecast (bps)]);
                    THIS = (([Measures].[Total Overheads % TO Forecast], [Period].[Period].[CY]) - ([Measures].[Total Overheads % TO Forecast], [Period].[Period].[PFC]))*10000; 
					FORMAT_STRING(THIS) = "#,##0"; 
					END SCOPE;

                    //1.35 UOP
					SCOPE([Measures].[Underlying Operating Profit Forecast]); 
					THIS = ([Measure].[Measure].&[OVH0212],[Measures].[Forecast Value]); 
                    END SCOPE; 

                    //1.35.5 UOP bOTI
					SCOPE([Measures].[Underlying Operating Profit bOTI Forecast]); 
					THIS = ([Measure].[Measure].&[OVH0211],[Measures].[Forecast Value]); 
                    END SCOPE; 

                    //1.36 UOM %
					SCOPE([Measures].[UOM % Forecast]); 
					THIS = (IIF (([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro],[Measures].[Forecast Value]) = 0
					OR ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro],[Measures].[Forecast Value]))
						,NULL
						,((([Measure].[Measure].&[OVH0212],[Currency Scaling].[Currency Scaling].[Euro],[Measures].[Forecast Value])
						/([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro],[Measures].[Forecast Value]))))
						); 
                    FORMAT_STRING(THIS) = "#,##0.0%"; 
					END SCOPE; 

                    //1.361 UOM % abs
					SCOPE([Measures].[UOM FC]); 
					THIS = (IIF (([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro],[Measures].[Forecast Value]) = 0
					OR ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro],[Measures].[Forecast Value]))
						,NULL
						,((([Measure].[Measure].&[OVH0212],[Currency Scaling].[Currency Scaling].[Euro],[Measures].[Forecast Value])
						/([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro],[Measures].[Forecast Value]))*100))
						); 
                    FORMAT_STRING(THIS) = "#,##0.0"; 
					END SCOPE; 
					
					//1.361a UOM % TO FC (UOM % Turnover Forecast)
					SCOPE([Measures].[UOM % TO FC]); 
					THIS = (IIF (([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro],[Measures].[Forecast Value]) = 0
					OR ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro],[Measures].[Forecast Value]))
					,NULL
					,((([Measure].[Measure].&[OVH0212],[Currency Scaling].[Currency Scaling].[Euro],[Measures].[Forecast Value])
					/([Measure].[Measure].&[M1_TTO001],[Currency Scaling].[Currency Scaling].[Euro],[Measures].[Forecast Value]))))
					); 
					FORMAT_STRING(THIS) = "#,##0.0%";
					END SCOPE;

                   

                    //1.37 OTI
					SCOPE([Measures].[OTI Forecast]); 
					THIS = ([Measure].[Measure].&[OVH0150],[Measures].[Forecast Value]); 
					END SCOPE; 

                    //1.38 Sales Volume Litons
					SCOPE([Measures].[Sales Volume - Litons Forecast]); 
                    THIS = ([Measure].[Measure].&[M1_LT0001],[Measures].[Forecast Value]); 
                    END SCOPE; 
					
					//1.39 UOM % vs PY (bps)
					SCOPE([Measures].[UOM % vs PY (bps)]); 
                    THIS =  ROUND(([UOM % Forecast], [Period].[Period].[vs PY]) * 10000,4); 
					FORMAT_STRING(THIS) = "#,##0"; 
                    END SCOPE; 

					//1.40 UOM % vs PFC
					SCOPE([Measures].[UOM % vs PFC (bps)]); 
                    THIS = ROUND(([UOM % Forecast], [Period].[Period].[vs PFC]) * 10000,4); 
					FORMAT_STRING(THIS) = "#,##0"; 
                    END SCOPE; 	

					//1.41 TTS % vs PY (bps)
					SCOPE([Measures].[TTS % vs PY (bps)]); 
                    THIS = ([Measure].[Measure].&[M1_TTGSV], [Measures].[Forecast Value], [Period].[Period].[vs PY]) * 100; 
					FORMAT_STRING(THIS) = "#,##0"; 	
                    END SCOPE; 									
					
					//1.42 TTS % vs PFC (bps)
					SCOPE([Measures].[TTS % vs PFC (bps)]); 
                    THIS = ([Measure].[Measure].&[M1_TTGSV], [Measures].[Forecast Value], [Period].[Period].[vs PFC]) * 100; 
					FORMAT_STRING(THIS) = "#,##0"; 
                    END SCOPE; 	
					
					//1.43 BMI % vs PY (bps)
					SCOPE([Measures].[BMI % vs PY (bps)]); 
                    THIS = ROUND((([Measures].[BMI % TO Forecast], [Period].[Period].[CY])- ([Measures].[BMI % TO Forecast], [Period].[Period].[PY])) * 10000,4);
					FORMAT_STRING(THIS) = "#,##0"; 
                    END SCOPE; 	
					
					//1.44 BMI % vs PFC (bps)
					SCOPE([Measures].[BMI % vs PFC (bps)]); 
                    THIS = ROUND(([Measures].[BMI % TO Forecast], [Period].[Period].[vs PFC]) * 10000,4); 
					FORMAT_STRING(THIS) = "#,##0"; 
                    END SCOPE; 	
					
					//1.45 Turnover vs PFC
					SCOPE([Measures].[Turnover vs PFC]); 
                    THIS = ROUND(([Measure].[Measure].&[M1_TTO001], [Measures].[Forecast Value], [Period].[Period].[vs PFC]),4); 
					FORMAT_STRING(THIS) = "#,##0.0"; 
                    END SCOPE; 
									
					//1.46 GM % vs PY (bps)										
					SCOPE([Measures].[GM % vs PY (bps)]); 
                    THIS = ROUND((([Measure].[Measure].&[M1_GM], [Measures].[Forecast Value], [Period].[Period].[CY]) - ([Measure].[Measure].&[M1_GM], [Measures].[Forecast Value], [Period].[Period].[PY]) ) * 100,4); 
					FORMAT_STRING(THIS) = "#,##0"; 
                    END SCOPE;  	
					
					//1.47 GM % vs PFC (bps)
					SCOPE([Measures].[GM % vs PFC (bps)]); 
                    THIS = ROUND(([Measure].[Measure].&[M1_GM], [Measures].[Forecast Value], [Period].[Period].[vs PFC]) * 100,4); 
					FORMAT_STRING(THIS) = "#,##0"; 
                    END SCOPE;  	
					
					//1.48 PBO % vs PFC (bps)
					SCOPE([Measures].[PBO % vs PFC (bps)]); 
					THIS =  ROUND(([Measure].[Measure].&[T4_PBO001TO], [Measures].[Forecast Value], [Period].[Period].[vs PFC])*100,4); 
					FORMAT_STRING(THIS) = "#,##0"; 
                    END SCOPE;  	

                     //1.49 Overheads TO Forecast 
                    SCOPE([Measures].[Overheads TO Forecast]); 
                    THIS = ([Measure].[Measure].&[PTO_OVH],[Measures].[Forecast Value]);
                    FORMAT_STRING(THIS) = "#,##0.0";  
                    END SCOPE;   

					//1.50 Total Supply Chain costs per ton (SC Costs per Tons Forecast)
					SCOPE([Measures].[SC Costs per Tons Forecast]);
					THIS = DIVIDE(([Measure].[Measure].&[M2_SCC00R],[Measures].[Forecast Value]),([Measure].[Measure].&[M1_LTK001],[Measures].[Forecast Value]));
					FORMAT_STRING(THIS) = "#,##0.0";
					END SCOPE;
					
					//1.51 Total Supply Chain costs in % TO
					SCOPE([Measures].[SC Costs in % TO Forecast]);
					THIS = DIVIDE(([Measure].[Measure].&[M2_SCC00R],[Measures].[Forecast Value]),([Measure].[Measure].&[M1_TTO001],[Measures].[Forecast Value]))/100;
					FORMAT_STRING(THIS) = "#,##0.0%";
					END SCOPE;
                       
					
					-- Forecast Only Metrics 
					 
					//1.1 Turnover Forecast Only 
                    CREATE MEMBER CURRENTCUBE.[Measures].[Turnover Forecast Only]
                    AS NULL,
                    ASSOCIATED_MEASURE_GROUP = 'Forecast', DISPLAY_FOLDER = 'Forecast Only Metrics',
                    VISIBLE = 1;
					
					//1.51 Turnover Forecast Only 
					SCOPE([Measures].[Turnover Forecast Only]);
					THIS = ([Measure].[Measure].&[M1_TTO001],[Measures].[Forecast Value])-([Measure].[Measure].&[M1_TTO001],[Measures].[Value]);
					FORMAT_STRING(THIS) = "#,##0.0";
					END SCOPE;

					// 1.22s   BMI vs PY

					// 1.22A BMI vs PY = ([BMI: current period]-[BMI: prior period])
					SCOPE ([Measures].[BMI vs PY],[Date Comparison].[Date Comparison].[Current Period]); 
					THIS = ROUND(([Measure].[Measure].&[M4_MDC001],[Measures].[Value],[Date Comparison].[Date Comparison].[Current Period])-
					([Measure].[Measure].&[M4_MDC001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Period]),4);
					END SCOPE; 

					// 1.22B BMI vs PY = ([BMI: current QTD]-[BMI: prior QTD])
					SCOPE ([Measures].[BMI vs PY],[Date Comparison].[Date Comparison].[QTD]); 
					THIS = ROUND(([Measure].[Measure].&[M4_MDC001],[Measures].[Value],[Date Comparison].[Date Comparison].[QTD])-
					([Measure].[Measure].&[M4_MDC001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY QTD]),4);
					END SCOPE; 

					// 1.22C BMI vs PY = ([BMI: current YTD]-[BMI: prior YTD])
					SCOPE ([Measures].[BMI vs PY],[Date Comparison].[Date Comparison].[YTD]); 
					THIS = ROUND(([Measure].[Measure].&[M4_MDC001],[Measures].[Value],[Date Comparison].[Date Comparison].[YTD])-
					([Measure].[Measure].&[M4_MDC001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY YTD]),4);
					END SCOPE; 

					// 1.22D BMI vs PY = ([BMI: current MAT]-[BMI: prior MAT])
					SCOPE ([Measures].[BMI vs PY],[Date Comparison].[Date Comparison].[MAT]); 
					THIS = ROUND(([Measure].[Measure].&[M4_MDC001],[Measures].[Value],[Date Comparison].[Date Comparison].[MAT])-
					([Measure].[Measure].&[M4_MDC001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY MAT]),4);
					END SCOPE; 

					// 1.22E BMI vs PY = ([BMI: current Full Year]-[BMI: prior Full Year])
					SCOPE ([Measures].[BMI vs PY],[Date Comparison].[Date Comparison].[Full Year]); 
					THIS = ROUND(([Measure].[Measure].&[M4_MDC001],[Measures].[Value],[Date Comparison].[Date Comparison].[Full Year])-
					([Measure].[Measure].&[M4_MDC001],[Measures].[Value],[Date Comparison].[Date Comparison].[PY Full Year]),4);
					END SCOPE;


                    
                    // UVG Quarter and Half Year
                    SCOPE ([Measure].[Measure].&[M1_UVG],[Date Comparison].[Date Comparison].[Q1]); 
                    THIS =(IIF(ISEMPTY(AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro])))
                    or
                    ISEMPTY(AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))),
                    NULL,
                        DIVIDE(
                        AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                        +
                        AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_DAC],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                        ,
                        AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))
                        +
                    AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                    )-1)*100); 
                    END SCOPE;
  

                    SCOPE ([Measure].[Measure].&[M1_UVG],[Date Comparison].[Date Comparison].[Q2]); 
                    THIS =(IIF(ISEMPTY(AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro])))
                    or
                    ISEMPTY(AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))),
                    NULL,
                        DIVIDE(
                        AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                        +
                        AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_DAC],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                        ,
                        AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))
                        +
                    AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                    )-1)*100);
                    END SCOPE;
  
                        SCOPE ([Measure].[Measure].&[M1_UVG],[Date Comparison].[Date Comparison].[Q3]); 
                    THIS =(IIF(ISEMPTY(AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q3"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro])))
                    or
                    ISEMPTY(AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q3"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))),
                    NULL,
                        DIVIDE(
                        AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q3"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                        +
                        AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q3"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_DAC],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                        ,
                        AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q3"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))
                        +
                    AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q3"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                    )-1)*100); 
                    END SCOPE;
  
                        SCOPE ([Measure].[Measure].&[M1_UVG],[Date Comparison].[Date Comparison].[Q4]); 
                    THIS =(IIF(ISEMPTY(AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q4"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro])))
                    or
                    ISEMPTY(AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q4"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))),
                    NULL,
                        DIVIDE(
                        AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q4"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                        +
                        AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q4"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_DAC],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                        ,
                        AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q4"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))
                        +
                    AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Quarter Name].MEMBERVALUE="Q4"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                    )-1)*100); 
                    END SCOPE;

                SCOPE ([Measure].[Measure].&[M1_UVG],[Date Comparison].[Date Comparison].[HY2]); 
                THIS =(IIF(ISEMPTY(AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro])))
                or
                    ISEMPTY(AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))),
                NULL,
                    DIVIDE(
                    AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                    +
                AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_DAC],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                    ,
                    AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))
                +
                AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY2"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                )-1)*100); 
                END SCOPE; 


                SCOPE ([Measure].[Measure].&[M1_UVG],[Date Comparison].[Date Comparison].[HY1]); 
                THIS =(IIF(ISEMPTY(AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro])))
                or
                    ISEMPTY(AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))),
                NULL,
                    DIVIDE(
                    AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_DFTT01],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                    +
                AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_DAC],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                    ,
                    AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001],[Date Comparison].[Date Comparison].[PY Period],[Currency Scaling].[Currency Scaling].[Euro]))
                +
                AGGREGATE((FILTER([Calendar].[Month].MEMBERS,[Calendar].[Half Year Name].MEMBERVALUE="HY1"),[Calendar].[Year].CURRENTMEMBER,[Measure].[Measure].&[M1_TTO001_DSP],[Date Comparison].[Date Comparison].[Current Period],[Currency Scaling].[Currency Scaling].[Euro]))
                )-1)*100); 
                END SCOPE;

				
                //2. 9 Turnover vs PY
				SCOPE ([Measure].[Measure].&[M1_TTO001_PY],{[Period].[Period].[CY],[Period].[Period].[PY],[Period].[Period].[CFC],[Period].[Period].[PFC],[Period].[Period].[AT],[Period].[Period].[MCFC]}); 
                THIS = ROUND((([Measure].[Measure].&[M1_TTO001]) - ([Measure].[Measure].&[M1_TTO001],[Period].[Period].[PY])),4); 
                END SCOPE; 
					
				//2. 10 Turnover vs PFC
				SCOPE ([Measure].[Measure].&[M1_TTO001_PFC],{[Period].[Period].[CY],[Period].[Period].[PY],[Period].[Period].[CFC],[Period].[Period].[PFC],[Period].[Period].[AT],[Period].[Period].[MCFC]}); 
                THIS = ROUND((([Measure].[Measure].&[M1_TTO001]) - ([Measure].[Measure].&[M1_TTO001],[Period].[Period].[PFC])),4); 
                END SCOPE; 	

                //2. 9 Turnover vs PY
				SCOPE ([Measure].[Measure].&[M1_TTO001_PY],EXCEPT([Period].[Period].[All].Children,{[Period].[Period].[CY],[Period].[Period].[PY],[Period].[Period].[CFC],[Period].[Period].[PFC],[Period].[Period].[AT],[Period].[Period].[MCFC]})); 
                THIS = NULL; 
                END SCOPE; 
					
				//2. 10 Turnover vs PFC
				SCOPE ([Measure].[Measure].&[M1_TTO001_PFC],EXCEPT([Period].[Period].[All].Children,{[Period].[Period].[CY],[Period].[Period].[PY],[Period].[Period].[CFC],[Period].[Period].[PFC],[Period].[Period].[AT],[Period].[Period].[MCFC]})); 
                THIS = NULL; 
                END SCOPE;

						SCOPE([Period].[Period].[vs PY]); 
						THIS = [Period].[Period].[CY]-[Period].[Period].[PY]; 
						FORMAT_STRING(THIS) = "#,##0.0";
						END SCOPE; 

                        SCOPE([Period].[Period].[vs NY]); 
						THIS = [Period].[Period].[NY]-[Period].[Period].[CY]; 
						FORMAT_STRING(THIS) = "#,##0.0";
						END SCOPE; 

						SCOPE([Period].[Period].[vs PFC]); 
						THIS = ([Period].[Period].[CY] - [Period].[Period].[PFC]); 
						FORMAT_STRING(THIS) = "#,##0.0";
						END SCOPE; 

						SCOPE([Period].[Period].[vs CFC]); 
						THIS = ([Period].[Period].[CY] - [Period].[Period].[CFC]); 
						FORMAT_STRING(THIS) = "#,##0.0";
						END SCOPE; 

						SCOPE([Period].[Period].[% vs PY]); 
						THIS = IIF ([Period].[Period].[vs PY] = 0 OR ISEMPTY([Period].[Period].[vs PY]) OR
						[Period].[Period].[PY] = 0 OR ISEMPTY([Period].[Period].[PY])
						,NULL
						,   (([Period].[Period].[vs PY])/([Period].[Period].[PY])*100)
						); 
                        FORMAT_STRING(THIS) = "#,##0.0";
						END SCOPE; 

						SCOPE([Period].[Period].[% vs NY]); 
						THIS = IIF ([Period].[Period].[vs NY] = 0 OR ISEMPTY([Period].[Period].[vs NY]) OR
						[Period].[Period].[CY] = 0 OR ISEMPTY([Period].[Period].[CY])
						,NULL
						,   (([Period].[Period].[vs NY])/([Period].[Period].[CY])*100)
						); 
                        FORMAT_STRING(THIS) = "#,##0.0";
						END SCOPE; 

						SCOPE([Period].[Period].[% vs PFC]); 
						THIS = IIF ([Period].[Period].[vs PFC] = 0 OR ISEMPTY([Period].[Period].[vs PFC]) OR
						[Period].[Period].[PFC] = 0 OR ISEMPTY([Period].[Period].[PFC])
						,NULL
						,   (([Period].[Period].[vs PFC])/([Period].[Period].[PFC])*100)
						); 
                        FORMAT_STRING(THIS) = "#,##0.0";
						END SCOPE; 

						SCOPE([Period].[Period].[% vs CFC]); 
						THIS = IIF ([Period].[Period].[vs CFC] = 0 OR ISEMPTY([Period].[Period].[vs CFC]) OR
						[Period].[Period].[CFC] = 0 OR ISEMPTY([Period].[Period].[CFC])
						,NULL
						,   (([Period].[Period].[vs CFC])/([Period].[Period].[CFC])*100)
						); 
                        FORMAT_STRING(THIS) = "#,##0.0";
						END SCOPE; 				
										
						//CFC vs PFC 
						SCOPE([Period].[Period].[CFC vs PFC]); 
						THIS = [Period].[Period].[CFC]-[Period].[Period].[PFC]; 
						FORMAT_STRING(THIS) = "#,##0.0";
						END SCOPE; 
							
						//CFC vs AT
						SCOPE([Period].[Period].[CFC vs AT]); 
						THIS = [Period].[Period].[CFC]-[Period].[Period].[AT]; 
						FORMAT_STRING(THIS) = "#,##0.0";
						END SCOPE; 
							
						//CFC vs PY
						SCOPE([Period].[Period].[CFC vs PY]); 
						THIS = [Period].[Period].[CFC]-[Period].[Period].[PY]; 
                        FORMAT_STRING(THIS) = "#,##0.0";
						END SCOPE; 

						//PFC vs PY
						SCOPE([Period].[Period].[PFC vs PY]); 
						THIS = [Period].[Period].[PFC]-[Period].[Period].[PY]; 
						FORMAT_STRING(THIS) = "#,##0.0";
						END SCOPE; 
							
						//AT vs PY
						SCOPE([Period].[Period].[AT vs PY]); 
						THIS = [Period].[Period].[AT]-[Period].[Period].[PY]; 
						FORMAT_STRING(THIS) = "#,##0.0";
						END SCOPE; 
							
						//CFC vs MCFC
						SCOPE([Period].[Period].[CFC vs MCFC]); 
						THIS = [Period].[Period].[CFC]-[Period].[Period].[MCFC]; 
						FORMAT_STRING(THIS) = "#,##0.0";
						END SCOPE; 
							
						//MCFC vs PY
						SCOPE([Period].[Period].[MCFC vs PY]); 
						THIS = [Period].[Period].[MCFC]-[Period].[Period].[PY]; 
						FORMAT_STRING(THIS) = "#,##0.0";
						END SCOPE; 
						
						//% TO FC
						SCOPE([Period].[Period].[% TO FC]); 
						THIS = IIF( ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Period].[Period].[CY])) OR ([Measure].[Measure].&[M1_TTO001],[Period].[Period].[CY]) = 0
                        , NULL
                        , IIF([Measure].[Measure].CURRENTMEMBER.Properties('Measure Type')='Value',
                        (([Period].[Period].[CY])/([Measure].[Measure].&[M1_TTO001],[Period].[Period].[CY]))
                        ,NULL)); 
                        FORMAT_STRING(THIS) = "#,##0.0%";						
                        END SCOPE;

						//% TO vs PY (bps)
						SCOPE([Period].[Period].[% TO vs PY (bps)]); 
						THIS = IIF( ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Period].[Period].[CY])) OR ([Measure].[Measure].&[M1_TTO001],[Period].[Period].[CY]) = 0
                        OR ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Period].[Period].[PY])) OR ([Measure].[Measure].&[M1_TTO001],[Period].[Period].[PY]) = 0
                        , NULL
                        , IIF([Measure].[Measure].CURRENTMEMBER.Properties('Measure Type')='Value',
                        ((([Period].[Period].[CY])/([Measure].[Measure].&[M1_TTO001],[Period].[Period].[CY])*100)
						-(([Period].[Period].[PY])/([Measure].[Measure].&[M1_TTO001],[Period].[Period].[PY])*100))*100
                        ,NULL)
                        ); 
                        FORMAT_STRING(THIS) = "#,##0";						
                        END SCOPE;

						//% TO vs PFC (bps)
						SCOPE([Period].[Period].[% TO vs PFC (bps)]); 
						THIS = IIF( ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Period].[Period].[CY])) OR ([Measure].[Measure].&[M1_TTO001],[Period].[Period].[CY]) = 0
                        OR ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Period].[Period].[PFC])) OR ([Measure].[Measure].&[M1_TTO001],[Period].[Period].[PFC]) = 0
                        , NULL
                        , IIF([Measure].[Measure].CURRENTMEMBER.Properties('Measure Type')='Value',
                        ROUND(((([Period].[Period].[CY])/([Measure].[Measure].&[M1_TTO001],[Period].[Period].[CY])*100)
						-(([Period].[Period].[PFC])/([Measure].[Measure].&[M1_TTO001],[Period].[Period].[PFC])*100))*100,0)
                        ,NULL)
                        ); 
                        FORMAT_STRING(THIS) = "#,##0";						
                        END SCOPE;

						//TO FC
						SCOPE([Period].[Period].[TO FC]); 
						THIS = IIF( ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Period].[Period].[CY])) OR ([Measure].[Measure].&[M1_TTO001],[Period].[Period].[CY]) = 0
                        , NULL
                        , IIF([Measure].[Measure].CURRENTMEMBER.Properties('Measure Type')='Value',
                        (([Period].[Period].[CY])/([Measure].[Measure].&[M1_TTO001],[Period].[Period].[CY])*100)
                        ,NULL)); 
                        FORMAT_STRING(THIS) = "#,##0.0";						
                        END SCOPE;

                        //TO FC only
						SCOPE([Period].[Period].[TO FC only],[Measures].[Forecast Value]); 
						THIS = IIF( ISEMPTY(([Measure].[Measure].&[M1_TTO001],[Period].[Period].[CY])) OR ([Measure].[Measure].&[M1_TTO001],[Period].[Period].[CY]) = 0
                        , NULL
                        , IIF([Measure].[Measure].CURRENTMEMBER.Properties('Measure Type')='Value',
                        (([Period].[Period].[CY])/([Measure].[Measure].&[M1_TTO001],[Period].[Period].[CY])*100)
                        ,NULL)); 
                        FORMAT_STRING(THIS) = "#,##0.0";						
                        END SCOPE;

						//TO FC only - Current Forecast and MCFC
						SCOPE([Period].[Period].[TO FC only],{[Scenario FC].[Scenario FC].[Current Forecast],[Scenario FC].[Scenario FC].[Machine Forecast]},{ HEAD([Calendar].[Month].[Month].MEMBERS,1).ITEM(0):FILTER([Calendar].[Month].Members			
                        ,[Calendar].[Month].CurrentMember.Properties( "Current Forecast Month")			
                        ).ITEM(0).Prevmember}); 
						THIS = NULL;
                        END SCOPE;                        
                        
                        //TO FC only - Previous Forecast
						SCOPE([Period].[Period].[TO FC only],[Scenario FC].[Scenario FC].[Previous Forecast],{ HEAD([Calendar].[Month].[Month].MEMBERS,1).ITEM(0):FILTER([Calendar].[Month].Members			
                        ,[Calendar].[Month].CurrentMember.Properties( "Previous Forecast Month")			
                        ).ITEM(0).Prevmember}); 
						THIS = NULL;
                        END SCOPE;

                        //TO FC only - Annual Target
						SCOPE([Period].[Period].[TO FC only],[Scenario FC].[Scenario FC].[Annual Target],{ HEAD([Calendar].[Month].[Month].MEMBERS,1).ITEM(0):FILTER([Calendar].[Month].Members			
                        ,[Calendar].[Month].CurrentMember.Properties( "Current Month Flag")			
                        ).ITEM(0).PARENT.FIRSTSIBLING.FIRSTCHILD.Prevmember}); 
						THIS = NULL;
                        END SCOPE;

                        //TO FC only - CFC Q
						SCOPE([Period].[Period].[TO FC only],[Scenario FC].[Scenario FC].[Victory Quarterly Current Forecast],{ HEAD([Calendar].[Month].[Month].MEMBERS,1).ITEM(0):FILTER([Calendar].[Month].Members			
                        ,[Calendar].[Month].CurrentMember.Properties("Current Victory Forecast Quarter")			
                        ).ITEM(0).Prevmember}); 
						THIS = NULL;
                        END SCOPE;

                        //TO FC only - CFC M
						SCOPE([Period].[Period].[TO FC only],[Scenario FC].[Scenario FC].[Victory Monthly Current Forecast],{ HEAD([Calendar].[Month].[Month].MEMBERS,1).ITEM(0):FILTER([Calendar].[Month].Members			
                        ,[Calendar].[Month].CurrentMember.Properties("Current Victory Forecast Month")			
                        ).ITEM(0).Prevmember}); 
						THIS = NULL;
                        END SCOPE;

                        //TO FC only - PFC Q
						SCOPE([Period].[Period].[TO FC only],[Scenario FC].[Scenario FC].[Victory Quarterly Previous Forecast],{ HEAD([Calendar].[Month].[Month].MEMBERS,1).ITEM(0):FILTER([Calendar].[Month].Members			
                        ,[Calendar].[Month].CurrentMember.Properties( "Previous Victory Forecast Quarter")			
                        ).ITEM(0).Prevmember}); 
						THIS = NULL;
                        END SCOPE;

                        //TO FC only - PFC M
						SCOPE([Period].[Period].[TO FC only],[Scenario FC].[Scenario FC].[Victory Monthly Previous Forecast],{ HEAD([Calendar].[Month].[Month].MEMBERS,1).ITEM(0):FILTER([Calendar].[Month].Members			
                        ,[Calendar].[Month].CurrentMember.Properties("Previous Victory Forecast Month")			
                        ).ITEM(0).Prevmember}); 
						THIS = NULL;
                        END SCOPE;


						//TO Act
						SCOPE([Period].[Period].[TO Act]); 
						THIS = IIF([Measure].[Measure].CURRENTMEMBER.Properties('Measure Type')='Value',
                        (([Measures].[Value],[Period].[Period].[CY])/([Measures].[Value],[Measure].[Measure].&[M1_TTO001],[Period].[Period].[CY])*100)
                        ,NULL); 
                        FORMAT_STRING(THIS) = "#,##0.0";						
                        END SCOPE;

                    //fin 
						
					//Change - 5269
						
						----------------------------------------------- NRM Measures ----------------------------------------
                        
                        // 1.35 NRM Turnover Change % 
                        CREATE MEMBER CURRENTCUBE.[Measures].[NRM Turnover Change %]
                        AS NULL,
                        ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
                        VISIBLE = 1;

                        SCOPE([Measures].[NRM Turnover Change %]); 
                        THIS =IIF((([Measures].[NRM Turnover PY],[Volume Ratio].[Volume Ratio].&[1]) = 0 OR ISEMPTY(([Measures].[NRM Turnover PY],[Volume Ratio].[Volume Ratio].&[1]))),NULL,
                        ROUND(((([Measures].[NRM Turnover CY],[Volume Ratio].[Volume Ratio].&[1])/([Measures].[NRM Turnover PY],[Volume Ratio].[Volume Ratio].&[1]))-1),4)); 
                        FORMAT_STRING(THIS) = "#,##0.0%"; 
                        END SCOPE;

                        // 1.36 NRM Volume Change %
                        CREATE MEMBER CURRENTCUBE.[Measures].[NRM Volume Change %]
                        AS NULL,
                        ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
                        VISIBLE = 1;

                        SCOPE([Measures].[NRM Volume Change %]); 
                        THIS =IIF(([Measures].[NRM Volume PY] = 0 OR ISEMPTY([Measures].[NRM Volume PY])),NULL,
                        ROUND((([Measures].[NRM Volume CY]/[Measures].[NRM Volume PY])-1),4)); 
                        FORMAT_STRING(THIS) = "#,##0.0%"; 
                        END SCOPE;


                        // 1.37 TO/VOL CY
                        CREATE MEMBER CURRENTCUBE.[Measures].[TO/VOL CY]
                        AS NULL,
                        ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
                        VISIBLE = 1;

                        SCOPE([Measures].[TO/VOL CY]);
                        THIS = IIF(([Measures].[NRM Volume CY] = 0 OR ISEMPTY([Measures].[NRM Volume CY])),NULL,
                        ROUND((([Measures].[NRM Turnover CY]/[Measures].[NRM Volume CY])*1000),4));
                        FORMAT_STRING(THIS) = "#,##0.0";
                        END SCOPE;

                        // 1.38 TO/VOL PY
                        CREATE MEMBER CURRENTCUBE.[Measures].[TO/VOL PY]
                        AS NULL,
                        ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
                        VISIBLE = 1;

                        SCOPE([Measures].[TO/VOL PY]);
                        THIS = IIF(([Measures].[NRM Volume PY] = 0 OR ISEMPTY([Measures].[NRM Volume PY])),NULL,
                        ROUND((([Measures].[NRM Turnover PY]/[Measures].[NRM Volume PY])*1000),4));
                        FORMAT_STRING(THIS) = "#,##0.0";
                        END SCOPE;


                        // 1.39 NRR Growth
                        CREATE MEMBER CURRENTCUBE.[Measures].[NRR Growth] 
                        AS NULL,
                        ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
                        VISIBLE = 1;

                        SCOPE([Measures].[NRR Growth]);
                        THIS = IIF((([Measures].[TO/VOL PY],[Volume Ratio].[Volume Ratio].&[1]) = 0 OR ISEMPTY(([Measures].[TO/VOL PY],[Volume Ratio].[Volume Ratio].&[1]))),NULL,
                        ROUND((((([Measures].[TO/VOL CY],[Volume Ratio].[Volume Ratio].&[1])/([Measures].[TO/VOL PY],[Volume Ratio].[Volume Ratio].&[1]))-1)*100),4));
                        FORMAT_STRING(THIS) = "#,##0.0";
                        END SCOPE;

                        // 1.40 NRR Growth %
                        CREATE MEMBER CURRENTCUBE.[Measures].[NRR Growth %] 
                        AS NULL,
                        ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
                        VISIBLE = 1;

                        SCOPE([Measures].[NRR Growth %]);
                        THIS = IIF((([Measures].[TO/VOL PY],[Volume Ratio].[Volume Ratio].&[1]) = 0 OR ISEMPTY(([Measures].[TO/VOL PY],[Volume Ratio].[Volume Ratio].&[1]))),NULL,
                        ROUND(((([Measures].[TO/VOL CY],[Volume Ratio].[Volume Ratio].&[1])/([Measures].[TO/VOL PY],[Volume Ratio].[Volume Ratio].&[1]))-1),4));
                        FORMAT_STRING(THIS) = "#,##0.0%";
                        END SCOPE;


                        // 1.41 Volume Conv Rate CY
                        CREATE MEMBER CURRENTCUBE.[Measures].[Volume Conv Rate CY]
                        AS NULL,
                        ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
                        VISIBLE = 1;

                        SCOPE ([Measures].[Volume Conv Rate CY]);
                        THIS = IIF((([Measures].[Sales Volume - Tons (Primary)],[Scenario].[Scenario Type].[Local MCO]) = 0 OR ISEMPTY(([Measures].[Sales Volume - Tons (Primary)],[Scenario].[Scenario Type].[Local MCO]))),NULL,
                        ROUND(([Measures].[NRM Volume CY]/([Measures].[Sales Volume - Tons (Primary)],[Scenario].[Scenario Type].[Local MCO])),4));
                        FORMAT_STRING(THIS) = "#,##0.0";
                        END SCOPE;

                        // 1.42 Volume Conv Rate PY
                        CREATE MEMBER CURRENTCUBE.[Measures].[Volume Conv Rate PY]
                        AS NULL,
                        ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
                        VISIBLE = 1;

                        SCOPE ([Measures].[Volume Conv Rate PY]); 
                        THIS = IIF((([Measures].[PY Sales Volume - Tons],[Scenario].[Scenario Type].[Local MCO]) = 0 OR ISEMPTY(([Measures].[PY Sales Volume - Tons],[Scenario].[Scenario Type].[Local MCO]))),NULL,
                        ROUND(([Measures].[NRM Volume PY]/([Measures].[PY Sales Volume - Tons],[Scenario].[Scenario Type].[Local MCO])),4));
                        FORMAT_STRING(THIS) = "#,##0.0";
                        END SCOPE;
										
						// NRM Turnover Change
                        CREATE MEMBER CURRENTCUBE.[Measures].[NRM Turnover Change]
                        AS NULL,
                        ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
                        VISIBLE = 1;

						SCOPE([Measures].[NRM Turnover Change]);
                        THIS =IIF((([Measures].[NRM Turnover PY],[Volume Ratio].[Volume Ratio].&[1]) = 0 OR ISEMPTY(([Measures].[NRM Turnover PY],[Volume Ratio].[Volume Ratio].&[1]))),NULL,
                        ROUND((((([Measures].[NRM Turnover CY],[Volume Ratio].[Volume Ratio].&[1])/([Measures].[NRM Turnover PY],[Volume Ratio].[Volume Ratio].&[1]))-1)*100),4)); 
                        FORMAT_STRING(THIS) = "#,##0.0";
                        END SCOPE;

                        // NRM Volume Change
                        CREATE MEMBER CURRENTCUBE.[Measures].[NRM Volume Change]
                        AS NULL,
                        ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
                        VISIBLE = 1;

                        SCOPE([Measures].[NRM Volume Change]);
                        THIS = IIF(([Measures].[NRM Volume PY] = 0 OR ISEMPTY([Measures].[NRM Volume PY])),NULL,
                        ROUND(((([Measures].[NRM Volume CY]/[Measures].[NRM Volume PY])-1)*100),4));
                        FORMAT_STRING(THIS) = "#,##0.0"; 
                        END SCOPE;
						
						
						// GMI RSV Growth %
						CREATE MEMBER CURRENTCUBE.[Measures].[GMI RSV Growth %]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1;
						
						SCOPE([Measures].[GMI RSV Growth %]);
                        THIS = IIF(([GMI Market Value PY],[Date Comparison].[Date Comparison].[Current Period]) = 0 OR ([GMI Market Value CY],[Date Comparison].[Date Comparison].[Current Period]) = 0, NULL, 
						([GMI Market Value CY] - [GMI Market Value PY])/[GMI Market Value PY]);
						FORMAT_STRING(THIS) = "#,##0.0%";
                        END SCOPE;
						
						
						// NRM Turnover vs PY
						CREATE MEMBER CURRENTCUBE.[Measures].[NRM Turnover vs PY]
						AS NULL,
						ASSOCIATED_MEASURE_GROUP = 'NRM Measures', DISPLAY_FOLDER = 'NRM Metrics',
						VISIBLE = 1;
						 
						SCOPE ([Measures].[NRM Turnover vs PY]); 
						THIS = ROUND(([Measures].[NRM Turnover CY] - [Measures].[NRM Turnover PY]),4);
                        FORMAT_STRING(THIS) = "#,##0.0"; 
						END SCOPE;
						
						
                        SCOPE({FILTER([Calendar].[Month].Members,[Calendar].[Month].CurrentMember.Properties( "Current Month Flag" )).ITEM(0):TAIL
					    ([Calendar].[Month].[Month].MEMBERS,1).ITEM(0)},[Scenario FC].[Scenario FC].[Current Forecast],[Measures].[Forecast Only Value -1M]);                                               
                        THIS  = ([Measures].[Forecast Value]); 
                        FORMAT_STRING(THIS) = "#,##0.0;-#,##0.0";
                        END SCOPE; 
                                                                                
                        SCOPE([Scenario FC].[Scenario FC].[Previous Forecast],[Measures].[Forecast Only Value -1M]
                        ,{FILTER([Calendar].[Month].Members,[Calendar].[Month].CurrentMember.Properties("Previous Forecast Month")).ITEM(0).LAG(1)
					    :TAIL([Calendar].[Month].[Month].MEMBERS,1).ITEM(0)});                                             
                        THIS  = [Measures].[Forecast Value]; 
                        FORMAT_STRING(THIS) = "#,##0.0;-#,##0.0";
                        END SCOPE; 


						//Change for the Scenario = 'Victory vs Local MCO'
                        SCOPE([Scenario].[Scenario].[MCO vs Victory]);
                        THIS = ([Scenario].[Scenario Type].[Local MCO] - [Scenario].[Scenario Type].[Victory]);
                        END SCOPE;